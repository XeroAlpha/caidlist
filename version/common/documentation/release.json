{
    "__VERSION__": "1.21.30.3",
    "__COMMITHASH__": "14404383059147f3f19aae34836c1e8f209bd2df",
    "__MESSAGE__": "v1.21.30.3",
    "index": {
        "Addons": {
            "name": "ADDONS DOCUMENTATION",
            "sections": [
                {
                    "name": "Blocks",
                    "sections": [
                        {
                            "name": "AuxValueToBlockStatesMap",
                            "sections": [
                                {
                                    "name": "List of all Aux-Values supported and what they equate to as Block-States",
                                },
                            ],
                        },
                        {
                            "name": "BlockStates",
                            "sections": [
                                {
                                    "name": "List of all BlockStates",
                                },
                            ],
                        },
                        {
                            "name": "BlockTraits",
                            "sections": [
                                {
                                    "name": "List of all Block Traits",
                                },
                            ],
                        },
                        {
                            "name": "Blocks",
                            "sections": [
                                {
                                    "name": "List of fully-qualified block names",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "Entities",
                },
                {
                    "name": "Entity Damage Source",
                },
                {
                    "name": "Items",
                },
                {
                    "name": "manifest.json",
                    "sections": [
                        {
                            "name": "Examples",
                        },
                    ],
                },
            ],
        },
        "Animations": {
            "name": "ANIMATIONS DOCUMENTATION",
            "sections": [
                {
                    "name": "Animation Controllers",
                    "sections": [
                        {
                            "name": "State Blending",
                        },
                        {
                            "name": "State Transitions",
                        },
                        {
                            "name": "States",
                            "sections": [
                                {
                                    "name": "State Variables",
                                    "sections": [
                                        {
                                            "name": "For Example:",
                                        },
                                    ],
                                },
                                {
                                    "name": "User-Defined Script Example",
                                    "sections": [
                                        {
                                            "name": "In definitions\\entity\\tiger.json:",
                                        },
                                    ],
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "Channels (Rotation, Position, Scale)",
                },
                {
                    "name": "Entity Animation Format Examples",
                },
                {
                    "name": "Getting Started",
                    "sections": [
                        {
                            "name": "Adding Animations",
                            "sections": [
                                {
                                    "name": "Animation Controller",
                                },
                                {
                                    "name": "Animations",
                                    "sections": [
                                        {
                                            "name": "Animation data can be either raw data:",
                                        },
                                        {
                                            "name": "or a run-time interpreted script:",
                                        },
                                    ],
                                },
                                {
                                    "name": "Entity Definition",
                                    "sections": [
                                        {
                                            "name": "Note",
                                        },
                                    ],
                                },
                            ],
                        },
                        {
                            "name": "Animation Hierarchy",
                        },
                        {
                            "name": "Upgrade from v1.10 to v1.17.30",
                        },
                        {
                            "name": "Upgrade from v1.17.30 to v1.18.10",
                        },
                        {
                            "name": "Upgrade from v1.18.10 to v1.18.20",
                        },
                        {
                            "name": "Upgrade from v1.7 Beta to v1.8",
                        },
                        {
                            "name": "Upgrade from v1.8 Beta to v1.10",
                        },
                    ],
                },
                {
                    "name": "Key Frames",
                    "sections": [
                        {
                            "name": "Interpolation",
                            "sections": [
                                {
                                    "name": "Continuous Example",
                                },
                                {
                                    "name": "Discontinuous Example",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "Names",
                },
                {
                    "name": "Overview",
                },
                {
                    "name": "Render Controllers",
                    "sections": [
                        {
                            "name": "Examples",
                            "sections": [
                                {
                                    "name": "Note",
                                },
                            ],
                        },
                        {
                            "name": "Getting Started",
                        },
                    ],
                },
                {
                    "name": "Transforms",
                },
            ],
        },
        "Biomes": {
            "name": "BIOMES DOCUMENTATION",
            "sections": [
                {
                    "name": "Overview",
                },
                {
                    "name": "JSON Format",
                },
                {
                    "name": "Adding Biomes",
                },
                {
                    "name": "Schema",
                    "sections": [
                        {
                            "name": "Biome Components",
                        },
                        {
                            "name": "Biome Definition",
                        },
                        {
                            "name": "Biome Description",
                        },
                        {
                            "name": "Biome JSON File",
                        },
                        {
                            "name": "Block Specifier",
                        },
                        {
                            "name": "Molang Expression",
                        },
                        {
                            "name": "minecraft:capped_surface",
                        },
                        {
                            "name": "minecraft:climate",
                        },
                        {
                            "name": "minecraft:frozen_ocean_surface",
                        },
                        {
                            "name": "minecraft:mesa_surface",
                        },
                        {
                            "name": "minecraft:mountain_parameters",
                        },
                        {
                            "name": "minecraft:mountain_parameters - steep_material_adjustment settings",
                        },
                        {
                            "name": "minecraft:mountain_parameters - top_slide settings",
                        },
                        {
                            "name": "minecraft:multinoise_generation_rules",
                        },
                        {
                            "name": "minecraft:overworld_generation_rules",
                        },
                        {
                            "name": "minecraft:overworld_generation_rules - Weighted biome names settings",
                        },
                        {
                            "name": "minecraft:overworld_generation_rules - Weighted climate categories settings",
                        },
                        {
                            "name": "minecraft:overworld_height",
                        },
                        {
                            "name": "minecraft:surface_material_adjustments",
                        },
                        {
                            "name": "minecraft:surface_material_adjustments - surface adjustment materials settings",
                        },
                        {
                            "name": "minecraft:surface_material_adjustments - surface adjustment settings",
                        },
                        {
                            "name": "minecraft:surface_parameters",
                        },
                        {
                            "name": "minecraft:swamp_surface",
                        },
                        {
                            "name": "minecraft:tags",
                        },
                        {
                            "name": "minecraft:the_end_surface",
                        },
                    ],
                },
            ],
        },
        "Blocks": {
            "name": "BLOCKS DOCUMENTATION",
            "sections": [
                {
                    "name": "Blocks",
                    "sections": [
                        {
                            "name": "Block Components",
                        },
                        {
                            "name": "Block Definition Properties",
                            "sections": [
                                {
                                    "name": "Code Example",
                                },
                            ],
                        },
                        {
                            "name": "Block Description Properties",
                        },
                        {
                            "name": "Block Event Responses",
                            "sections": [
                                {
                                    "name": "Code Example",
                                },
                            ],
                        },
                        {
                            "name": "Block Trigger Components",
                        },
                    ],
                },
            ],
        },
        "Entities": {
            "name": "ENTITIES DOCUMENTATION",
            "sections": [
                {
                    "name": "Client Entity Documentation",
                    "sections": [
                        {
                            "name": "Spawn Egg",
                            "sections": [
                                {
                                    "name": "Hex Value",
                                },
                                {
                                    "name": "Texture",
                                },
                            ],
                        },
                        {
                            "name": "animation_controllers",
                        },
                        {
                            "name": "animations",
                        },
                        {
                            "name": "enable_attachables",
                        },
                        {
                            "name": "held_item_ignores_lighting",
                        },
                        {
                            "name": "hide_armor",
                        },
                        {
                            "name": "identifier",
                        },
                        {
                            "name": "locators",
                        },
                        {
                            "name": "materials, textures, animations",
                        },
                        {
                            "name": "min_engine_version",
                        },
                        {
                            "name": "particle",
                        },
                        {
                            "name": "render_controllers",
                        },
                        {
                            "name": "scripts",
                        },
                    ],
                },
                {
                    "name": "Data-Driven Spawning",
                    "sections": [
                        {
                            "name": "Spawn Rules",
                            "sections": [
                                {
                                    "name": "Biome Tags",
                                },
                                {
                                    "name": "Conditions",
                                    "sections": [
                                        {
                                            "name": "Components",
                                        },
                                    ],
                                },
                                {
                                    "name": "Getting Started",
                                },
                                {
                                    "name": "Tagged Biomes",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "Filters",
                    "sections": [
                        {
                            "name": "actor_health",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "all_slots_empty",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "any_slot_empty",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "bool_property",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "clock_time",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "distance_to_nearest_player",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "enum_property",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "float_property",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_ability",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_biome_tag",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_component",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_container_open",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_damage",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_damaged_equipment",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_equipment",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_mob_effect",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_nametag",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_property",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_ranged_weapon",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_silk_touch",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_tag",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_target",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "has_trade_supply",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "hourly_clock_time",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "in_block",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "in_caravan",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "in_clouds",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "in_contact_with_water",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "in_lava",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "in_nether",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "in_overworld",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "in_water",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "in_water_or_rain",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "inactivity_timer",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "int_property",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_altitude",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_avoiding_mobs",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_baby",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_biome",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_block",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_brightness",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_climbing",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_color",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_daytime",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_difficulty",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_family",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_game_rule",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_humid",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_immobile",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_in_village",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_leashed",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_leashed_to",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_mark_variant",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_missing_health",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_moving",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_navigating",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_owner",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_panicking",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_persistent",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_raider",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_riding",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_sitting",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_skin_id",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_sleeping",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_sneak_held",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_sneaking",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_snow_covered",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_sprinting",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_target",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_temperature_type",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_temperature_value",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_underground",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_underwater",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_variant",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_visible",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_waterlogged",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "is_weather",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "light_level",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "moon_intensity",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "moon_phase",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "on_fire",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "on_ground",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "on_hot_block",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "on_ladder",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "owner_distance",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "random_chance",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "rider_count",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "surface_mob",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "taking_fire_damage",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "target_distance",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "trusts",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "was_last_hurt_by",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "weather",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                            ],
                        },
                        {
                            "name": "weather_at_position",
                            "sections": [
                                {
                                    "name": "Examples",
                                },
                                {
                                    "name": "Example:",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "Server Entity Documentation",
                    "sections": [
                        {
                            "name": "AI Goals",
                            "sections": [
                                {
                                    "name": "minecraft:behavior.admire_item",
                                },
                                {
                                    "name": "minecraft:behavior.avoid_block",
                                },
                                {
                                    "name": "minecraft:behavior.avoid_mob_type",
                                },
                                {
                                    "name": "minecraft:behavior.barter",
                                },
                                {
                                    "name": "minecraft:behavior.beg",
                                },
                                {
                                    "name": "minecraft:behavior.break_door",
                                },
                                {
                                    "name": "minecraft:behavior.breed",
                                },
                                {
                                    "name": "minecraft:behavior.celebrate",
                                },
                                {
                                    "name": "minecraft:behavior.celebrate_survive",
                                },
                                {
                                    "name": "minecraft:behavior.charge_attack",
                                },
                                {
                                    "name": "minecraft:behavior.charge_held_item",
                                },
                                {
                                    "name": "minecraft:behavior.circle_around_anchor",
                                },
                                {
                                    "name": "minecraft:behavior.controlled_by_player",
                                },
                                {
                                    "name": "minecraft:behavior.croak",
                                },
                                {
                                    "name": "minecraft:behavior.defend_trusted_target",
                                },
                                {
                                    "name": "minecraft:behavior.defend_village_target",
                                },
                                {
                                    "name": "minecraft:behavior.delayed_attack",
                                },
                                {
                                    "name": "minecraft:behavior.dig",
                                },
                                {
                                    "name": "minecraft:behavior.door_interact",
                                },
                                {
                                    "name": "minecraft:behavior.dragonchargeplayer",
                                },
                                {
                                    "name": "minecraft:behavior.dragondeath",
                                },
                                {
                                    "name": "minecraft:behavior.dragonflaming",
                                },
                                {
                                    "name": "minecraft:behavior.dragonholdingpattern",
                                },
                                {
                                    "name": "minecraft:behavior.dragonlanding",
                                },
                                {
                                    "name": "minecraft:behavior.dragonscanning",
                                },
                                {
                                    "name": "minecraft:behavior.dragonstrafeplayer",
                                },
                                {
                                    "name": "minecraft:behavior.dragontakeoff",
                                },
                                {
                                    "name": "minecraft:behavior.drink_milk",
                                },
                                {
                                    "name": "minecraft:behavior.drink_potion",
                                },
                                {
                                    "name": "minecraft:behavior.drop_item_for",
                                },
                                {
                                    "name": "minecraft:behavior.eat_block",
                                },
                                {
                                    "name": "minecraft:behavior.eat_carried_item",
                                },
                                {
                                    "name": "minecraft:behavior.eat_mob",
                                },
                                {
                                    "name": "minecraft:behavior.emerge",
                                },
                                {
                                    "name": "minecraft:behavior.enderman_leave_block",
                                },
                                {
                                    "name": "minecraft:behavior.enderman_take_block",
                                },
                                {
                                    "name": "minecraft:behavior.equip_item",
                                },
                                {
                                    "name": "minecraft:behavior.explore_outskirts",
                                },
                                {
                                    "name": "minecraft:behavior.fertilize_farm_block",
                                },
                                {
                                    "name": "minecraft:behavior.find_cover",
                                },
                                {
                                    "name": "minecraft:behavior.find_mount",
                                },
                                {
                                    "name": "minecraft:behavior.find_underwater_treasure",
                                },
                                {
                                    "name": "minecraft:behavior.fire_at_target",
                                },
                                {
                                    "name": "minecraft:behavior.flee_sun",
                                },
                                {
                                    "name": "minecraft:behavior.float",
                                },
                                {
                                    "name": "minecraft:behavior.float_wander",
                                },
                                {
                                    "name": "minecraft:behavior.follow_caravan",
                                },
                                {
                                    "name": "minecraft:behavior.follow_mob",
                                },
                                {
                                    "name": "minecraft:behavior.follow_owner",
                                },
                                {
                                    "name": "minecraft:behavior.follow_parent",
                                },
                                {
                                    "name": "minecraft:behavior.follow_target_captain",
                                },
                                {
                                    "name": "minecraft:behavior.go_and_give_items_to_noteblock",
                                },
                                {
                                    "name": "minecraft:behavior.go_and_give_items_to_owner",
                                },
                                {
                                    "name": "minecraft:behavior.go_home",
                                },
                                {
                                    "name": "minecraft:behavior.guardian_attack",
                                },
                                {
                                    "name": "minecraft:behavior.harvest_farm_block",
                                },
                                {
                                    "name": "minecraft:behavior.hide",
                                },
                                {
                                    "name": "minecraft:behavior.hold_ground",
                                },
                                {
                                    "name": "minecraft:behavior.hurt_by_target",
                                },
                                {
                                    "name": "minecraft:behavior.inspect_bookshelf",
                                },
                                {
                                    "name": "minecraft:behavior.investigate_suspicious_location",
                                },
                                {
                                    "name": "minecraft:behavior.jump_around_target",
                                },
                                {
                                    "name": "minecraft:behavior.jump_to_block",
                                },
                                {
                                    "name": "minecraft:behavior.knockback_roar",
                                },
                                {
                                    "name": "minecraft:behavior.lay_down",
                                },
                                {
                                    "name": "minecraft:behavior.lay_egg",
                                },
                                {
                                    "name": "minecraft:behavior.leap_at_target",
                                },
                                {
                                    "name": "minecraft:behavior.look_at_entity",
                                },
                                {
                                    "name": "minecraft:behavior.look_at_player",
                                },
                                {
                                    "name": "minecraft:behavior.look_at_target",
                                },
                                {
                                    "name": "minecraft:behavior.look_at_trading_player",
                                },
                                {
                                    "name": "minecraft:behavior.make_love",
                                },
                                {
                                    "name": "minecraft:behavior.melee_attack",
                                },
                                {
                                    "name": "minecraft:behavior.melee_box_attack",
                                },
                                {
                                    "name": "minecraft:behavior.mingle",
                                },
                                {
                                    "name": "minecraft:behavior.mount_pathing",
                                },
                                {
                                    "name": "minecraft:behavior.move_around_target",
                                },
                                {
                                    "name": "minecraft:behavior.move_indoors",
                                },
                                {
                                    "name": "minecraft:behavior.move_outdoors",
                                },
                                {
                                    "name": "minecraft:behavior.move_through_village",
                                },
                                {
                                    "name": "minecraft:behavior.move_to_block",
                                },
                                {
                                    "name": "minecraft:behavior.move_to_land",
                                },
                                {
                                    "name": "minecraft:behavior.move_to_lava",
                                },
                                {
                                    "name": "minecraft:behavior.move_to_liquid",
                                },
                                {
                                    "name": "minecraft:behavior.move_to_poi",
                                },
                                {
                                    "name": "minecraft:behavior.move_to_random_block",
                                },
                                {
                                    "name": "minecraft:behavior.move_to_village",
                                },
                                {
                                    "name": "minecraft:behavior.move_to_water",
                                },
                                {
                                    "name": "minecraft:behavior.move_towards_dwelling_restriction",
                                },
                                {
                                    "name": "minecraft:behavior.move_towards_home_restriction",
                                },
                                {
                                    "name": "minecraft:behavior.move_towards_target",
                                },
                                {
                                    "name": "minecraft:behavior.nap",
                                },
                                {
                                    "name": "minecraft:behavior.nearest_attackable_target",
                                },
                                {
                                    "name": "minecraft:behavior.nearest_prioritized_attackable_target",
                                },
                                {
                                    "name": "minecraft:behavior.ocelot_sit_on_block",
                                },
                                {
                                    "name": "minecraft:behavior.ocelotattack",
                                },
                                {
                                    "name": "minecraft:behavior.offer_flower",
                                },
                                {
                                    "name": "minecraft:behavior.open_door",
                                },
                                {
                                    "name": "minecraft:behavior.owner_hurt_by_target",
                                },
                                {
                                    "name": "minecraft:behavior.owner_hurt_target",
                                },
                                {
                                    "name": "minecraft:behavior.panic",
                                },
                                {
                                    "name": "minecraft:behavior.peek",
                                },
                                {
                                    "name": "minecraft:behavior.pet_sleep_with_owner",
                                },
                                {
                                    "name": "minecraft:behavior.pickup_items",
                                },
                                {
                                    "name": "minecraft:behavior.play",
                                },
                                {
                                    "name": "minecraft:behavior.play_dead",
                                },
                                {
                                    "name": "minecraft:behavior.player_ride_tamed",
                                },
                                {
                                    "name": "minecraft:behavior.raid_garden",
                                },
                                {
                                    "name": "minecraft:behavior.ram_attack",
                                },
                                {
                                    "name": "minecraft:behavior.random_breach",
                                },
                                {
                                    "name": "minecraft:behavior.random_fly",
                                },
                                {
                                    "name": "minecraft:behavior.random_hover",
                                },
                                {
                                    "name": "minecraft:behavior.random_look_around",
                                },
                                {
                                    "name": "minecraft:behavior.random_look_around_and_sit",
                                },
                                {
                                    "name": "minecraft:behavior.random_search_and_dig",
                                },
                                {
                                    "name": "minecraft:behavior.random_sitting",
                                },
                                {
                                    "name": "minecraft:behavior.random_stroll",
                                },
                                {
                                    "name": "minecraft:behavior.random_swim",
                                },
                                {
                                    "name": "minecraft:behavior.ranged_attack",
                                },
                                {
                                    "name": "minecraft:behavior.receive_love",
                                },
                                {
                                    "name": "minecraft:behavior.restrict_open_door",
                                },
                                {
                                    "name": "minecraft:behavior.restrict_sun",
                                },
                                {
                                    "name": "minecraft:behavior.rise_to_liquid_level",
                                },
                                {
                                    "name": "minecraft:behavior.roar",
                                },
                                {
                                    "name": "minecraft:behavior.roll",
                                },
                                {
                                    "name": "minecraft:behavior.run_around_like_crazy",
                                },
                                {
                                    "name": "minecraft:behavior.scared",
                                },
                                {
                                    "name": "minecraft:behavior.send_event",
                                },
                                {
                                    "name": "minecraft:behavior.share_items",
                                },
                                {
                                    "name": "minecraft:behavior.silverfish_merge_with_stone",
                                },
                                {
                                    "name": "minecraft:behavior.silverfish_wake_up_friends",
                                },
                                {
                                    "name": "minecraft:behavior.skeleton_horse_trap",
                                },
                                {
                                    "name": "minecraft:behavior.sleep",
                                },
                                {
                                    "name": "minecraft:behavior.slime_attack",
                                },
                                {
                                    "name": "minecraft:behavior.slime_float",
                                },
                                {
                                    "name": "minecraft:behavior.slime_keep_on_jumping",
                                },
                                {
                                    "name": "minecraft:behavior.slime_random_direction",
                                },
                                {
                                    "name": "minecraft:behavior.snacking",
                                },
                                {
                                    "name": "minecraft:behavior.sneeze",
                                },
                                {
                                    "name": "minecraft:behavior.sniff",
                                },
                                {
                                    "name": "minecraft:behavior.sonic_boom",
                                },
                                {
                                    "name": "minecraft:behavior.squid_dive",
                                },
                                {
                                    "name": "minecraft:behavior.squid_flee",
                                },
                                {
                                    "name": "minecraft:behavior.squid_idle",
                                },
                                {
                                    "name": "minecraft:behavior.squid_move_away_from_ground",
                                },
                                {
                                    "name": "minecraft:behavior.squid_out_of_water",
                                },
                                {
                                    "name": "minecraft:behavior.stalk_and_pounce_on_target",
                                },
                                {
                                    "name": "minecraft:behavior.stay_near_noteblock",
                                },
                                {
                                    "name": "minecraft:behavior.stay_while_sitting",
                                },
                                {
                                    "name": "minecraft:behavior.stomp_attack",
                                },
                                {
                                    "name": "minecraft:behavior.stomp_turtle_egg",
                                },
                                {
                                    "name": "minecraft:behavior.stroll_towards_village",
                                },
                                {
                                    "name": "minecraft:behavior.summon_entity",
                                },
                                {
                                    "name": "minecraft:behavior.swell",
                                },
                                {
                                    "name": "minecraft:behavior.swim_idle",
                                },
                                {
                                    "name": "minecraft:behavior.swim_up_for_breath",
                                },
                                {
                                    "name": "minecraft:behavior.swim_wander",
                                },
                                {
                                    "name": "minecraft:behavior.swim_with_entity",
                                },
                                {
                                    "name": "minecraft:behavior.swoop_attack",
                                },
                                {
                                    "name": "minecraft:behavior.take_flower",
                                },
                                {
                                    "name": "minecraft:behavior.teleport_to_owner",
                                },
                                {
                                    "name": "minecraft:behavior.tempt",
                                },
                                {
                                    "name": "minecraft:behavior.timer_flag_1",
                                },
                                {
                                    "name": "minecraft:behavior.timer_flag_2",
                                },
                                {
                                    "name": "minecraft:behavior.timer_flag_3",
                                },
                                {
                                    "name": "minecraft:behavior.trade_interest",
                                },
                                {
                                    "name": "minecraft:behavior.trade_with_player",
                                },
                                {
                                    "name": "minecraft:behavior.vex_copy_owner_target",
                                },
                                {
                                    "name": "minecraft:behavior.vex_random_move",
                                },
                                {
                                    "name": "minecraft:behavior.wither_random_attack_pos_goal",
                                },
                                {
                                    "name": "minecraft:behavior.wither_target_highest_damage",
                                },
                                {
                                    "name": "minecraft:behavior.work",
                                },
                                {
                                    "name": "minecraft:behavior.work_composter",
                                },
                            ],
                        },
                        {
                            "name": "Attributes",
                            "sections": [
                                {
                                    "name": "minecraft:attack",
                                },
                                {
                                    "name": "minecraft:spell_effects",
                                },
                                {
                                    "name": "minecraft:strength",
                                },
                            ],
                        },
                        {
                            "name": "Built-in Events",
                        },
                        {
                            "name": "Components",
                            "sections": [
                                {
                                    "name": "minecraft:addrider",
                                },
                                {
                                    "name": "minecraft:admire_item",
                                },
                                {
                                    "name": "minecraft:ageable",
                                },
                                {
                                    "name": "minecraft:anger_level",
                                },
                                {
                                    "name": "minecraft:angry",
                                },
                                {
                                    "name": "minecraft:annotation.break_door",
                                },
                                {
                                    "name": "minecraft:annotation.open_door",
                                },
                                {
                                    "name": "minecraft:area_attack",
                                },
                                {
                                    "name": "minecraft:attack_cooldown",
                                },
                                {
                                    "name": "minecraft:barter",
                                },
                                {
                                    "name": "minecraft:block_climber",
                                },
                                {
                                    "name": "minecraft:block_sensor",
                                },
                                {
                                    "name": "minecraft:boostable",
                                },
                                {
                                    "name": "minecraft:boss",
                                },
                                {
                                    "name": "minecraft:break_blocks",
                                },
                                {
                                    "name": "minecraft:breathable",
                                },
                                {
                                    "name": "minecraft:breedable",
                                },
                                {
                                    "name": "minecraft:bribeable",
                                },
                                {
                                    "name": "minecraft:buoyant",
                                },
                                {
                                    "name": "minecraft:burns_in_daylight",
                                },
                                {
                                    "name": "minecraft:can_join_raid",
                                },
                                {
                                    "name": "minecraft:celebrate_hunt",
                                },
                                {
                                    "name": "minecraft:collision_box",
                                },
                                {
                                    "name": "minecraft:combat_regeneration",
                                },
                                {
                                    "name": "minecraft:conditional_bandwidth_optimization",
                                },
                                {
                                    "name": "minecraft:custom_hit_test",
                                },
                                {
                                    "name": "minecraft:damage_over_time",
                                },
                                {
                                    "name": "minecraft:damage_sensor",
                                },
                                {
                                    "name": "minecraft:dash",
                                },
                                {
                                    "name": "minecraft:despawn",
                                },
                                {
                                    "name": "minecraft:drying_out_timer",
                                },
                                {
                                    "name": "minecraft:economy_trade_table",
                                },
                                {
                                    "name": "minecraft:entity_armor_equipment_slot_mapping",
                                },
                                {
                                    "name": "minecraft:entity_sensor",
                                },
                                {
                                    "name": "minecraft:environment_sensor",
                                },
                                {
                                    "name": "minecraft:equip_item",
                                },
                                {
                                    "name": "minecraft:equippable",
                                },
                                {
                                    "name": "minecraft:exhaustion_values",
                                },
                                {
                                    "name": "minecraft:experience_reward",
                                },
                                {
                                    "name": "minecraft:explode",
                                },
                                {
                                    "name": "minecraft:flocking",
                                },
                                {
                                    "name": "minecraft:game_event_movement_tracking",
                                },
                                {
                                    "name": "minecraft:genetics",
                                },
                                {
                                    "name": "minecraft:giveable",
                                },
                                {
                                    "name": "minecraft:group_size",
                                },
                                {
                                    "name": "minecraft:grows_crop",
                                },
                                {
                                    "name": "minecraft:healable",
                                },
                                {
                                    "name": "minecraft:heartbeat",
                                },
                                {
                                    "name": "minecraft:home",
                                },
                                {
                                    "name": "minecraft:hurt_on_condition",
                                },
                                {
                                    "name": "minecraft:inside_block_notifier",
                                },
                                {
                                    "name": "minecraft:insomnia",
                                },
                                {
                                    "name": "minecraft:instant_despawn",
                                },
                                {
                                    "name": "minecraft:interact",
                                },
                                {
                                    "name": "minecraft:inventory",
                                },
                                {
                                    "name": "minecraft:item_hopper",
                                },
                                {
                                    "name": "minecraft:jump.dynamic",
                                },
                                {
                                    "name": "minecraft:jump.static",
                                },
                                {
                                    "name": "minecraft:leashable",
                                },
                                {
                                    "name": "minecraft:lookat",
                                },
                                {
                                    "name": "minecraft:managed_wandering_trader",
                                },
                                {
                                    "name": "minecraft:mob_effect",
                                },
                                {
                                    "name": "minecraft:mob_effect_immunity",
                                },
                                {
                                    "name": "minecraft:movement.amphibious",
                                },
                                {
                                    "name": "minecraft:movement.basic",
                                },
                                {
                                    "name": "minecraft:movement.fly",
                                },
                                {
                                    "name": "minecraft:movement.generic",
                                },
                                {
                                    "name": "minecraft:movement.hover",
                                },
                                {
                                    "name": "minecraft:movement.jump",
                                },
                                {
                                    "name": "minecraft:movement.skip",
                                },
                                {
                                    "name": "minecraft:movement.sway",
                                },
                                {
                                    "name": "minecraft:nameable",
                                },
                                {
                                    "name": "minecraft:navigation.climb",
                                },
                                {
                                    "name": "minecraft:navigation.float",
                                },
                                {
                                    "name": "minecraft:navigation.fly",
                                },
                                {
                                    "name": "minecraft:navigation.generic",
                                },
                                {
                                    "name": "minecraft:navigation.hover",
                                },
                                {
                                    "name": "minecraft:navigation.swim",
                                },
                                {
                                    "name": "minecraft:navigation.walk",
                                },
                                {
                                    "name": "minecraft:out_of_control",
                                },
                                {
                                    "name": "minecraft:peek",
                                },
                                {
                                    "name": "minecraft:persistent",
                                },
                                {
                                    "name": "minecraft:physics",
                                },
                                {
                                    "name": "minecraft:preferred_path",
                                },
                                {
                                    "name": "minecraft:projectile",
                                },
                                {
                                    "name": "minecraft:pushable",
                                },
                                {
                                    "name": "minecraft:raid_trigger",
                                },
                                {
                                    "name": "minecraft:rail_movement",
                                },
                                {
                                    "name": "minecraft:rail_sensor",
                                },
                                {
                                    "name": "minecraft:ravager_blocked",
                                },
                                {
                                    "name": "minecraft:reflect_projectiles",
                                },
                                {
                                    "name": "minecraft:rideable",
                                },
                                {
                                    "name": "minecraft:scale_by_age",
                                },
                                {
                                    "name": "minecraft:scheduler",
                                },
                                {
                                    "name": "minecraft:shareables",
                                },
                                {
                                    "name": "minecraft:shooter",
                                },
                                {
                                    "name": "minecraft:sittable",
                                },
                                {
                                    "name": "minecraft:spawn_entity",
                                },
                                {
                                    "name": "minecraft:suspect_tracking",
                                },
                                {
                                    "name": "minecraft:tameable",
                                },
                                {
                                    "name": "minecraft:tamemount",
                                },
                                {
                                    "name": "minecraft:target_nearby_sensor",
                                },
                                {
                                    "name": "minecraft:teleport",
                                },
                                {
                                    "name": "minecraft:tick_world",
                                },
                                {
                                    "name": "minecraft:timer",
                                },
                                {
                                    "name": "minecraft:trade_table",
                                },
                                {
                                    "name": "minecraft:trail",
                                },
                                {
                                    "name": "minecraft:transformation",
                                },
                                {
                                    "name": "minecraft:trusting",
                                },
                                {
                                    "name": "minecraft:variable_max_auto_step",
                                },
                                {
                                    "name": "minecraft:vibration_damper",
                                },
                                {
                                    "name": "minecraft:water_movement",
                                },
                            ],
                        },
                        {
                            "name": "Entity Definition Properties",
                            "sections": [
                                {
                                    "name": "format_version",
                                },
                                {
                                    "name": "Code Example",
                                },
                            ],
                        },
                        {
                            "name": "Entity Description Properties",
                            "sections": [
                                {
                                    "name": "Entity Description Properties",
                                    "sections": [
                                        {
                                            "name": "identifier",
                                        },
                                        {
                                            "name": "is_spawnable",
                                        },
                                        {
                                            "name": "is_summonable",
                                        },
                                        {
                                            "name": "runtime_identifier",
                                        },
                                    ],
                                },
                                {
                                    "name": "animations",
                                },
                                {
                                    "name": "scripts",
                                },
                            ],
                        },
                        {
                            "name": "ID Lists",
                            "sections": [
                                {
                                    "name": "AI Goals",
                                },
                                {
                                    "name": "Attributes",
                                },
                                {
                                    "name": "Components",
                                },
                                {
                                    "name": "Entity Description Properties",
                                },
                                {
                                    "name": "Properties",
                                },
                                {
                                    "name": "Triggers",
                                },
                            ],
                        },
                        {
                            "name": "Properties",
                            "sections": [
                                {
                                    "name": "minecraft:ambient_sound_interval",
                                },
                                {
                                    "name": "minecraft:body_rotation_blocked",
                                },
                                {
                                    "name": "minecraft:can_climb",
                                },
                                {
                                    "name": "minecraft:can_fly",
                                },
                                {
                                    "name": "minecraft:can_power_jump",
                                },
                                {
                                    "name": "minecraft:color",
                                },
                                {
                                    "name": "minecraft:color2",
                                },
                                {
                                    "name": "minecraft:default_look_angle",
                                },
                                {
                                    "name": "minecraft:equipment",
                                },
                                {
                                    "name": "minecraft:fire_immune",
                                },
                                {
                                    "name": "minecraft:floats_in_liquid",
                                },
                                {
                                    "name": "minecraft:flying_speed",
                                },
                                {
                                    "name": "minecraft:friction_modifier",
                                },
                                {
                                    "name": "minecraft:ground_offset",
                                },
                                {
                                    "name": "minecraft:input_ground_controlled",
                                },
                                {
                                    "name": "minecraft:is_baby",
                                },
                                {
                                    "name": "minecraft:is_charged",
                                },
                                {
                                    "name": "minecraft:is_chested",
                                },
                                {
                                    "name": "minecraft:is_dyeable",
                                },
                                {
                                    "name": "minecraft:is_hidden_when_invisible",
                                },
                                {
                                    "name": "minecraft:is_ignited",
                                },
                                {
                                    "name": "minecraft:is_illager_captain",
                                },
                                {
                                    "name": "minecraft:is_pregnant",
                                },
                                {
                                    "name": "minecraft:is_saddled",
                                },
                                {
                                    "name": "minecraft:is_shaking",
                                },
                                {
                                    "name": "minecraft:is_sheared",
                                },
                                {
                                    "name": "minecraft:is_stackable",
                                },
                                {
                                    "name": "minecraft:is_stunned",
                                },
                                {
                                    "name": "minecraft:is_tamed",
                                },
                                {
                                    "name": "minecraft:item_controllable",
                                },
                                {
                                    "name": "minecraft:loot",
                                },
                                {
                                    "name": "minecraft:mark_variant",
                                },
                                {
                                    "name": "minecraft:movement_sound_distance_offset",
                                },
                                {
                                    "name": "minecraft:push_through",
                                },
                                {
                                    "name": "minecraft:scale",
                                },
                                {
                                    "name": "minecraft:skin_id",
                                },
                                {
                                    "name": "minecraft:sound_volume",
                                },
                                {
                                    "name": "minecraft:type_family",
                                },
                                {
                                    "name": "minecraft:variant",
                                },
                                {
                                    "name": "minecraft:walk_animation_speed",
                                },
                                {
                                    "name": "minecraft:wants_jockey",
                                },
                            ],
                        },
                        {
                            "name": "Triggers",
                            "sections": [
                                {
                                    "name": "minecraft:on_death",
                                },
                                {
                                    "name": "minecraft:on_friendly_anger",
                                },
                                {
                                    "name": "minecraft:on_hurt",
                                },
                                {
                                    "name": "minecraft:on_hurt_by_player",
                                },
                                {
                                    "name": "minecraft:on_ignite",
                                },
                                {
                                    "name": "minecraft:on_start_landing",
                                },
                                {
                                    "name": "minecraft:on_start_takeoff",
                                },
                                {
                                    "name": "minecraft:on_target_acquired",
                                },
                                {
                                    "name": "minecraft:on_target_escape",
                                },
                                {
                                    "name": "minecraft:on_wake_with_owner",
                                },
                            ],
                        },
                    ],
                },
            ],
        },
        "Entity Events": {
            "name": "ENTITY EVENTS DOCUMENTATION",
            "sections": [
                {
                    "name": "This describes the structure of the Events section.",
                },
                {
                    "name": "Overview",
                },
                {
                    "name": "Versioned Changes",
                },
                {
                    "name": "Randomize Node",
                },
                {
                    "name": "Sequence Node",
                },
                {
                    "name": "Trigger",
                },
                {
                    "name": "Add Component Group",
                },
                {
                    "name": "Remove Component Group",
                },
                {
                    "name": "Set Entity Property",
                },
                {
                    "name": "Queue Command",
                },
            ],
        },
        "Entity Timeline Events": {
            "name": "ENTITY TIMELINE EVENTS DOCUMENTATION",
            "sections": [
                {
                    "name": "Animation Controller Events",
                },
                {
                    "name": "Animation Events",
                },
                {
                    "name": "Animation Notes",
                },
                {
                    "name": "Events",
                },
                {
                    "name": "General Notes",
                },
            ],
        },
        "Features": {
            "name": "FEATURES DOCUMENTATION",
            "sections": [
                {
                    "name": "Overview",
                },
                {
                    "name": "JSON format",
                },
                {
                    "name": "Adding features",
                },
                {
                    "name": "Supported features",
                    "sections": [
                        {
                            "name": "minecraft:aggregate_feature",
                        },
                        {
                            "name": "minecraft:sequence_feature",
                        },
                        {
                            "name": "minecraft:beards_and_shavers",
                        },
                        {
                            "name": "minecraft:cave_carver_feature",
                        },
                        {
                            "name": "minecraft:conditional_list",
                        },
                        {
                            "name": "minecraft:fossil_feature",
                        },
                        {
                            "name": "minecraft:geode_feature",
                        },
                        {
                            "name": "minecraft:growing_plant_feature",
                        },
                        {
                            "name": "minecraft:nether_cave_carver_feature",
                        },
                        {
                            "name": "minecraft:multiface_feature",
                        },
                        {
                            "name": "minecraft:ore_feature",
                        },
                        {
                            "name": "minecraft:partially_exposed_blob_feature",
                        },
                        {
                            "name": "minecraft:rect_layout",
                        },
                        {
                            "name": "minecraft:scan_surface",
                        },
                        {
                            "name": "minecraft:scatter_feature",
                        },
                        {
                            "name": "minecraft:sculk_patch_feature",
                        },
                        {
                            "name": "minecraft:search_feature",
                        },
                        {
                            "name": "minecraft:single_block_feature",
                        },
                        {
                            "name": "minecraft:snap_to_surface_feature",
                        },
                        {
                            "name": "minecraft:structure_template_feature",
                        },
                        {
                            "name": "minecraft:surface_relative_threshold_feature",
                        },
                        {
                            "name": "minecraft:underwater_cave_carver_feature",
                        },
                        {
                            "name": "minecraft:tree_feature",
                        },
                        {
                            "name": "minecraft:vegetation_patch_feature",
                        },
                        {
                            "name": "minecraft:weighted_random_feature",
                            "sections": [
                                {
                                    "name": "Feature schema",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "Attaching features",
                },
                {
                    "name": "Feature rules",
                },
                {
                    "name": "Feature rule schema",
                    "sections": [
                        {
                            "name": "Coordinate Evaluation Order",
                        },
                        {
                            "name": "Coordinate Range",
                        },
                        {
                            "name": "Feature Rule Conditions",
                        },
                        {
                            "name": "Feature Rule Definition",
                        },
                        {
                            "name": "Feature Rule Description",
                        },
                        {
                            "name": "Feature Rule JSON File",
                        },
                        {
                            "name": "Filter Group",
                        },
                        {
                            "name": "Filter Test",
                        },
                        {
                            "name": "Random Distribution Type",
                        },
                        {
                            "name": "Scatter Chance",
                        },
                        {
                            "name": "Scatter Params",
                        },
                    ],
                },
            ],
        },
        "Fogs": {
            "name": "FOGS DOCUMENTATION",
            "sections": [
                {
                    "name": "Fog Definitions",
                    "sections": [
                        {
                            "name": "Fog Schema",
                            "sections": [
                                {
                                    "name": "Fog Json Schema",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "Active Fog Stack",
                    "sections": [
                        {
                            "name": "Active Fog Stack",
                        },
                        {
                            "name": "Biomes",
                            "sections": [
                                {
                                    "name": "Biomes",
                                },
                            ],
                        },
                        {
                            "name": "Command",
                            "sections": [
                                {
                                    "name": "Command",
                                },
                            ],
                        },
                        {
                            "name": "Data Default",
                            "sections": [
                                {
                                    "name": "Data Default",
                                },
                            ],
                        },
                        {
                            "name": "Engine Default",
                            "sections": [
                                {
                                    "name": "Engine Default",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "Biomes",
                    "sections": [
                        {
                            "name": "Biomes",
                        },
                    ],
                },
                {
                    "name": "Fog Command",
                    "sections": [
                        {
                            "name": "Fog Command",
                        },
                        {
                            "name": "Pop",
                            "sections": [
                                {
                                    "name": "Pop",
                                },
                            ],
                        },
                        {
                            "name": "Push",
                            "sections": [
                                {
                                    "name": "Push",
                                },
                            ],
                        },
                        {
                            "name": "Remove",
                            "sections": [
                                {
                                    "name": "Remove",
                                },
                            ],
                        },
                    ],
                },
            ],
        },
        "Item": {
            "name": "ITEM DOCUMENTATION",
            "sections": [
                {
                    "name": "Items",
                    "sections": [
                        {
                            "name": "Item Definition Properties",
                            "sections": [
                                {
                                    "name": "Code Example",
                                },
                            ],
                        },
                    ],
                },
            ],
        },
        "Molang": {
            "name": "MOLANG DOCUMENTATION",
            "sections": [
                {
                    "name": "Why Does Molang Exist?",
                },
                {
                    "name": "Lexical Structure",
                    "sections": [
                        {
                            "name": "Case Sensitivity",
                        },
                        {
                            "name": "Keywords",
                        },
                        {
                            "name": "Operator Precedence",
                        },
                        {
                            "name": "Variables",
                        },
                        {
                            "name": "Values",
                        },
                        {
                            "name": "Query Functions",
                        },
                        {
                            "name": "Aliases",
                            "sections": [
                                {
                                    "name": "Alias Mapping",
                                },
                            ],
                        },
                        {
                            "name": "Structs",
                        },
                        {
                            "name": "Strings",
                        },
                        {
                            "name": "Math Functions",
                        },
                        {
                            "name": "->  Arrow Operator",
                            "sections": [
                                {
                                    "name": "Public Variables",
                                },
                            ],
                        },
                        {
                            "name": "{ } Brace Scope Delimiters",
                        },
                        {
                            "name": "Conditionals",
                        },
                        {
                            "name": "loop",
                        },
                        {
                            "name": "for_each",
                        },
                        {
                            "name": "break",
                        },
                        {
                            "name": "continue",
                        },
                        {
                            "name": "?? Null Coalescing Operator",
                        },
                        {
                            "name": "Simple vs Complex Expressions",
                        },
                    ],
                },
                {
                    "name": "Domain Examples",
                    "sections": [
                        {
                            "name": "Entity Definition Scripts",
                        },
                        {
                            "name": "Animation and Animation Controller Files",
                        },
                        {
                            "name": "Render Controllers",
                            "sections": [
                                {
                                    "name": "Array Expressions",
                                },
                                {
                                    "name": "Resource Expression",
                                },
                                {
                                    "name": "Resource Sections",
                                    "sections": [
                                        {
                                            "name": "Geometry",
                                        },
                                        {
                                            "name": "Materials",
                                        },
                                    ],
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "Query Functions",
                    "sections": [
                        {
                            "name": "List of Entity Queries",
                        },
                        {
                            "name": "List of Experimental Entity Queries",
                        },
                    ],
                },
                {
                    "name": "Experimental Operators",
                },
                {
                    "name": "Versioned Changes",
                    "sections": [
                        {
                            "name": "Versioned Change Versions",
                        },
                    ],
                },
            ],
        },
        "Particles": {
            "name": "PARTICLES DOCUMENTATION",
            "sections": [
                {
                    "name": "Basic Structure Overview",
                },
                {
                    "name": "Component Concept",
                },
                {
                    "name": "Current Component List",
                    "sections": [
                        {
                            "name": "Emitter Components",
                            "sections": [
                                {
                                    "name": "Emitter Lifetime Components",
                                    "sections": [
                                        {
                                            "name": "Emitter Lifetime Events component",
                                        },
                                        {
                                            "name": "Emitter Lifetime Expression component",
                                        },
                                        {
                                            "name": "Emitter Lifetime Looping component",
                                        },
                                        {
                                            "name": "Emitter Lifetime Once component",
                                        },
                                    ],
                                },
                                {
                                    "name": "Emitter Rate Components",
                                    "sections": [
                                        {
                                            "name": "Emitter Rate Instant component",
                                        },
                                        {
                                            "name": "Emitter Rate Manual component",
                                        },
                                        {
                                            "name": "Emitter Rate Steady component",
                                        },
                                    ],
                                },
                                {
                                    "name": "Emitter Shape Components",
                                    "sections": [
                                        {
                                            "name": "Emitter Disc component",
                                        },
                                        {
                                            "name": "Emitter Shape Box component",
                                        },
                                        {
                                            "name": "Emitter Shape Custom component",
                                        },
                                        {
                                            "name": "Emitter Shape Entity-AABB component",
                                        },
                                        {
                                            "name": "Emitter Shape Point component",
                                        },
                                        {
                                            "name": "Emitter Shape Sphere component",
                                        },
                                    ],
                                },
                                {
                                    "name": "Initial State Components",
                                    "sections": [
                                        {
                                            "name": "Emitter Initialization component",
                                        },
                                        {
                                            "name": "Emitter Local Space component",
                                        },
                                    ],
                                },
                            ],
                        },
                        {
                            "name": "Particle Components",
                            "sections": [
                                {
                                    "name": "Particle Appearance Components",
                                    "sections": [
                                        {
                                            "name": "Particle Appearance Billboard component",
                                        },
                                        {
                                            "name": "Particle Appearance Lighting",
                                        },
                                        {
                                            "name": "Particle Appearance Tinting component",
                                        },
                                    ],
                                },
                                {
                                    "name": "Particle Initial State Components",
                                    "sections": [
                                        {
                                            "name": "Particle Initial Speed component",
                                        },
                                        {
                                            "name": "Particle Initial State component",
                                        },
                                    ],
                                },
                                {
                                    "name": "Particle Lifetime Components",
                                    "sections": [
                                        {
                                            "name": "Particle Expire If In Blocks component",
                                        },
                                        {
                                            "name": "Particle Expire If Not In Blocks component",
                                        },
                                        {
                                            "name": "Particle Lifetime Events component",
                                        },
                                        {
                                            "name": "Particle Lifetime Expression component",
                                        },
                                        {
                                            "name": "Particle Lifetime Kill-Plane component",
                                        },
                                    ],
                                },
                                {
                                    "name": "Particle Motion Components",
                                    "sections": [
                                        {
                                            "name": "Particle Motion Collision component",
                                        },
                                        {
                                            "name": "Particle Motion Dynamic component",
                                        },
                                        {
                                            "name": "Particle Motion Parametric component",
                                        },
                                    ],
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "Curves",
                },
                {
                    "name": "Events",
                },
                {
                    "name": "Examples",
                    "sections": [
                        {
                            "name": "Bouncing Bubbles",
                        },
                        {
                            "name": "Flame particle",
                        },
                        {
                            "name": "Mob Flame effect",
                        },
                        {
                            "name": "Smoke particle",
                        },
                    ],
                },
                {
                    "name": "Materials",
                },
                {
                    "name": "Molang integration",
                },
                {
                    "name": "Namespacing",
                },
                {
                    "name": "Particles Entity Integration",
                    "sections": [
                        {
                            "name": "Animation Controller effects",
                        },
                        {
                            "name": "Animation Controller effects (continued)",
                        },
                        {
                            "name": "Animation Timeline effects",
                        },
                        {
                            "name": "Animation Timeline effects (continued)",
                        },
                        {
                            "name": "Effect Event",
                        },
                        {
                            "name": "Effect List",
                        },
                        {
                            "name": "Effect List (continued)",
                        },
                    ],
                },
                {
                    "name": "Particles Examples Pack",
                    "sections": [
                        {
                            "name": "Example Effects",
                        },
                    ],
                },
                {
                    "name": "Structure In Detail",
                },
            ],
        },
        "Recipes": {
            "name": "RECIPES DOCUMENTATION",
            "sections": [
                {
                    "name": "Recipes",
                    "sections": [
                        {
                            "name": "Furnace Recipe",
                            "sections": [
                                {
                                    "name": "Parameters",
                                },
                                {
                                    "name": "Furnace Recipe Example:",
                                },
                            ],
                        },
                        {
                            "name": "Potion Brewing Container Recipe",
                            "sections": [
                                {
                                    "name": "Parameters",
                                },
                                {
                                    "name": "Potion Brewing Container Recipe Example:",
                                },
                            ],
                        },
                        {
                            "name": "Potion Brewing Mix",
                            "sections": [
                                {
                                    "name": "Parameters",
                                },
                                {
                                    "name": "Potion Brewing Mix Example:",
                                },
                            ],
                        },
                        {
                            "name": "Shaped Recipe",
                            "sections": [
                                {
                                    "name": "Parameters",
                                },
                                {
                                    "name": "Shaped Recipe Example:",
                                },
                            ],
                        },
                        {
                            "name": "Shapeless Recipe",
                            "sections": [
                                {
                                    "name": "Parameters",
                                },
                                {
                                    "name": "Shapeless Recipe Example:",
                                },
                            ],
                        },
                        {
                            "name": "Smithing Transform Recipe",
                            "sections": [
                                {
                                    "name": "Parameters",
                                },
                                {
                                    "name": "Smithing Transform Recipe Example:",
                                },
                            ],
                        },
                        {
                            "name": "Smithing Trim Recipe",
                            "sections": [
                                {
                                    "name": "Parameters",
                                },
                                {
                                    "name": "Smithing Trim Recipe Example:",
                                },
                            ],
                        },
                    ],
                },
            ],
        },
        "Schemas": {
            "name": "SCHEMAS DOCUMENTATION",
            "sections": [
                {
                    "name": "Overview",
                },
                {
                    "name": "Schemas",
                },
            ],
        },
        "Texture Sets": {
            "name": "TEXTURE SETS DOCUMENTATION",
            "sections": [
                {
                    "name": "Texture Sets",
                    "sections": [
                        {
                            "name": "Texture Set Json Schema",
                            "sections": [
                                {
                                    "name": "Texture Set Json Schema",
                                },
                            ],
                        },
                        {
                            "name": "Layers",
                            "sections": [
                                {
                                    "name": "Color",
                                },
                                {
                                    "name": "Normal",
                                },
                                {
                                    "name": "Heightmap",
                                },
                                {
                                    "name": "Metalness_emissive_roughness",
                                },
                            ],
                        },
                        {
                            "name": "Specifying uniform values",
                        },
                        {
                            "name": "Examples of *.texture_set.json files",
                        },
                        {
                            "name": "Invalid *.texture_set.json",
                        },
                        {
                            "name": "Resource Stack Behaviour",
                        },
                        {
                            "name": "Referencing Texture Resources",
                        },
                    ],
                },
            ],
        },
    },
    "blockState": {
        "active": "Determines whether the block is active or not",
        "age": "Represents the age of the block",
        "age_bit": "Determines if saplings should grow",
        "allow_underwater_bit": "Determines if a TNT block works underwater",
        "attached_bit": "Determines if a tripwire is attached to another tripwire",
        "attachment": "Determines the type of attachment used by a bell or grindstone block",
        "bamboo_leaf_size": "Determines the size of bamboo leaves",
        "bamboo_stalk_thickness": "Determines the thinkness of a bamboo stalk",
        "big_dripleaf_tilt": "Determines the tilt state of big dripleaf block",
        "bite_counter": "Tracks how many bites of cake have been taken",
        "books_stored": "Determines how many books are stored in the chiseled bookshelf",
        "brewing_stand_slot_a_bit": "Determines if a bottle is shown in slot a of the brewing stand",
        "brewing_stand_slot_b_bit": "Determines if a bottle is shown in slot b of the brewing stand",
        "brewing_stand_slot_c_bit": "Determines if a bottle is shown in slot c of the brewing stand",
        "brushed_progress": "Describes how \"brushed\" a block is",
        "button_pressed_bit": "Determines if a button is in the pressed state or not",
        "candles": "Describes how many extra candles are in the same block space",
        "cauldron_liquid": "Determines the type of liquid in a cauldron",
        "chemistry_table_type": "Determines the type of the work benches that are behind the edu features toggle",
        "chisel_type": "Determines the pattern of quartz and purpur blocks",
        "cluster_count": "Describes how many sea pickles are in a cluster",
        "color": "Determines the color of a block like wool",
        "color_bit": "Sets if a torch is a colored torch block",
        "conditional_bit": "Determines if a command block is conditional or not",
        "coral_color": "DEPRECATED - Determines the color of a coral block",
        "coral_direction": "Describes the rotation of coral fans",
        "coral_hang_type_bit": "DEPRECATED - Describes the type of hanging for coral fans",
        "covered_bit": "Describes if a top snow block is covering another block",
        "cracked_state": "Determines the cracked state of turtle eggs",
        "crafting": "Describes if the block has just crafted",
        "damage": "DEPRECATED - Determines the state of damage of an Anvil",
        "dead_bit": "DEPRECATED - Determines if coral, coral fans, or sea pickles are dead",
        "direction": "Determines the North, South, East, and West direction of some blocks. 0 = South, 1 = West, 2 = North 3 = East",
        "dirt_type": "DEPRECATED - Determines the dirt type of a block",
        "disarmed_bit": "Determines if a tripwire is disarmed or not.",
        "door_hinge_bit": "Determines if door's hinge is mirrored or not",
        "double_plant_type": "Determines the type of a double plant block",
        "drag_down": "Describes if bubble columns drag entities down or pushes them up",
        "dripstone_thickness": "Determines the type of a pointed dripstone block",
        "end_portal_eye_bit": "Determines if an end portal block has an Eye in it",
        "explode_bit": "Determines if a TNT block should start its explode sequence",
        "facing_direction": "Determines the Up, Down, North, South, East, and West direction of some blocks. 0 = Down, 1 = Up, 2 = North, 3 = South, 4 = West, 5 = East",
        "fill_level": "Determines fill level of a cauldron block",
        "flower_type": "Determines the type of a flower block",
        "ground_sign_direction": "Describes the rotation of signs and standing banners",
        "growth": "Determines the growth level of crops",
        "hanging": "Describes if a lantern block is hanging or not",
        "head_piece_bit": "Determines if a block is the pillow side of a bed",
        "height": "Determines the height of a top snow block",
        "huge_mushroom_bits": "Determines which huge mushroom block to be displayed",
        "in_wall_bit": "Determines if a fence block is connected to a wall block",
        "infiniburn_bit": "Determines if a block should burn infinitely",
        "item_frame_map_bit": "Describes if an item frame block has a map in it",
        "item_frame_photo_bit": "Describes if an item frame block has a photo in it",
        "liquid_depth": "Determines the level of liquid blocks",
        "lit": "Determines if a block is lit or not",
        "minecraft:block_face": "Which blockface the player placed the block on.",
        "minecraft:cardinal_direction": "Defines the cardinal placement direction of a block.",
        "minecraft:facing_direction": "Defines all placement directions of a block.",
        "minecraft:vertical_half": "Which vertical half of the space the block is placed in.",
        "moisturized_amount": "Determines the moisture level of crops",
        "monster_egg_stone_type": "DEPRECATED - Determines the stone type of a monster egg block",
        "new_leaf_type": "Determines the leaf type of some blocks",
        "new_log_type": "DEPRECATED - Determines the wood type of some blocks",
        "no_drop_bit": "Determines if a skull block should drop loot",
        "occupied_bit": "Determines if a bed block is occupied",
        "old_leaf_type": "Determines the leaf type of some blocks",
        "old_log_type": "DEPRECATED - Determines the wood type of some blocks",
        "ominous": "Determines if the block is the ominous version",
        "open_bit": "Determines if a door, gate, or trapdoor is open",
        "orientation": "12 variant orientation",
        "output_lit_bit": "Determines if a Comparator's output is lit",
        "output_subtract_bit": "Determines if a Comparator is set to subtract output",
        "persistent_bit": "Determines if a leaf block is persistent",
        "portal_axis": "Determines the orientation of portal blocks",
        "powered_bit": "Shows when an observer or tripwire sends a redstone signal",
        "rail_data_bit": "Shows if a rail has a redstone signal",
        "rail_direction": "Determines the orientation of a placed rail block",
        "redstone_signal": "Determines the signal strength of a redstone signal",
        "repeater_delay": "Determines the amount of delay of a repeater",
        "sand_stone_type": "DEPRECATED - Determines the pattern of a sandstone block",
        "sand_type": "DEPRECATED - Determines the sand type of a block",
        "sapling_type": "Determines the type of the sapling block",
        "sculk_sensor_phase": "Determines the current phase of a sculk sensor block",
        "sea_grass_type": "Determines the type of a seagrass block",
        "sponge_type": "Determines the type of a sponge block",
        "stability": "Determines the stability of a scaffolding block",
        "stability_check": "Describes if a scaffolding block has been checked for stability",
        "stone_brick_type": "DEPRECATED - Determines the type of a stone brick block",
        "stone_slab_type": "Determines the type of some stone slab blocks",
        "stone_slab_type_2": "Determines the type of some stone slab blocks",
        "stone_slab_type_3": "Determines the type of some stone slab blocks",
        "stone_slab_type_4": "Determines the type of some stone slab blocks",
        "stone_type": "DEPRECATED - Determines the stone type of a block",
        "stripped_bit": "Describes if a wood log has been stripped of bark",
        "structure_block_type": "Determines the state of a structure block",
        "structure_void_type": "Determines which void mode to draw for structure blocks",
        "suspended_bit": "Indicates if a tripwire block is suspended",
        "tall_grass_type": "Determines the type of a tall grass block",
        "toggle_bit": "Determines if a hopper block is active or not",
        "top_slot_bit": "Shows if a slab is the top half of the block or not",
        "torch_facing_direction": "Determines the block that a torch is attached to in relation to its position",
        "trial_spawner_state": "Determines the block state for the Trial Spawner",
        "triggered_bit": "Determines if a dispenser is triggered",
        "turtle_egg_count": "Determines the amount of turtle eggs in an egg block",
        "update_bit": "Determines if a leaf block or flower block should be updated",
        "upper_block_bit": "Determines if a block is the upper half of an object like a door or a tall plant",
        "upside_down_bit": "Determines if a stair block or trapdoor block is upsidedown",
        "vine_direction_bits": "Determines the facing direction for vines, works like the facing_direction blockstate",
        "wall_block_type": "Determines the type of a stone used in a wall block",
        "wall_connection_type_east": "Determines what kind of connection a wall has to the east",
        "wall_connection_type_north": "Determines what kind of connection a wall has to the north",
        "wall_connection_type_south": "Determines what kind of connection a wall has to the south",
        "wall_connection_type_west": "Determines what kind of connection a wall has to the west",
        "wall_post_bit": "Determines if a wall should contain a post",
        "weirdo_direction": "Describes the rotation of stairs",
        "wood_type": "DEPRECATED - Determines the wood type of a block",
    },
    "block": {
        "minecraft:acacia_button": "",
        "minecraft:acacia_door": "",
        "minecraft:acacia_double_slab": "",
        "minecraft:acacia_fence": "",
        "minecraft:acacia_fence_gate": "",
        "minecraft:acacia_hanging_sign": "",
        "minecraft:acacia_leaves": "",
        "minecraft:acacia_log": "",
        "minecraft:acacia_planks": "",
        "minecraft:acacia_pressure_plate": "",
        "minecraft:acacia_sapling": "",
        "minecraft:acacia_slab": "",
        "minecraft:acacia_stairs": "",
        "minecraft:acacia_standing_sign": "",
        "minecraft:acacia_trapdoor": "",
        "minecraft:acacia_wall_sign": "",
        "minecraft:acacia_wood": "",
        "minecraft:activator_rail": "",
        "minecraft:air": "",
        "minecraft:allium": "",
        "minecraft:allow": "",
        "minecraft:amethyst_block": "",
        "minecraft:amethyst_cluster": "",
        "minecraft:ancient_debris": "",
        "minecraft:andesite": "",
        "minecraft:andesite_double_slab": "",
        "minecraft:andesite_slab": "",
        "minecraft:andesite_stairs": "",
        "minecraft:andesite_wall": "",
        "minecraft:anvil": "",
        "minecraft:azalea": "",
        "minecraft:azalea_leaves": "",
        "minecraft:azalea_leaves_flowered": "",
        "minecraft:azure_bluet": "",
        "minecraft:bamboo": "",
        "minecraft:bamboo_block": "",
        "minecraft:bamboo_button": "",
        "minecraft:bamboo_door": "",
        "minecraft:bamboo_double_slab": "",
        "minecraft:bamboo_fence": "",
        "minecraft:bamboo_fence_gate": "",
        "minecraft:bamboo_hanging_sign": "",
        "minecraft:bamboo_mosaic": "",
        "minecraft:bamboo_mosaic_double_slab": "",
        "minecraft:bamboo_mosaic_slab": "",
        "minecraft:bamboo_mosaic_stairs": "",
        "minecraft:bamboo_planks": "",
        "minecraft:bamboo_pressure_plate": "",
        "minecraft:bamboo_sapling": "",
        "minecraft:bamboo_slab": "",
        "minecraft:bamboo_stairs": "",
        "minecraft:bamboo_standing_sign": "",
        "minecraft:bamboo_trapdoor": "",
        "minecraft:bamboo_wall_sign": "",
        "minecraft:barrel": "",
        "minecraft:barrier": "",
        "minecraft:basalt": "",
        "minecraft:beacon": "",
        "minecraft:bed": "",
        "minecraft:bedrock": "",
        "minecraft:bee_nest": "",
        "minecraft:beehive": "",
        "minecraft:beetroot": "",
        "minecraft:bell": "",
        "minecraft:big_dripleaf": "",
        "minecraft:birch_button": "",
        "minecraft:birch_door": "",
        "minecraft:birch_double_slab": "",
        "minecraft:birch_fence": "",
        "minecraft:birch_fence_gate": "",
        "minecraft:birch_hanging_sign": "",
        "minecraft:birch_leaves": "",
        "minecraft:birch_log": "",
        "minecraft:birch_planks": "",
        "minecraft:birch_pressure_plate": "",
        "minecraft:birch_sapling": "",
        "minecraft:birch_slab": "",
        "minecraft:birch_stairs": "",
        "minecraft:birch_standing_sign": "",
        "minecraft:birch_trapdoor": "",
        "minecraft:birch_wall_sign": "",
        "minecraft:birch_wood": "",
        "minecraft:black_candle": "",
        "minecraft:black_candle_cake": "",
        "minecraft:black_carpet": "",
        "minecraft:black_concrete": "",
        "minecraft:black_concrete_powder": "",
        "minecraft:black_glazed_terracotta": "",
        "minecraft:black_shulker_box": "",
        "minecraft:black_stained_glass": "",
        "minecraft:black_stained_glass_pane": "",
        "minecraft:black_terracotta": "",
        "minecraft:black_wool": "",
        "minecraft:blackstone": "",
        "minecraft:blackstone_double_slab": "",
        "minecraft:blackstone_slab": "",
        "minecraft:blackstone_stairs": "",
        "minecraft:blackstone_wall": "",
        "minecraft:blast_furnace": "",
        "minecraft:blue_candle": "",
        "minecraft:blue_candle_cake": "",
        "minecraft:blue_carpet": "",
        "minecraft:blue_concrete": "",
        "minecraft:blue_concrete_powder": "",
        "minecraft:blue_glazed_terracotta": "",
        "minecraft:blue_ice": "",
        "minecraft:blue_orchid": "",
        "minecraft:blue_shulker_box": "",
        "minecraft:blue_stained_glass": "",
        "minecraft:blue_stained_glass_pane": "",
        "minecraft:blue_terracotta": "",
        "minecraft:blue_wool": "",
        "minecraft:bone_block": "",
        "minecraft:bookshelf": "",
        "minecraft:border_block": "",
        "minecraft:brain_coral": "",
        "minecraft:brain_coral_block": "",
        "minecraft:brain_coral_fan": "",
        "minecraft:brain_coral_wall_fan": "",
        "minecraft:brewing_stand": "",
        "minecraft:brick_block": "",
        "minecraft:brick_double_slab": "",
        "minecraft:brick_slab": "",
        "minecraft:brick_stairs": "",
        "minecraft:brick_wall": "",
        "minecraft:brown_candle": "",
        "minecraft:brown_candle_cake": "",
        "minecraft:brown_carpet": "",
        "minecraft:brown_concrete": "",
        "minecraft:brown_concrete_powder": "",
        "minecraft:brown_glazed_terracotta": "",
        "minecraft:brown_mushroom": "",
        "minecraft:brown_mushroom_block": "",
        "minecraft:brown_shulker_box": "",
        "minecraft:brown_stained_glass": "",
        "minecraft:brown_stained_glass_pane": "",
        "minecraft:brown_terracotta": "",
        "minecraft:brown_wool": "",
        "minecraft:bubble_column": "",
        "minecraft:bubble_coral": "",
        "minecraft:bubble_coral_block": "",
        "minecraft:bubble_coral_fan": "",
        "minecraft:bubble_coral_wall_fan": "",
        "minecraft:budding_amethyst": "",
        "minecraft:cactus": "",
        "minecraft:cake": "",
        "minecraft:calcite": "",
        "minecraft:calibrated_sculk_sensor": "",
        "minecraft:camera": "",
        "minecraft:campfire": "",
        "minecraft:candle": "",
        "minecraft:candle_cake": "",
        "minecraft:carrots": "",
        "minecraft:cartography_table": "",
        "minecraft:carved_pumpkin": "",
        "minecraft:cauldron": "",
        "minecraft:cave_vines": "",
        "minecraft:cave_vines_body_with_berries": "",
        "minecraft:cave_vines_head_with_berries": "",
        "minecraft:chain": "",
        "minecraft:chain_command_block": "",
        "minecraft:chemical_heat": "",
        "minecraft:cherry_button": "",
        "minecraft:cherry_door": "",
        "minecraft:cherry_double_slab": "",
        "minecraft:cherry_fence": "",
        "minecraft:cherry_fence_gate": "",
        "minecraft:cherry_hanging_sign": "",
        "minecraft:cherry_leaves": "",
        "minecraft:cherry_log": "",
        "minecraft:cherry_planks": "",
        "minecraft:cherry_pressure_plate": "",
        "minecraft:cherry_sapling": "",
        "minecraft:cherry_slab": "",
        "minecraft:cherry_stairs": "",
        "minecraft:cherry_standing_sign": "",
        "minecraft:cherry_trapdoor": "",
        "minecraft:cherry_wall_sign": "",
        "minecraft:cherry_wood": "",
        "minecraft:chest": "",
        "minecraft:chipped_anvil": "",
        "minecraft:chiseled_bookshelf": "",
        "minecraft:chiseled_copper": "",
        "minecraft:chiseled_deepslate": "",
        "minecraft:chiseled_nether_bricks": "",
        "minecraft:chiseled_polished_blackstone": "",
        "minecraft:chiseled_quartz_block": "",
        "minecraft:chiseled_red_sandstone": "",
        "minecraft:chiseled_sandstone": "",
        "minecraft:chiseled_stone_bricks": "",
        "minecraft:chiseled_tuff": "",
        "minecraft:chiseled_tuff_bricks": "",
        "minecraft:chorus_flower": "",
        "minecraft:chorus_plant": "",
        "minecraft:clay": "",
        "minecraft:client_request_placeholder_block": "",
        "minecraft:coal_block": "",
        "minecraft:coal_ore": "",
        "minecraft:coarse_dirt": "",
        "minecraft:cobbled_deepslate": "",
        "minecraft:cobbled_deepslate_double_slab": "",
        "minecraft:cobbled_deepslate_slab": "",
        "minecraft:cobbled_deepslate_stairs": "",
        "minecraft:cobbled_deepslate_wall": "",
        "minecraft:cobblestone": "",
        "minecraft:cobblestone_double_slab": "",
        "minecraft:cobblestone_slab": "",
        "minecraft:cobblestone_wall": "",
        "minecraft:cocoa": "",
        "minecraft:colored_torch_blue": "",
        "minecraft:colored_torch_green": "",
        "minecraft:colored_torch_purple": "",
        "minecraft:colored_torch_red": "",
        "minecraft:command_block": "",
        "minecraft:composter": "",
        "minecraft:compound_creator": "",
        "minecraft:conduit": "",
        "minecraft:copper_block": "",
        "minecraft:copper_bulb": "",
        "minecraft:copper_door": "",
        "minecraft:copper_grate": "",
        "minecraft:copper_ore": "",
        "minecraft:copper_trapdoor": "",
        "minecraft:cornflower": "",
        "minecraft:cracked_deepslate_bricks": "",
        "minecraft:cracked_deepslate_tiles": "",
        "minecraft:cracked_nether_bricks": "",
        "minecraft:cracked_polished_blackstone_bricks": "",
        "minecraft:cracked_stone_bricks": "",
        "minecraft:crafter": "",
        "minecraft:crafting_table": "",
        "minecraft:crimson_button": "",
        "minecraft:crimson_door": "",
        "minecraft:crimson_double_slab": "",
        "minecraft:crimson_fence": "",
        "minecraft:crimson_fence_gate": "",
        "minecraft:crimson_fungus": "",
        "minecraft:crimson_hanging_sign": "",
        "minecraft:crimson_hyphae": "",
        "minecraft:crimson_nylium": "",
        "minecraft:crimson_planks": "",
        "minecraft:crimson_pressure_plate": "",
        "minecraft:crimson_roots": "",
        "minecraft:crimson_slab": "",
        "minecraft:crimson_stairs": "",
        "minecraft:crimson_standing_sign": "",
        "minecraft:crimson_stem": "",
        "minecraft:crimson_trapdoor": "",
        "minecraft:crimson_wall_sign": "",
        "minecraft:crying_obsidian": "",
        "minecraft:cut_copper": "",
        "minecraft:cut_copper_slab": "",
        "minecraft:cut_copper_stairs": "",
        "minecraft:cut_red_sandstone": "",
        "minecraft:cut_red_sandstone_double_slab": "",
        "minecraft:cut_red_sandstone_slab": "",
        "minecraft:cut_sandstone": "",
        "minecraft:cut_sandstone_double_slab": "",
        "minecraft:cut_sandstone_slab": "",
        "minecraft:cyan_candle": "",
        "minecraft:cyan_candle_cake": "",
        "minecraft:cyan_carpet": "",
        "minecraft:cyan_concrete": "",
        "minecraft:cyan_concrete_powder": "",
        "minecraft:cyan_glazed_terracotta": "",
        "minecraft:cyan_shulker_box": "",
        "minecraft:cyan_stained_glass": "",
        "minecraft:cyan_stained_glass_pane": "",
        "minecraft:cyan_terracotta": "",
        "minecraft:cyan_wool": "",
        "minecraft:damaged_anvil": "",
        "minecraft:dandelion": "",
        "minecraft:dark_oak_button": "",
        "minecraft:dark_oak_door": "",
        "minecraft:dark_oak_double_slab": "",
        "minecraft:dark_oak_fence": "",
        "minecraft:dark_oak_fence_gate": "",
        "minecraft:dark_oak_hanging_sign": "",
        "minecraft:dark_oak_leaves": "",
        "minecraft:dark_oak_log": "",
        "minecraft:dark_oak_planks": "",
        "minecraft:dark_oak_pressure_plate": "",
        "minecraft:dark_oak_sapling": "",
        "minecraft:dark_oak_slab": "",
        "minecraft:dark_oak_stairs": "",
        "minecraft:dark_oak_trapdoor": "",
        "minecraft:dark_oak_wood": "",
        "minecraft:dark_prismarine": "",
        "minecraft:dark_prismarine_double_slab": "",
        "minecraft:dark_prismarine_slab": "",
        "minecraft:dark_prismarine_stairs": "",
        "minecraft:darkoak_standing_sign": "",
        "minecraft:darkoak_wall_sign": "",
        "minecraft:daylight_detector": "",
        "minecraft:daylight_detector_inverted": "",
        "minecraft:dead_brain_coral": "",
        "minecraft:dead_brain_coral_block": "",
        "minecraft:dead_brain_coral_fan": "",
        "minecraft:dead_brain_coral_wall_fan": "",
        "minecraft:dead_bubble_coral": "",
        "minecraft:dead_bubble_coral_block": "",
        "minecraft:dead_bubble_coral_fan": "",
        "minecraft:dead_bubble_coral_wall_fan": "",
        "minecraft:dead_fire_coral": "",
        "minecraft:dead_fire_coral_block": "",
        "minecraft:dead_fire_coral_fan": "",
        "minecraft:dead_fire_coral_wall_fan": "",
        "minecraft:dead_horn_coral": "",
        "minecraft:dead_horn_coral_block": "",
        "minecraft:dead_horn_coral_fan": "",
        "minecraft:dead_horn_coral_wall_fan": "",
        "minecraft:dead_tube_coral": "",
        "minecraft:dead_tube_coral_block": "",
        "minecraft:dead_tube_coral_fan": "",
        "minecraft:dead_tube_coral_wall_fan": "",
        "minecraft:deadbush": "",
        "minecraft:decorated_pot": "",
        "minecraft:deepslate": "",
        "minecraft:deepslate_brick_double_slab": "",
        "minecraft:deepslate_brick_slab": "",
        "minecraft:deepslate_brick_stairs": "",
        "minecraft:deepslate_brick_wall": "",
        "minecraft:deepslate_bricks": "",
        "minecraft:deepslate_coal_ore": "",
        "minecraft:deepslate_copper_ore": "",
        "minecraft:deepslate_diamond_ore": "",
        "minecraft:deepslate_emerald_ore": "",
        "minecraft:deepslate_gold_ore": "",
        "minecraft:deepslate_iron_ore": "",
        "minecraft:deepslate_lapis_ore": "",
        "minecraft:deepslate_redstone_ore": "",
        "minecraft:deepslate_tile_double_slab": "",
        "minecraft:deepslate_tile_slab": "",
        "minecraft:deepslate_tile_stairs": "",
        "minecraft:deepslate_tile_wall": "",
        "minecraft:deepslate_tiles": "",
        "minecraft:deny": "",
        "minecraft:deprecated_anvil": "",
        "minecraft:deprecated_purpur_block_1": "",
        "minecraft:deprecated_purpur_block_2": "",
        "minecraft:detector_rail": "",
        "minecraft:diamond_block": "",
        "minecraft:diamond_ore": "",
        "minecraft:diorite": "",
        "minecraft:diorite_double_slab": "",
        "minecraft:diorite_slab": "",
        "minecraft:diorite_stairs": "",
        "minecraft:diorite_wall": "",
        "minecraft:dirt": "",
        "minecraft:dirt_with_roots": "",
        "minecraft:dispenser": "",
        "minecraft:double_cut_copper_slab": "",
        "minecraft:dragon_egg": "",
        "minecraft:dried_kelp_block": "",
        "minecraft:dripstone_block": "",
        "minecraft:dropper": "",
        "minecraft:element_0": "",
        "minecraft:element_1": "",
        "minecraft:element_10": "",
        "minecraft:element_100": "",
        "minecraft:element_101": "",
        "minecraft:element_102": "",
        "minecraft:element_103": "",
        "minecraft:element_104": "",
        "minecraft:element_105": "",
        "minecraft:element_106": "",
        "minecraft:element_107": "",
        "minecraft:element_108": "",
        "minecraft:element_109": "",
        "minecraft:element_11": "",
        "minecraft:element_110": "",
        "minecraft:element_111": "",
        "minecraft:element_112": "",
        "minecraft:element_113": "",
        "minecraft:element_114": "",
        "minecraft:element_115": "",
        "minecraft:element_116": "",
        "minecraft:element_117": "",
        "minecraft:element_118": "",
        "minecraft:element_12": "",
        "minecraft:element_13": "",
        "minecraft:element_14": "",
        "minecraft:element_15": "",
        "minecraft:element_16": "",
        "minecraft:element_17": "",
        "minecraft:element_18": "",
        "minecraft:element_19": "",
        "minecraft:element_2": "",
        "minecraft:element_20": "",
        "minecraft:element_21": "",
        "minecraft:element_22": "",
        "minecraft:element_23": "",
        "minecraft:element_24": "",
        "minecraft:element_25": "",
        "minecraft:element_26": "",
        "minecraft:element_27": "",
        "minecraft:element_28": "",
        "minecraft:element_29": "",
        "minecraft:element_3": "",
        "minecraft:element_30": "",
        "minecraft:element_31": "",
        "minecraft:element_32": "",
        "minecraft:element_33": "",
        "minecraft:element_34": "",
        "minecraft:element_35": "",
        "minecraft:element_36": "",
        "minecraft:element_37": "",
        "minecraft:element_38": "",
        "minecraft:element_39": "",
        "minecraft:element_4": "",
        "minecraft:element_40": "",
        "minecraft:element_41": "",
        "minecraft:element_42": "",
        "minecraft:element_43": "",
        "minecraft:element_44": "",
        "minecraft:element_45": "",
        "minecraft:element_46": "",
        "minecraft:element_47": "",
        "minecraft:element_48": "",
        "minecraft:element_49": "",
        "minecraft:element_5": "",
        "minecraft:element_50": "",
        "minecraft:element_51": "",
        "minecraft:element_52": "",
        "minecraft:element_53": "",
        "minecraft:element_54": "",
        "minecraft:element_55": "",
        "minecraft:element_56": "",
        "minecraft:element_57": "",
        "minecraft:element_58": "",
        "minecraft:element_59": "",
        "minecraft:element_6": "",
        "minecraft:element_60": "",
        "minecraft:element_61": "",
        "minecraft:element_62": "",
        "minecraft:element_63": "",
        "minecraft:element_64": "",
        "minecraft:element_65": "",
        "minecraft:element_66": "",
        "minecraft:element_67": "",
        "minecraft:element_68": "",
        "minecraft:element_69": "",
        "minecraft:element_7": "",
        "minecraft:element_70": "",
        "minecraft:element_71": "",
        "minecraft:element_72": "",
        "minecraft:element_73": "",
        "minecraft:element_74": "",
        "minecraft:element_75": "",
        "minecraft:element_76": "",
        "minecraft:element_77": "",
        "minecraft:element_78": "",
        "minecraft:element_79": "",
        "minecraft:element_8": "",
        "minecraft:element_80": "",
        "minecraft:element_81": "",
        "minecraft:element_82": "",
        "minecraft:element_83": "",
        "minecraft:element_84": "",
        "minecraft:element_85": "",
        "minecraft:element_86": "",
        "minecraft:element_87": "",
        "minecraft:element_88": "",
        "minecraft:element_89": "",
        "minecraft:element_9": "",
        "minecraft:element_90": "",
        "minecraft:element_91": "",
        "minecraft:element_92": "",
        "minecraft:element_93": "",
        "minecraft:element_94": "",
        "minecraft:element_95": "",
        "minecraft:element_96": "",
        "minecraft:element_97": "",
        "minecraft:element_98": "",
        "minecraft:element_99": "",
        "minecraft:element_constructor": "",
        "minecraft:emerald_block": "",
        "minecraft:emerald_ore": "",
        "minecraft:enchanting_table": "",
        "minecraft:end_brick_stairs": "",
        "minecraft:end_bricks": "",
        "minecraft:end_gateway": "",
        "minecraft:end_portal": "",
        "minecraft:end_portal_frame": "",
        "minecraft:end_rod": "",
        "minecraft:end_stone": "",
        "minecraft:end_stone_brick_double_slab": "",
        "minecraft:end_stone_brick_slab": "",
        "minecraft:end_stone_brick_wall": "",
        "minecraft:ender_chest": "",
        "minecraft:exposed_chiseled_copper": "",
        "minecraft:exposed_copper": "",
        "minecraft:exposed_copper_bulb": "",
        "minecraft:exposed_copper_door": "",
        "minecraft:exposed_copper_grate": "",
        "minecraft:exposed_copper_trapdoor": "",
        "minecraft:exposed_cut_copper": "",
        "minecraft:exposed_cut_copper_slab": "",
        "minecraft:exposed_cut_copper_stairs": "",
        "minecraft:exposed_double_cut_copper_slab": "",
        "minecraft:farmland": "",
        "minecraft:fence_gate": "",
        "minecraft:fern": "",
        "minecraft:fire": "",
        "minecraft:fire_coral": "",
        "minecraft:fire_coral_block": "",
        "minecraft:fire_coral_fan": "",
        "minecraft:fire_coral_wall_fan": "",
        "minecraft:fletching_table": "",
        "minecraft:flower_pot": "",
        "minecraft:flowering_azalea": "",
        "minecraft:flowing_lava": "",
        "minecraft:flowing_water": "",
        "minecraft:frame": "",
        "minecraft:frog_spawn": "",
        "minecraft:frosted_ice": "",
        "minecraft:furnace": "",
        "minecraft:gilded_blackstone": "",
        "minecraft:glass": "",
        "minecraft:glass_pane": "",
        "minecraft:glow_frame": "",
        "minecraft:glow_lichen": "",
        "minecraft:glowingobsidian": "",
        "minecraft:glowstone": "",
        "minecraft:gold_block": "",
        "minecraft:gold_ore": "",
        "minecraft:golden_rail": "",
        "minecraft:granite": "",
        "minecraft:granite_double_slab": "",
        "minecraft:granite_slab": "",
        "minecraft:granite_stairs": "",
        "minecraft:granite_wall": "",
        "minecraft:grass_block": "",
        "minecraft:grass_path": "",
        "minecraft:gravel": "",
        "minecraft:gray_candle": "",
        "minecraft:gray_candle_cake": "",
        "minecraft:gray_carpet": "",
        "minecraft:gray_concrete": "",
        "minecraft:gray_concrete_powder": "",
        "minecraft:gray_glazed_terracotta": "",
        "minecraft:gray_shulker_box": "",
        "minecraft:gray_stained_glass": "",
        "minecraft:gray_stained_glass_pane": "",
        "minecraft:gray_terracotta": "",
        "minecraft:gray_wool": "",
        "minecraft:green_candle": "",
        "minecraft:green_candle_cake": "",
        "minecraft:green_carpet": "",
        "minecraft:green_concrete": "",
        "minecraft:green_concrete_powder": "",
        "minecraft:green_glazed_terracotta": "",
        "minecraft:green_shulker_box": "",
        "minecraft:green_stained_glass": "",
        "minecraft:green_stained_glass_pane": "",
        "minecraft:green_terracotta": "",
        "minecraft:green_wool": "",
        "minecraft:grindstone": "",
        "minecraft:hanging_roots": "",
        "minecraft:hard_black_stained_glass": "",
        "minecraft:hard_black_stained_glass_pane": "",
        "minecraft:hard_blue_stained_glass": "",
        "minecraft:hard_blue_stained_glass_pane": "",
        "minecraft:hard_brown_stained_glass": "",
        "minecraft:hard_brown_stained_glass_pane": "",
        "minecraft:hard_cyan_stained_glass": "",
        "minecraft:hard_cyan_stained_glass_pane": "",
        "minecraft:hard_glass": "",
        "minecraft:hard_glass_pane": "",
        "minecraft:hard_gray_stained_glass": "",
        "minecraft:hard_gray_stained_glass_pane": "",
        "minecraft:hard_green_stained_glass": "",
        "minecraft:hard_green_stained_glass_pane": "",
        "minecraft:hard_light_blue_stained_glass": "",
        "minecraft:hard_light_blue_stained_glass_pane": "",
        "minecraft:hard_light_gray_stained_glass": "",
        "minecraft:hard_light_gray_stained_glass_pane": "",
        "minecraft:hard_lime_stained_glass": "",
        "minecraft:hard_lime_stained_glass_pane": "",
        "minecraft:hard_magenta_stained_glass": "",
        "minecraft:hard_magenta_stained_glass_pane": "",
        "minecraft:hard_orange_stained_glass": "",
        "minecraft:hard_orange_stained_glass_pane": "",
        "minecraft:hard_pink_stained_glass": "",
        "minecraft:hard_pink_stained_glass_pane": "",
        "minecraft:hard_purple_stained_glass": "",
        "minecraft:hard_purple_stained_glass_pane": "",
        "minecraft:hard_red_stained_glass": "",
        "minecraft:hard_red_stained_glass_pane": "",
        "minecraft:hard_white_stained_glass": "",
        "minecraft:hard_white_stained_glass_pane": "",
        "minecraft:hard_yellow_stained_glass": "",
        "minecraft:hard_yellow_stained_glass_pane": "",
        "minecraft:hardened_clay": "",
        "minecraft:hay_block": "",
        "minecraft:heavy_core": "",
        "minecraft:heavy_weighted_pressure_plate": "",
        "minecraft:honey_block": "",
        "minecraft:honeycomb_block": "",
        "minecraft:hopper": "",
        "minecraft:horn_coral": "",
        "minecraft:horn_coral_block": "",
        "minecraft:horn_coral_fan": "",
        "minecraft:horn_coral_wall_fan": "",
        "minecraft:ice": "",
        "minecraft:infested_chiseled_stone_bricks": "",
        "minecraft:infested_cobblestone": "",
        "minecraft:infested_cracked_stone_bricks": "",
        "minecraft:infested_deepslate": "",
        "minecraft:infested_mossy_stone_bricks": "",
        "minecraft:infested_stone": "",
        "minecraft:infested_stone_bricks": "",
        "minecraft:info_update": "",
        "minecraft:info_update2": "",
        "minecraft:invisible_bedrock": "",
        "minecraft:iron_bars": "",
        "minecraft:iron_block": "",
        "minecraft:iron_door": "",
        "minecraft:iron_ore": "",
        "minecraft:iron_trapdoor": "",
        "minecraft:jigsaw": "",
        "minecraft:jukebox": "",
        "minecraft:jungle_button": "",
        "minecraft:jungle_door": "",
        "minecraft:jungle_double_slab": "",
        "minecraft:jungle_fence": "",
        "minecraft:jungle_fence_gate": "",
        "minecraft:jungle_hanging_sign": "",
        "minecraft:jungle_leaves": "",
        "minecraft:jungle_log": "",
        "minecraft:jungle_planks": "",
        "minecraft:jungle_pressure_plate": "",
        "minecraft:jungle_sapling": "",
        "minecraft:jungle_slab": "",
        "minecraft:jungle_stairs": "",
        "minecraft:jungle_standing_sign": "",
        "minecraft:jungle_trapdoor": "",
        "minecraft:jungle_wall_sign": "",
        "minecraft:jungle_wood": "",
        "minecraft:kelp": "",
        "minecraft:lab_table": "",
        "minecraft:ladder": "",
        "minecraft:lantern": "",
        "minecraft:lapis_block": "",
        "minecraft:lapis_ore": "",
        "minecraft:large_amethyst_bud": "",
        "minecraft:large_fern": "",
        "minecraft:lava": "",
        "minecraft:lectern": "",
        "minecraft:lever": "",
        "minecraft:light_block_0": "",
        "minecraft:light_block_1": "",
        "minecraft:light_block_10": "",
        "minecraft:light_block_11": "",
        "minecraft:light_block_12": "",
        "minecraft:light_block_13": "",
        "minecraft:light_block_14": "",
        "minecraft:light_block_15": "",
        "minecraft:light_block_2": "",
        "minecraft:light_block_3": "",
        "minecraft:light_block_4": "",
        "minecraft:light_block_5": "",
        "minecraft:light_block_6": "",
        "minecraft:light_block_7": "",
        "minecraft:light_block_8": "",
        "minecraft:light_block_9": "",
        "minecraft:light_blue_candle": "",
        "minecraft:light_blue_candle_cake": "",
        "minecraft:light_blue_carpet": "",
        "minecraft:light_blue_concrete": "",
        "minecraft:light_blue_concrete_powder": "",
        "minecraft:light_blue_glazed_terracotta": "",
        "minecraft:light_blue_shulker_box": "",
        "minecraft:light_blue_stained_glass": "",
        "minecraft:light_blue_stained_glass_pane": "",
        "minecraft:light_blue_terracotta": "",
        "minecraft:light_blue_wool": "",
        "minecraft:light_gray_candle": "",
        "minecraft:light_gray_candle_cake": "",
        "minecraft:light_gray_carpet": "",
        "minecraft:light_gray_concrete": "",
        "minecraft:light_gray_concrete_powder": "",
        "minecraft:light_gray_shulker_box": "",
        "minecraft:light_gray_stained_glass": "",
        "minecraft:light_gray_stained_glass_pane": "",
        "minecraft:light_gray_terracotta": "",
        "minecraft:light_gray_wool": "",
        "minecraft:light_weighted_pressure_plate": "",
        "minecraft:lightning_rod": "",
        "minecraft:lilac": "",
        "minecraft:lily_of_the_valley": "",
        "minecraft:lime_candle": "",
        "minecraft:lime_candle_cake": "",
        "minecraft:lime_carpet": "",
        "minecraft:lime_concrete": "",
        "minecraft:lime_concrete_powder": "",
        "minecraft:lime_glazed_terracotta": "",
        "minecraft:lime_shulker_box": "",
        "minecraft:lime_stained_glass": "",
        "minecraft:lime_stained_glass_pane": "",
        "minecraft:lime_terracotta": "",
        "minecraft:lime_wool": "",
        "minecraft:lit_blast_furnace": "",
        "minecraft:lit_deepslate_redstone_ore": "",
        "minecraft:lit_furnace": "",
        "minecraft:lit_pumpkin": "",
        "minecraft:lit_redstone_lamp": "",
        "minecraft:lit_redstone_ore": "",
        "minecraft:lit_smoker": "",
        "minecraft:lodestone": "",
        "minecraft:loom": "",
        "minecraft:magenta_candle": "",
        "minecraft:magenta_candle_cake": "",
        "minecraft:magenta_carpet": "",
        "minecraft:magenta_concrete": "",
        "minecraft:magenta_concrete_powder": "",
        "minecraft:magenta_glazed_terracotta": "",
        "minecraft:magenta_shulker_box": "",
        "minecraft:magenta_stained_glass": "",
        "minecraft:magenta_stained_glass_pane": "",
        "minecraft:magenta_terracotta": "",
        "minecraft:magenta_wool": "",
        "minecraft:magma": "",
        "minecraft:mangrove_button": "",
        "minecraft:mangrove_door": "",
        "minecraft:mangrove_double_slab": "",
        "minecraft:mangrove_fence": "",
        "minecraft:mangrove_fence_gate": "",
        "minecraft:mangrove_hanging_sign": "",
        "minecraft:mangrove_leaves": "",
        "minecraft:mangrove_log": "",
        "minecraft:mangrove_planks": "",
        "minecraft:mangrove_pressure_plate": "",
        "minecraft:mangrove_propagule": "",
        "minecraft:mangrove_roots": "",
        "minecraft:mangrove_slab": "",
        "minecraft:mangrove_stairs": "",
        "minecraft:mangrove_standing_sign": "",
        "minecraft:mangrove_trapdoor": "",
        "minecraft:mangrove_wall_sign": "",
        "minecraft:mangrove_wood": "",
        "minecraft:material_reducer": "",
        "minecraft:medium_amethyst_bud": "",
        "minecraft:melon_block": "",
        "minecraft:melon_stem": "",
        "minecraft:mob_spawner": "",
        "minecraft:moss_block": "",
        "minecraft:moss_carpet": "",
        "minecraft:mossy_cobblestone": "",
        "minecraft:mossy_cobblestone_double_slab": "",
        "minecraft:mossy_cobblestone_slab": "",
        "minecraft:mossy_cobblestone_stairs": "",
        "minecraft:mossy_cobblestone_wall": "",
        "minecraft:mossy_stone_brick_double_slab": "",
        "minecraft:mossy_stone_brick_slab": "",
        "minecraft:mossy_stone_brick_stairs": "",
        "minecraft:mossy_stone_brick_wall": "",
        "minecraft:mossy_stone_bricks": "",
        "minecraft:moving_block": "",
        "minecraft:mud": "",
        "minecraft:mud_brick_double_slab": "",
        "minecraft:mud_brick_slab": "",
        "minecraft:mud_brick_stairs": "",
        "minecraft:mud_brick_wall": "",
        "minecraft:mud_bricks": "",
        "minecraft:muddy_mangrove_roots": "",
        "minecraft:mycelium": "",
        "minecraft:nether_brick": "",
        "minecraft:nether_brick_double_slab": "",
        "minecraft:nether_brick_fence": "",
        "minecraft:nether_brick_slab": "",
        "minecraft:nether_brick_stairs": "",
        "minecraft:nether_brick_wall": "",
        "minecraft:nether_gold_ore": "",
        "minecraft:nether_sprouts": "",
        "minecraft:nether_wart": "",
        "minecraft:nether_wart_block": "",
        "minecraft:netherite_block": "",
        "minecraft:netherrack": "",
        "minecraft:netherreactor": "",
        "minecraft:normal_stone_double_slab": "",
        "minecraft:normal_stone_slab": "",
        "minecraft:normal_stone_stairs": "",
        "minecraft:noteblock": "",
        "minecraft:oak_double_slab": "",
        "minecraft:oak_fence": "",
        "minecraft:oak_hanging_sign": "",
        "minecraft:oak_leaves": "",
        "minecraft:oak_log": "",
        "minecraft:oak_planks": "",
        "minecraft:oak_sapling": "",
        "minecraft:oak_slab": "",
        "minecraft:oak_stairs": "",
        "minecraft:oak_wood": "",
        "minecraft:observer": "",
        "minecraft:obsidian": "",
        "minecraft:ochre_froglight": "",
        "minecraft:orange_candle": "",
        "minecraft:orange_candle_cake": "",
        "minecraft:orange_carpet": "",
        "minecraft:orange_concrete": "",
        "minecraft:orange_concrete_powder": "",
        "minecraft:orange_glazed_terracotta": "",
        "minecraft:orange_shulker_box": "",
        "minecraft:orange_stained_glass": "",
        "minecraft:orange_stained_glass_pane": "",
        "minecraft:orange_terracotta": "",
        "minecraft:orange_tulip": "",
        "minecraft:orange_wool": "",
        "minecraft:oxeye_daisy": "",
        "minecraft:oxidized_chiseled_copper": "",
        "minecraft:oxidized_copper": "",
        "minecraft:oxidized_copper_bulb": "",
        "minecraft:oxidized_copper_door": "",
        "minecraft:oxidized_copper_grate": "",
        "minecraft:oxidized_copper_trapdoor": "",
        "minecraft:oxidized_cut_copper": "",
        "minecraft:oxidized_cut_copper_slab": "",
        "minecraft:oxidized_cut_copper_stairs": "",
        "minecraft:oxidized_double_cut_copper_slab": "",
        "minecraft:packed_ice": "",
        "minecraft:packed_mud": "",
        "minecraft:pearlescent_froglight": "",
        "minecraft:peony": "",
        "minecraft:petrified_oak_double_slab": "",
        "minecraft:petrified_oak_slab": "",
        "minecraft:pink_candle": "",
        "minecraft:pink_candle_cake": "",
        "minecraft:pink_carpet": "",
        "minecraft:pink_concrete": "",
        "minecraft:pink_concrete_powder": "",
        "minecraft:pink_glazed_terracotta": "",
        "minecraft:pink_petals": "",
        "minecraft:pink_shulker_box": "",
        "minecraft:pink_stained_glass": "",
        "minecraft:pink_stained_glass_pane": "",
        "minecraft:pink_terracotta": "",
        "minecraft:pink_tulip": "",
        "minecraft:pink_wool": "",
        "minecraft:piston": "",
        "minecraft:piston_arm_collision": "",
        "minecraft:pitcher_crop": "",
        "minecraft:pitcher_plant": "",
        "minecraft:podzol": "",
        "minecraft:pointed_dripstone": "",
        "minecraft:polished_andesite": "",
        "minecraft:polished_andesite_double_slab": "",
        "minecraft:polished_andesite_slab": "",
        "minecraft:polished_andesite_stairs": "",
        "minecraft:polished_basalt": "",
        "minecraft:polished_blackstone": "",
        "minecraft:polished_blackstone_brick_double_slab": "",
        "minecraft:polished_blackstone_brick_slab": "",
        "minecraft:polished_blackstone_brick_stairs": "",
        "minecraft:polished_blackstone_brick_wall": "",
        "minecraft:polished_blackstone_bricks": "",
        "minecraft:polished_blackstone_button": "",
        "minecraft:polished_blackstone_double_slab": "",
        "minecraft:polished_blackstone_pressure_plate": "",
        "minecraft:polished_blackstone_slab": "",
        "minecraft:polished_blackstone_stairs": "",
        "minecraft:polished_blackstone_wall": "",
        "minecraft:polished_deepslate": "",
        "minecraft:polished_deepslate_double_slab": "",
        "minecraft:polished_deepslate_slab": "",
        "minecraft:polished_deepslate_stairs": "",
        "minecraft:polished_deepslate_wall": "",
        "minecraft:polished_diorite": "",
        "minecraft:polished_diorite_double_slab": "",
        "minecraft:polished_diorite_slab": "",
        "minecraft:polished_diorite_stairs": "",
        "minecraft:polished_granite": "",
        "minecraft:polished_granite_double_slab": "",
        "minecraft:polished_granite_slab": "",
        "minecraft:polished_granite_stairs": "",
        "minecraft:polished_tuff": "",
        "minecraft:polished_tuff_double_slab": "",
        "minecraft:polished_tuff_slab": "",
        "minecraft:polished_tuff_stairs": "",
        "minecraft:polished_tuff_wall": "",
        "minecraft:poppy": "",
        "minecraft:portal": "",
        "minecraft:potatoes": "",
        "minecraft:powder_snow": "",
        "minecraft:powered_comparator": "",
        "minecraft:powered_repeater": "",
        "minecraft:prismarine": "",
        "minecraft:prismarine_brick_double_slab": "",
        "minecraft:prismarine_brick_slab": "",
        "minecraft:prismarine_bricks": "",
        "minecraft:prismarine_bricks_stairs": "",
        "minecraft:prismarine_double_slab": "",
        "minecraft:prismarine_slab": "",
        "minecraft:prismarine_stairs": "",
        "minecraft:prismarine_wall": "",
        "minecraft:pumpkin": "",
        "minecraft:pumpkin_stem": "",
        "minecraft:purple_candle": "",
        "minecraft:purple_candle_cake": "",
        "minecraft:purple_carpet": "",
        "minecraft:purple_concrete": "",
        "minecraft:purple_concrete_powder": "",
        "minecraft:purple_glazed_terracotta": "",
        "minecraft:purple_shulker_box": "",
        "minecraft:purple_stained_glass": "",
        "minecraft:purple_stained_glass_pane": "",
        "minecraft:purple_terracotta": "",
        "minecraft:purple_wool": "",
        "minecraft:purpur_block": "",
        "minecraft:purpur_double_slab": "",
        "minecraft:purpur_pillar": "",
        "minecraft:purpur_slab": "",
        "minecraft:purpur_stairs": "",
        "minecraft:quartz_block": "",
        "minecraft:quartz_bricks": "",
        "minecraft:quartz_double_slab": "",
        "minecraft:quartz_ore": "",
        "minecraft:quartz_pillar": "",
        "minecraft:quartz_slab": "",
        "minecraft:quartz_stairs": "",
        "minecraft:rail": "",
        "minecraft:raw_copper_block": "",
        "minecraft:raw_gold_block": "",
        "minecraft:raw_iron_block": "",
        "minecraft:red_candle": "",
        "minecraft:red_candle_cake": "",
        "minecraft:red_carpet": "",
        "minecraft:red_concrete": "",
        "minecraft:red_concrete_powder": "",
        "minecraft:red_glazed_terracotta": "",
        "minecraft:red_mushroom": "",
        "minecraft:red_mushroom_block": "",
        "minecraft:red_nether_brick": "",
        "minecraft:red_nether_brick_double_slab": "",
        "minecraft:red_nether_brick_slab": "",
        "minecraft:red_nether_brick_stairs": "",
        "minecraft:red_nether_brick_wall": "",
        "minecraft:red_sand": "",
        "minecraft:red_sandstone": "",
        "minecraft:red_sandstone_double_slab": "",
        "minecraft:red_sandstone_slab": "",
        "minecraft:red_sandstone_stairs": "",
        "minecraft:red_sandstone_wall": "",
        "minecraft:red_shulker_box": "",
        "minecraft:red_stained_glass": "",
        "minecraft:red_stained_glass_pane": "",
        "minecraft:red_terracotta": "",
        "minecraft:red_tulip": "",
        "minecraft:red_wool": "",
        "minecraft:redstone_block": "",
        "minecraft:redstone_lamp": "",
        "minecraft:redstone_ore": "",
        "minecraft:redstone_torch": "",
        "minecraft:redstone_wire": "",
        "minecraft:reeds": "",
        "minecraft:reinforced_deepslate": "",
        "minecraft:repeating_command_block": "",
        "minecraft:reserved6": "",
        "minecraft:respawn_anchor": "",
        "minecraft:rose_bush": "",
        "minecraft:sand": "",
        "minecraft:sandstone": "",
        "minecraft:sandstone_double_slab": "",
        "minecraft:sandstone_slab": "",
        "minecraft:sandstone_stairs": "",
        "minecraft:sandstone_wall": "",
        "minecraft:scaffolding": "",
        "minecraft:sculk": "",
        "minecraft:sculk_catalyst": "",
        "minecraft:sculk_sensor": "",
        "minecraft:sculk_shrieker": "",
        "minecraft:sculk_vein": "",
        "minecraft:sea_lantern": "",
        "minecraft:sea_pickle": "",
        "minecraft:seagrass": "",
        "minecraft:short_grass": "",
        "minecraft:shroomlight": "",
        "minecraft:silver_glazed_terracotta": "",
        "minecraft:skull": "",
        "minecraft:slime": "",
        "minecraft:small_amethyst_bud": "",
        "minecraft:small_dripleaf_block": "",
        "minecraft:smithing_table": "",
        "minecraft:smoker": "",
        "minecraft:smooth_basalt": "",
        "minecraft:smooth_quartz": "",
        "minecraft:smooth_quartz_double_slab": "",
        "minecraft:smooth_quartz_slab": "",
        "minecraft:smooth_quartz_stairs": "",
        "minecraft:smooth_red_sandstone": "",
        "minecraft:smooth_red_sandstone_double_slab": "",
        "minecraft:smooth_red_sandstone_slab": "",
        "minecraft:smooth_red_sandstone_stairs": "",
        "minecraft:smooth_sandstone": "",
        "minecraft:smooth_sandstone_double_slab": "",
        "minecraft:smooth_sandstone_slab": "",
        "minecraft:smooth_sandstone_stairs": "",
        "minecraft:smooth_stone": "",
        "minecraft:smooth_stone_double_slab": "",
        "minecraft:smooth_stone_slab": "",
        "minecraft:sniffer_egg": "",
        "minecraft:snow": "",
        "minecraft:snow_layer": "",
        "minecraft:soul_campfire": "",
        "minecraft:soul_fire": "",
        "minecraft:soul_lantern": "",
        "minecraft:soul_sand": "",
        "minecraft:soul_soil": "",
        "minecraft:soul_torch": "",
        "minecraft:sponge": "",
        "minecraft:spore_blossom": "",
        "minecraft:spruce_button": "",
        "minecraft:spruce_door": "",
        "minecraft:spruce_double_slab": "",
        "minecraft:spruce_fence": "",
        "minecraft:spruce_fence_gate": "",
        "minecraft:spruce_hanging_sign": "",
        "minecraft:spruce_leaves": "",
        "minecraft:spruce_log": "",
        "minecraft:spruce_planks": "",
        "minecraft:spruce_pressure_plate": "",
        "minecraft:spruce_sapling": "",
        "minecraft:spruce_slab": "",
        "minecraft:spruce_stairs": "",
        "minecraft:spruce_standing_sign": "",
        "minecraft:spruce_trapdoor": "",
        "minecraft:spruce_wall_sign": "",
        "minecraft:spruce_wood": "",
        "minecraft:standing_banner": "",
        "minecraft:standing_sign": "",
        "minecraft:sticky_piston": "",
        "minecraft:sticky_piston_arm_collision": "",
        "minecraft:stone": "",
        "minecraft:stone_brick_double_slab": "",
        "minecraft:stone_brick_slab": "",
        "minecraft:stone_brick_stairs": "",
        "minecraft:stone_brick_wall": "",
        "minecraft:stone_bricks": "",
        "minecraft:stone_button": "",
        "minecraft:stone_pressure_plate": "",
        "minecraft:stone_stairs": "",
        "minecraft:stonecutter": "",
        "minecraft:stonecutter_block": "",
        "minecraft:stripped_acacia_log": "",
        "minecraft:stripped_acacia_wood": "",
        "minecraft:stripped_bamboo_block": "",
        "minecraft:stripped_birch_log": "",
        "minecraft:stripped_birch_wood": "",
        "minecraft:stripped_cherry_log": "",
        "minecraft:stripped_cherry_wood": "",
        "minecraft:stripped_crimson_hyphae": "",
        "minecraft:stripped_crimson_stem": "",
        "minecraft:stripped_dark_oak_log": "",
        "minecraft:stripped_dark_oak_wood": "",
        "minecraft:stripped_jungle_log": "",
        "minecraft:stripped_jungle_wood": "",
        "minecraft:stripped_mangrove_log": "",
        "minecraft:stripped_mangrove_wood": "",
        "minecraft:stripped_oak_log": "",
        "minecraft:stripped_oak_wood": "",
        "minecraft:stripped_spruce_log": "",
        "minecraft:stripped_spruce_wood": "",
        "minecraft:stripped_warped_hyphae": "",
        "minecraft:stripped_warped_stem": "",
        "minecraft:structure_block": "",
        "minecraft:structure_void": "",
        "minecraft:sunflower": "",
        "minecraft:suspicious_gravel": "",
        "minecraft:suspicious_sand": "",
        "minecraft:sweet_berry_bush": "",
        "minecraft:tall_grass": "",
        "minecraft:target": "",
        "minecraft:tinted_glass": "",
        "minecraft:tnt": "",
        "minecraft:torch": "",
        "minecraft:torchflower": "",
        "minecraft:torchflower_crop": "",
        "minecraft:trapdoor": "",
        "minecraft:trapped_chest": "",
        "minecraft:trial_spawner": "",
        "minecraft:trip_wire": "",
        "minecraft:tripwire_hook": "",
        "minecraft:tube_coral": "",
        "minecraft:tube_coral_block": "",
        "minecraft:tube_coral_fan": "",
        "minecraft:tube_coral_wall_fan": "",
        "minecraft:tuff": "",
        "minecraft:tuff_brick_double_slab": "",
        "minecraft:tuff_brick_slab": "",
        "minecraft:tuff_brick_stairs": "",
        "minecraft:tuff_brick_wall": "",
        "minecraft:tuff_bricks": "",
        "minecraft:tuff_double_slab": "",
        "minecraft:tuff_slab": "",
        "minecraft:tuff_stairs": "",
        "minecraft:tuff_wall": "",
        "minecraft:turtle_egg": "",
        "minecraft:twisting_vines": "",
        "minecraft:underwater_tnt": "",
        "minecraft:underwater_torch": "",
        "minecraft:undyed_shulker_box": "",
        "minecraft:unknown": "",
        "minecraft:unlit_redstone_torch": "",
        "minecraft:unpowered_comparator": "",
        "minecraft:unpowered_repeater": "",
        "minecraft:vault": "",
        "minecraft:verdant_froglight": "",
        "minecraft:vine": "",
        "minecraft:wall_banner": "",
        "minecraft:wall_sign": "",
        "minecraft:warped_button": "",
        "minecraft:warped_door": "",
        "minecraft:warped_double_slab": "",
        "minecraft:warped_fence": "",
        "minecraft:warped_fence_gate": "",
        "minecraft:warped_fungus": "",
        "minecraft:warped_hanging_sign": "",
        "minecraft:warped_hyphae": "",
        "minecraft:warped_nylium": "",
        "minecraft:warped_planks": "",
        "minecraft:warped_pressure_plate": "",
        "minecraft:warped_roots": "",
        "minecraft:warped_slab": "",
        "minecraft:warped_stairs": "",
        "minecraft:warped_standing_sign": "",
        "minecraft:warped_stem": "",
        "minecraft:warped_trapdoor": "",
        "minecraft:warped_wall_sign": "",
        "minecraft:warped_wart_block": "",
        "minecraft:water": "",
        "minecraft:waterlily": "",
        "minecraft:waxed_chiseled_copper": "",
        "minecraft:waxed_copper": "",
        "minecraft:waxed_copper_bulb": "",
        "minecraft:waxed_copper_door": "",
        "minecraft:waxed_copper_grate": "",
        "minecraft:waxed_copper_trapdoor": "",
        "minecraft:waxed_cut_copper": "",
        "minecraft:waxed_cut_copper_slab": "",
        "minecraft:waxed_cut_copper_stairs": "",
        "minecraft:waxed_double_cut_copper_slab": "",
        "minecraft:waxed_exposed_chiseled_copper": "",
        "minecraft:waxed_exposed_copper": "",
        "minecraft:waxed_exposed_copper_bulb": "",
        "minecraft:waxed_exposed_copper_door": "",
        "minecraft:waxed_exposed_copper_grate": "",
        "minecraft:waxed_exposed_copper_trapdoor": "",
        "minecraft:waxed_exposed_cut_copper": "",
        "minecraft:waxed_exposed_cut_copper_slab": "",
        "minecraft:waxed_exposed_cut_copper_stairs": "",
        "minecraft:waxed_exposed_double_cut_copper_slab": "",
        "minecraft:waxed_oxidized_chiseled_copper": "",
        "minecraft:waxed_oxidized_copper": "",
        "minecraft:waxed_oxidized_copper_bulb": "",
        "minecraft:waxed_oxidized_copper_door": "",
        "minecraft:waxed_oxidized_copper_grate": "",
        "minecraft:waxed_oxidized_copper_trapdoor": "",
        "minecraft:waxed_oxidized_cut_copper": "",
        "minecraft:waxed_oxidized_cut_copper_slab": "",
        "minecraft:waxed_oxidized_cut_copper_stairs": "",
        "minecraft:waxed_oxidized_double_cut_copper_slab": "",
        "minecraft:waxed_weathered_chiseled_copper": "",
        "minecraft:waxed_weathered_copper": "",
        "minecraft:waxed_weathered_copper_bulb": "",
        "minecraft:waxed_weathered_copper_door": "",
        "minecraft:waxed_weathered_copper_grate": "",
        "minecraft:waxed_weathered_copper_trapdoor": "",
        "minecraft:waxed_weathered_cut_copper": "",
        "minecraft:waxed_weathered_cut_copper_slab": "",
        "minecraft:waxed_weathered_cut_copper_stairs": "",
        "minecraft:waxed_weathered_double_cut_copper_slab": "",
        "minecraft:weathered_chiseled_copper": "",
        "minecraft:weathered_copper": "",
        "minecraft:weathered_copper_bulb": "",
        "minecraft:weathered_copper_door": "",
        "minecraft:weathered_copper_grate": "",
        "minecraft:weathered_copper_trapdoor": "",
        "minecraft:weathered_cut_copper": "",
        "minecraft:weathered_cut_copper_slab": "",
        "minecraft:weathered_cut_copper_stairs": "",
        "minecraft:weathered_double_cut_copper_slab": "",
        "minecraft:web": "",
        "minecraft:weeping_vines": "",
        "minecraft:wet_sponge": "",
        "minecraft:wheat": "",
        "minecraft:white_candle": "",
        "minecraft:white_candle_cake": "",
        "minecraft:white_carpet": "",
        "minecraft:white_concrete": "",
        "minecraft:white_concrete_powder": "",
        "minecraft:white_glazed_terracotta": "",
        "minecraft:white_shulker_box": "",
        "minecraft:white_stained_glass": "",
        "minecraft:white_stained_glass_pane": "",
        "minecraft:white_terracotta": "",
        "minecraft:white_tulip": "",
        "minecraft:white_wool": "",
        "minecraft:wither_rose": "",
        "minecraft:wooden_button": "",
        "minecraft:wooden_door": "",
        "minecraft:wooden_pressure_plate": "",
        "minecraft:yellow_candle": "",
        "minecraft:yellow_candle_cake": "",
        "minecraft:yellow_carpet": "",
        "minecraft:yellow_concrete": "",
        "minecraft:yellow_concrete_powder": "",
        "minecraft:yellow_glazed_terracotta": "",
        "minecraft:yellow_shulker_box": "",
        "minecraft:yellow_stained_glass": "",
        "minecraft:yellow_stained_glass_pane": "",
        "minecraft:yellow_terracotta": "",
        "minecraft:yellow_wool": "",
    },
    "entity": {
        "agent": "0x00000312 (0x56)",
        "allay": "0x00000390 (0x134)",
        "area_effect_cloud": "0x00000095 (0x95)",
        "armadillo": "0x00005006 (0x142)",
        "armor_stand": "0x00000317 (0x61)",
        "arrow": "0x12582992 (0x80)",
        "axolotl": "0x00004994 (0x130)",
        "balloon": "0x00000107 (0x107)",
        "bat": "0x00033043 (0x19)",
        "bee": "0x00000378 (0x122)",
        "blaze": "0x00002859 (0x43)",
        "boat": "0x00000090 (0x90)",
        "bogged": "0x01117072 (0x144)",
        "breeze": "0x00002956 (0x140)",
        "breeze_wind_charge_projectile": "0x04194445 (0x141)",
        "camel": "0x00005002 (0x138)",
        "cat": "0x00021323 (0x75)",
        "cave_spider": "0x00265000 (0x40)",
        "chalkboard": "0x00000078 (0x78)",
        "chest_boat": "0x00000218 (0x218)",
        "chest_minecart": "0x00524386 (0x98)",
        "chicken": "0x00004874 (0x10)",
        "cod": "0x00009072 (0x112)",
        "command_block_minecart": "0x00524388 (0x100)",
        "cow": "0x00004875 (0x11)",
        "creeper": "0x00002849 (0x33)",
        "dolphin": "0x00008991 (0x31)",
        "donkey": "0x02118424 (0x24)",
        "dragon_fireball": "0x04194383 (0x79)",
        "drowned": "0x00199534 (0x110)",
        "egg": "0x04194386 (0x82)",
        "elder_guardian": "0x00002866 (0x50)",
        "elder_guardian_ghost": "0x00002936 (0x120)",
        "ender_crystal": "0x00000071 (0x71)",
        "ender_dragon": "0x00002869 (0x53)",
        "ender_pearl": "0x04194391 (0x87)",
        "enderman": "0x00002854 (0x38)",
        "endermite": "0x00265015 (0x55)",
        "evocation_fang": "0x04194407 (0x103)",
        "evocation_illager": "0x00002920 (0x104)",
        "eye_of_ender_signal": "0x00000070 (0x70)",
        "falling_block": "0x00000066 (0x66)",
        "fireball": "0x04194389 (0x85)",
        "fireworks_rocket": "0x00000072 (0x72)",
        "fishing_hook": "0x00000077 (0x77)",
        "fox": "0x00004985 (0x121)",
        "frog": "0x00004996 (0x132)",
        "ghast": "0x00002857 (0x41)",
        "glow_squid": "0x00009089 (0x129)",
        "goat": "0x00004992 (0x128)",
        "guardian": "0x00002865 (0x49)",
        "hoglin": "0x00004988 (0x124)",
        "hopper_minecart": "0x00524384 (0x96)",
        "horse": "0x02118423 (0x23)",
        "husk": "0x00199471 (0x47)",
        "ice_bomb": "0x04194410 (0x106)",
        "iron_golem": "0x00000788 (0x20)",
        "item": "0x00000064 (0x64)",
        "leash_knot": "0x00000088 (0x88)",
        "lightning_bolt": "0x00000093 (0x93)",
        "lingering_potion": "0x04194405 (0x101)",
        "llama": "0x00004893 (0x29)",
        "llama_spit": "0x04194406 (0x102)",
        "magma_cube": "0x00002858 (0x42)",
        "minecart": "0x00524372 (0x84)",
        "mooshroom": "0x00004880 (0x16)",
        "moving_block": "0x00000067 (0x67)",
        "mule": "0x02118425 (0x25)",
        "npc": "0x00000307 (0x51)",
        "ocelot": "0x00021270 (0x22)",
        "ominous_item_spawner": "0x00000145 (0x145)",
        "painting": "0x00000083 (0x83)",
        "panda": "0x00004977 (0x113)",
        "parrot": "0x00021278 (0x30)",
        "phantom": "0x00068410 (0x58)",
        "pig": "0x00004876 (0x12)",
        "piglin": "0x00000379 (0x123)",
        "piglin_brute": "0x00000383 (0x127)",
        "pillager": "0x00002930 (0x114)",
        "player": "0x00000319 (0x63)",
        "polar_bear": "0x00004892 (0x28)",
        "pufferfish": "0x00009068 (0x108)",
        "rabbit": "0x00004882 (0x18)",
        "ravager": "0x00002875 (0x59)",
        "salmon": "0x00009069 (0x109)",
        "sheep": "0x00004877 (0x13)",
        "shield": "0x00000117 (0x117)",
        "shulker": "0x00002870 (0x54)",
        "shulker_bullet": "0x04194380 (0x76)",
        "silverfish": "0x00264999 (0x39)",
        "skeleton": "0x01116962 (0x34)",
        "skeleton_horse": "0x02186010 (0x26)",
        "slime": "0x00002853 (0x37)",
        "small_fireball": "0x04194398 (0x94)",
        "sniffer": "0x00005003 (0x139)",
        "snow_golem": "0x00000789 (0x21)",
        "snowball": "0x04194385 (0x81)",
        "spider": "0x00264995 (0x35)",
        "splash_potion": "0x04194390 (0x86)",
        "squid": "0x00008977 (0x17)",
        "stray": "0x01116974 (0x46)",
        "strider": "0x00004989 (0x125)",
        "tadpole": "0x00009093 (0x133)",
        "thrown_trident": "0x12582985 (0x73)",
        "tnt": "0x00000065 (0x65)",
        "tnt_minecart": "0x00524385 (0x97)",
        "trader_llama": "0x00005021 (0x157)",
        "tripod_camera": "0x00000318 (0x62)",
        "tropicalfish": "0x00009071 (0x111)",
        "turtle": "0x00004938 (0x74)",
        "undefined_test_only": "0x00000001 (0x01)",
        "vex": "0x00002921 (0x105)",
        "villager": "0x16777999 (0x15)",
        "villager_v2": "0x16778099 (0x115)",
        "vindicator": "0x00002873 (0x57)",
        "wandering_trader": "0x00000886 (0x118)",
        "warden": "0x00002947 (0x131)",
        "wind_charge_projectile": "0x04194447 (0x143)",
        "witch": "0x00002861 (0x45)",
        "wither": "0x00068404 (0x52)",
        "wither_skeleton": "0x01116976 (0x48)",
        "wither_skull": "0x04194393 (0x89)",
        "wither_skull_dangerous": "0x04194395 (0x91)",
        "wolf": "0x00021262 (0x14)",
        "xp_bottle": "0x04194372 (0x68)",
        "xp_orb": "0x00000069 (0x69)",
        "zoglin": "0x00068478 (0x126)",
        "zombie": "0x00199456 (0x32)",
        "zombie_horse": "0x02186011 (0x27)",
        "zombie_pigman": "0x00068388 (0x36)",
        "zombie_villager": "0x00199468 (0x44)",
        "zombie_villager_v2": "0x00199540 (0x116)",
    },
    "damageSource": {
        "all": "",
        "anvil": "",
        "block_explosion": "",
        "campfire": "",
        "charging": "",
        "contact": "",
        "drowning": "",
        "entity_attack": "",
        "entity_explosion": "",
        "fall": "",
        "falling_block": "",
        "fire": "",
        "fire_tick": "",
        "fireworks": "",
        "fly_into_wall": "",
        "freezing": "",
        "lava": "",
        "lightning": "",
        "mace_smash": "",
        "magic": "",
        "magma": "",
        "none": "",
        "override": "",
        "piston": "",
        "projectile": "",
        "ram_attack": "",
        "self_destruct": "",
        "sonic_boom": "",
        "soul_campfire": "",
        "stalactite": "",
        "stalagmite": "",
        "starve": "",
        "suffocation": "",
        "temperature": "",
        "thorns": "",
        "void": "",
        "wither": "",
    },
    "schema": {
        "block_components": {
            "description": "",
            "children": [
                {
                    "name": "bone_visibility",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "A JSON object that contains a list of key/value pairs that map from bone name in the specified geometry file (key) to a boolean that tells whether the bone should be visible or not (value).",
                },
                {
                    "name": "minecraft:breathability",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Determines whether the block is breathable by defining if the block is treated as a `solid` or as `air`. The default is `solid` if this component is omitted.",
                },
                {
                    "name": "minecraft:collision_box",
                    "type": "Boolean / JSON Object",
                    "defaultValue": "true",
                    "description": "Defines the area of the block that collides with entities. If set to true, default values are used. If set to false, the block's collision with entities is disabled. If this component is omitted, default values are used.",
                    "children": [
                        {
                            "name": "origin",
                            "type": "Vector [a, b, c]",
                            "defaultValue": "[-8.0, 0.0, -8.0]",
                            "description": "Minimal position of the bounds of the collision box. \"origin\" is specified as [x, y, z] and must be in the range (-8, 0, -8) to (8, 16, 8), inclusive.",
                        },
                        {
                            "name": "size",
                            "type": "Vector [a, b, c]",
                            "defaultValue": "[16.0, 16.0, 16.0]",
                            "description": "Size of each side of the collision box. Size is specified as [x, y, z]. \"origin\" + \"size\" must be in the range (-8, 0, -8) to (8, 16, 8), inclusive.",
                        },
                    ],
                },
                {
                    "name": "minecraft:crafting_table",
                    "type": "JSON Object",
                    "defaultValue": "",
                },
                {
                    "name": "minecraft:custom_components",
                    "type": "Array",
                    "defaultValue": "",
                    "description": "Sets an ordered list of custom component names which are bound in script to be executed upon a block event.",
                },
                {
                    "name": "minecraft:destructible_by_explosion",
                    "type": "Boolean / JSON Object",
                    "defaultValue": "true",
                    "description": "Describes the destructible by explosion properties for this block. If set to true, the block will have the default explosion resistance. If set to false, this block is indestructible by explosion. If the component is omitted, the block will have the default explosion resistance.",
                    "children": [
                        {
                            "name": "explosion_resistance",
                            "type": "Decimal",
                            "defaultValue": "0",
                            "description": "Sets the explosion resistance for the block. Greater values result in greater resistance to explosions. The scale will be different for different explosion power levels. A negative value or 0 means it will easily explode; larger numbers increase level of resistance.",
                        },
                    ],
                },
                {
                    "name": "minecraft:destructible_by_mining",
                    "type": "Boolean / JSON Object",
                    "defaultValue": "true",
                    "description": "Describes the destructible by mining properties for this block. If set to true, the block will take the default number of seconds to destroy. If set to false, this block is indestructible by mining. If the component is omitted, the block will take the default number of seconds to destroy.",
                    "children": [
                        {
                            "name": "item_specific_speeds",
                            "type": "Array",
                            "defaultValue": "",
                        },
                        {
                            "name": "seconds_to_destroy",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "Sets the number of seconds it takes to destroy the block with base equipment. Greater numbers result in greater mining times.",
                        },
                    ],
                },
                {
                    "name": "minecraft:display_name",
                    "type": "Localization String",
                    "defaultValue": "",
                    "description": "Specifies the language file key that maps to what text will be displayed when you hover over the block in your inventory and hotbar. If the string given can not be resolved as a loc string, the raw string given will be displayed. If this component is omitted, the name of the block will be used as the display name.",
                },
                {
                    "name": "minecraft:flammable",
                    "type": "Boolean / JSON Object",
                    "defaultValue": "",
                    "description": "Describes the flammable properties for this block. If set to true, default values are used. If set to false, or if this component is omitted, the block will not be able to catch on fire naturally from neighbors, but it can still be directly ignited.",
                    "children": [
                        {
                            "name": "catch_chance_modifier",
                            "type": "Integer",
                            "defaultValue": "5",
                            "description": "A modifier affecting the chance that this block will catch flame when next to a fire. Values are greater than or equal to 0, with a higher number meaning more likely to catch on fire. For a \"catch_chance_modifier\" greater than 0, the fire will continue to burn until the block is destroyed (or it will burn forever if the \"destroy_chance_modifier\" is 0). If the \"catch_chance_modifier\" is 0, and the block is directly ignited, the fire will eventually burn out without destroying the block (or it will have a chance to be destroyed if \"destroy_chance_modifier\" is greater than 0). The default value of 5 is the same as that of Planks.",
                        },
                        {
                            "name": "destroy_chance_modifier",
                            "type": "Integer",
                            "defaultValue": "20",
                            "description": "A modifier affecting the chance that this block will be destroyed by flames when on fire. Values are greater than or equal to 0, with a higher number meaning more likely to be destroyed by fire. For a \"destroy_chance_modifier\" of 0, the block will never be destroyed by fire, and the fire will burn forever if the \"catch_chance_modifier\" is greater than 0. The default value of 20 is the same as that of Planks.",
                        },
                    ],
                },
                {
                    "name": "minecraft:friction",
                    "type": "Decimal",
                    "defaultValue": "0.4",
                    "description": "Describes the friction for this block in a range of (0.0-0.9). Friction affects an entity's movement speed when it travels on the block. Greater value results in more friction.",
                },
                {
                    "name": "minecraft:geometry",
                    "type": "Identifier String",
                    "defaultValue": "",
                    "description": "The description identifier of the geometry to use to render this block. This identifier must either match an existing geometry identifier in any of the loaded resource packs or be one of the currently supported Vanilla identifiers: \"minecraft:geometry.full_block\" or \"minecraft:geometry.cross\".",
                },
                {
                    "name": "minecraft:light_dampening",
                    "type": "Integer",
                    "defaultValue": "15",
                    "description": "The amount that light will be dampened when it passes through the block, in a range (0-15). Higher value means the light will be dampened more.",
                },
                {
                    "name": "minecraft:light_emission",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The amount of light this block will emit in a range (0-15). Higher value means more light will be emitted.",
                },
                {
                    "name": "minecraft:loot",
                    "type": "Path String",
                    "defaultValue": "",
                    "description": "The path to the loot table, relative to the behavior pack. Path string is limited to 256 characters.",
                },
                {
                    "name": "minecraft:map_color",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sets the color of the block when rendered to a map. The color is represented as a hex value in the format \"#RRGGBB\". May also be expressed as an array of [R, G, B] from 0 to 255. If this component is omitted, the block will not show up on the map.",
                },
                {
                    "name": "minecraft:material_instances",
                    "type": "JSON Object",
                    "defaultValue": "",
                },
                {
                    "name": "minecraft:placement_filter",
                    "type": "JSON Object",
                    "defaultValue": "",
                },
                {
                    "name": "minecraft:queued_ticking",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Triggers the specified event, either once, or at a regular interval equal to a number of ticks randomly chosen from the interval_range provided.",
                    "children": [
                        {
                            "name": "interval_range",
                            "type": "Array",
                            "defaultValue": "",
                            "description": "A range of values, specified in ticks, that will be used to decide the interval between times this event triggers. Each interval will be chosen randomly from the range, so the times between this event triggering will differ given an interval_range of two different values. If the values in the interval_range are the same, the event will always be triggered after that number of ticks.",
                        },
                        {
                            "name": "looping",
                            "type": "Boolean",
                            "defaultValue": "true",
                            "description": "Does the event loop? If false, the event will only be triggered once, after a delay equal to a number of ticks randomly chosen from the interval_range. If true, the event will loop, and each interval between events will be equal to a number of ticks randomly chosen from the interval_range.",
                        },
                        {
                            "name": "on_tick",
                            "type": "Trigger",
                            "defaultValue": "",
                            "description": "The event that will be triggered once or on an interval.",
                            "children": [
                                {
                                    "name": "condition",
                                    "type": "String",
                                    "defaultValue": "1",
                                    "description": "A condition using Molang queries that results to true/false. If true on the scheduled tick, the event will be triggered. If false on the scheduled tick, the event will not be triggered.",
                                },
                                {
                                    "name": "event",
                                    "type": "String",
                                    "defaultValue": "set_block_state",
                                    "description": "The event that will be triggered.",
                                },
                                {
                                    "name": "target",
                                    "type": "String",
                                    "defaultValue": "self",
                                    "description": "The target of the event executed by the block.",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "minecraft:random_ticking",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Triggers the specified event randomly based on the random tick speed gamerule. The random tick speed determines how often blocks are updated. Some other examples of game mechanics that use random ticking are crop growth and fire spreading.",
                    "children": [
                        {
                            "name": "on_tick",
                            "type": "Trigger",
                            "defaultValue": "",
                            "description": "The event that will be triggered on random ticks.",
                            "children": [
                                {
                                    "name": "condition",
                                    "type": "String",
                                    "defaultValue": "1",
                                    "description": "A condition using Molang queries that results to true/false. If true on the random tick, the event will be triggered. If false on the random tick, the event will not be triggered.",
                                },
                                {
                                    "name": "event",
                                    "type": "String",
                                    "defaultValue": "set_block_state",
                                    "description": "The event that will be triggered.",
                                },
                                {
                                    "name": "target",
                                    "type": "String",
                                    "defaultValue": "self",
                                    "description": "The target of the event executed by the block.",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "minecraft:redstone_conductivity",
                    "type": "Identifier String",
                    "defaultValue": "",
                    "description": "The basic redstone properties of a block; if the component is not provided the default values are used. Requires the Upcoming Creator Features experiment. If you use this component, make sure to use 1.21.30 format version for your block JSON.",
                    "children": [
                        {
                            "name": "allows_wire_to_step_down",
                            "type": "Boolean",
                            "defaultValue": "true",
                            "description": "Specifies if redstone wire can stair-step downward on the block.",
                        },
                        {
                            "name": "redstone_conductor",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "Specifies if the block can be powered by redstone.",
                        },
                    ],
                },
                {
                    "name": "minecraft:selection_box",
                    "type": "Boolean / JSON Object",
                    "defaultValue": "",
                    "description": "Defines the area of the block that is selected by the player's cursor. If set to true, default values are used. If set to false, this block is not selectable by the player's cursor. If this component is omitted, default values are used.",
                    "children": [
                        {
                            "name": "origin",
                            "type": "Vector [a, b, c]",
                            "defaultValue": "[-8.0, 0.0, -8.0]",
                            "description": "Minimal position of the bounds of the selection box. \"origin\" is specified as [x, y, z] and must be in the range (-8, 0, -8) to (8, 16, 8), inclusive.",
                        },
                        {
                            "name": "size",
                            "type": "Vector [a, b, c]",
                            "defaultValue": "[16.0, 16.0, 16.0]",
                            "description": "Size of each side of the selection box. Size is specified as [x, y, z]. \"origin\" + \"size\" must be in the range (-8, 0, -8) to (8, 16, 8), inclusive.",
                        },
                    ],
                },
                {
                    "name": "minecraft:transformation",
                    "type": "JSON Object",
                    "defaultValue": "",
                },
                {
                    "name": "minecraft:unit_cube",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Specifies that a unit cube is to be used with tessellation.",
                },
            ],
        },
        "block_event_responses": {
            "description": "",
            "children": [
                {
                    "name": "add_mob_effect",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Apply mob effect to target.",
                    "children": [
                        {
                            "name": "amplifier",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "The amplifier for the mob effect.",
                        },
                        {
                            "name": "duration",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The duration of the mob effect.",
                        },
                        {
                            "name": "effect",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The mob effect to apply.",
                        },
                        {
                            "name": "target",
                            "type": "Minecraft Filter",
                            "defaultValue": "self",
                            "description": "The target context to execute against.",
                        },
                    ],
                },
                {
                    "name": "damage",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Deals damage to the target.",
                    "children": [
                        {
                            "name": "amount",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "The amount of damage to deal.",
                        },
                        {
                            "name": "mob_amount",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "The amount of damage to deal if held by a mob.",
                        },
                        {
                            "name": "target",
                            "type": "Minecraft Filter",
                            "defaultValue": "self",
                            "description": "The target context to execute against.",
                        },
                        {
                            "name": "type",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The type of damage to deal.",
                        },
                    ],
                },
                {
                    "name": "decrement_stack",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Decrement item stack.",
                },
                {
                    "name": "die",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Kill target. If target is self and this is run from a block then destroy the block.",
                    "children": [
                        {
                            "name": "target",
                            "type": "Minecraft Filter",
                            "defaultValue": "self",
                            "description": "The target context to execute against.",
                        },
                    ],
                },
                {
                    "name": "play_effect",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Spawns a particle effect relative to target position.",
                    "children": [
                        {
                            "name": "data",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "Particle data value.",
                        },
                        {
                            "name": "effect",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The name of the particle effect to create.",
                        },
                        {
                            "name": "target",
                            "type": "Minecraft Filter",
                            "defaultValue": "self",
                            "description": "The target context to execute against.",
                        },
                    ],
                },
                {
                    "name": "play_sound",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Play a sound relative to target position.",
                    "children": [
                        {
                            "name": "sound",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The name of the sound to play.",
                        },
                        {
                            "name": "target",
                            "type": "Minecraft Filter",
                            "defaultValue": "self",
                            "description": "The target context to execute against.",
                        },
                    ],
                },
                {
                    "name": "remove_mob_effect",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Removes mob effect from target.",
                    "children": [
                        {
                            "name": "effect",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The mob effect to remove. Use 'all' to remove all mob effects from target.",
                        },
                        {
                            "name": "target",
                            "type": "Minecraft Filter",
                            "defaultValue": "self",
                            "description": "The target context to execute against.",
                        },
                    ],
                },
                {
                    "name": "run_command",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Triggers a slash command or a list of slash commands.",
                    "children": [
                        {
                            "name": "command",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Slash command to run.",
                        },
                        {
                            "name": "command array",
                            "type": "Array",
                            "defaultValue": "",
                            "description": "List of slash commands to run.",
                        },
                        {
                            "name": "target",
                            "type": "Minecraft Filter",
                            "defaultValue": "self",
                            "description": "The target context to execute against.",
                        },
                    ],
                },
                {
                    "name": "set_block",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Sets this block to another block type.",
                    "children": [
                        {
                            "name": "block_type",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The type of block to set.",
                        },
                    ],
                },
                {
                    "name": "set_block_at_pos",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Sets a block relative to this block to another block type.",
                    "children": [
                        {
                            "name": "block_offset",
                            "type": "Vector [a, b, c]",
                            "defaultValue": "[0.0, 0.0, 0.0]",
                            "description": "The offset from the block's center.",
                        },
                        {
                            "name": "block_type",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The type of block to set.",
                        },
                    ],
                },
                {
                    "name": "set_block_state",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Sets a block state on this block.",
                    "children": [
                        {
                            "name": "state",
                            "type": "Molang",
                            "defaultValue": "",
                            "description": "Block state to set on the block.",
                        },
                    ],
                },
                {
                    "name": "spawn_loot",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Spawn loot from block.",
                    "children": [
                        {
                            "name": "table",
                            "type": "String",
                            "defaultValue": "",
                            "description": "File path, relative to the Behavior Pack's path, to the loot table file.",
                        },
                    ],
                },
                {
                    "name": "swing",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Event causes the actor to swing.",
                },
                {
                    "name": "teleport",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Teleport target randomly around destination point.",
                    "children": [
                        {
                            "name": "avoid_water",
                            "type": "Boolean",
                            "defaultValue": "true",
                            "description": "Determines if the teleport avoids putting the target in water.",
                        },
                        {
                            "name": "destination",
                            "type": "Vector [a, b, c]",
                            "defaultValue": "[0.0, 0.0, 0.0]",
                            "description": "Origin destination of the teleport.",
                        },
                        {
                            "name": "land_on_block",
                            "type": "Boolean",
                            "defaultValue": "true",
                            "description": "Determines if the teleport places the target on a block.",
                        },
                        {
                            "name": "max_range",
                            "type": "Vector [a, b, c]",
                            "defaultValue": "[8.0, 8.0, 8.0]",
                            "description": "Max range the target can teleport relative to the origin destination.",
                        },
                        {
                            "name": "target",
                            "type": "Minecraft Filter",
                            "defaultValue": "self",
                            "description": "The target context to execute against.",
                        },
                    ],
                },
                {
                    "name": "transform_item",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Transforms item into another item.",
                    "children": [
                        {
                            "name": "transform",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Name of the item it should transform into",
                        },
                    ],
                },
            ],
        },
        "block_trigger_components": {
            "description": "",
            "children": [
                {
                    "name": "minecraft:on_fall_on",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Describes event for this block.",
                    "children": [
                        {
                            "name": "condition",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The condition of event to be executed on the block.",
                        },
                        {
                            "name": "event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The event executed on the block.",
                        },
                        {
                            "name": "min_fall_distance",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The minimum distance in blocks that an actor needs to fall to trigger this event.",
                        },
                        {
                            "name": "target",
                            "type": "String",
                            "defaultValue": "self",
                            "description": "The target of event executed on the block.",
                        },
                    ],
                },
                {
                    "name": "minecraft:on_interact",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Describes event for this block.",
                    "children": [
                        {
                            "name": "condition",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The condition of event to be executed on the block.",
                        },
                        {
                            "name": "event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The event executed on the block.",
                        },
                        {
                            "name": "target",
                            "type": "String",
                            "defaultValue": "self",
                            "description": "The target of event executed on the block.",
                        },
                    ],
                },
                {
                    "name": "minecraft:on_placed",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Describes event for this block.",
                    "children": [
                        {
                            "name": "condition",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The condition of event to be executed on the block.",
                        },
                        {
                            "name": "event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The event executed on the block.",
                        },
                        {
                            "name": "target",
                            "type": "String",
                            "defaultValue": "self",
                            "description": "The target of event executed on the block.",
                        },
                    ],
                },
                {
                    "name": "minecraft:on_player_destroyed",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Describes event for this block.",
                    "children": [
                        {
                            "name": "condition",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The condition of event to be executed on the block.",
                        },
                        {
                            "name": "event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The event executed on the block.",
                        },
                        {
                            "name": "target",
                            "type": "String",
                            "defaultValue": "self",
                            "description": "The target of event executed on the block.",
                        },
                    ],
                },
                {
                    "name": "minecraft:on_player_placing",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Describes event for this block.",
                    "children": [
                        {
                            "name": "condition",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The condition of event to be executed on the block.",
                        },
                        {
                            "name": "event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The event executed on the block.",
                        },
                        {
                            "name": "target",
                            "type": "String",
                            "defaultValue": "self",
                            "description": "The target of event executed on the block.",
                        },
                    ],
                },
                {
                    "name": "minecraft:on_step_off",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Describes event for this block.",
                    "children": [
                        {
                            "name": "condition",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The condition of event to be executed on the block.",
                        },
                        {
                            "name": "event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The event executed on the block.",
                        },
                        {
                            "name": "target",
                            "type": "String",
                            "defaultValue": "self",
                            "description": "The target of event executed on the block.",
                        },
                    ],
                },
                {
                    "name": "minecraft:on_step_on",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Describes event for this block.",
                    "children": [
                        {
                            "name": "condition",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The condition of event to be executed on the block.",
                        },
                        {
                            "name": "event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The event executed on the block.",
                        },
                        {
                            "name": "target",
                            "type": "String",
                            "defaultValue": "self",
                            "description": "The target of event executed on the block.",
                        },
                    ],
                },
            ],
        },
    },
    "entitySpawnRuleConditionComponent": {
        "minecraft:biome_filter": "This component allows the players to specify which biomes the mob spawns in. Check below to see which Biome Tags exist, and what each biome is tagged as.",
        "minecraft:brightness_filter": "This component allows players to set the light level range that causes the mob to spawn.",
        "minecraft:density_limit": "This component allows players to determine the density cap limits for the specified mob type.",
        "minecraft:difficulty_filter": "This component allows players determine what mobs spawn when certain difficulty levels are set.",
        "minecraft:herd": "This component allows players to determine the herd size of animals.",
        "minecraft:spawns_on_surface": "This component allows the mob to spawn on the ground. Adding the component causes it to be true, removing it causes the mob to stop spawning on the surface.",
        "minecraft:spawns_underwater": "This component allows the mob to spawn underwater. Adding the component causes it to be true, removing it causes the mob to stop spawning underwater.",
        "minecraft:weight": "This component allows players to give a priority to how often that mob should spawn. Mobs with lower weight values have a higher chance to spawn than mobs with higher weight values.",
    },
    "entityFilter": {
        "actor_health": "Tests the health of the subject.",
        "all_slots_empty": "Returns true when the designated equipment location for the subject entity is completely empty.",
        "any_slot_empty": "Returns true when the designated equipment location for the subject entity has any empty slot.",
        "bool_property": "Returns true when the bool actor property matches the value provided.",
        "clock_time": "Compares the current time with a float value in the range (0.0, 1.0).",
        "distance_to_nearest_player": "Compares the distance to the nearest Player with a float value.",
        "enum_property": "Returns true when the enum actor property matches the value provided.",
        "float_property": "Returns true when the float actor property matches the value provided.",
        "has_ability": "Returns true when the subject entity has the named ability.",
        "has_biome_tag": "Tests whether the biome the subject is in has the specified tag.",
        "has_component": "Returns true when the subject entity contains the named component.",
        "has_container_open": "Returns true when the subject Player entity has opened a container.",
        "has_damage": "Returns true when the subject entity receives the named damage type.",
        "has_damaged_equipment": "Tests for the presence of a damaged named item in the designated slot of the subject entity.",
        "has_equipment": "Tests for the presence of a named item in the designated slot of the subject entity.",
        "has_mob_effect": "Tests whether the Subject has the specified mob effect.",
        "has_nametag": "Tests if the subject has been given a custom name.",
        "has_property": "Tests for the presence of a property of the subject entity.",
        "has_ranged_weapon": "Returns true when the subject entity is holding a ranged weapon like a bow or crossbow.",
        "has_silk_touch": "Tests if the subject is holding an item with silk touch.",
        "has_tag": "Returns true if the subject entity has the tag provided.",
        "has_target": "Returns true if the subject entity has a valid target.",
        "has_trade_supply": "Tests whether the target has any trade supply left. Will return false if the target cannot be traded with.",
        "hourly_clock_time": "Compares the current 24 hour time with an int value in the range[0, 24000]",
        "in_block": "Returns true when the subject entity is inside a specified Block type.",
        "in_caravan": "Returns true if the subject entity is in a caravan.",
        "in_clouds": "Returns true when the subject entity is in the clouds.",
        "in_contact_with_water": "Returns true when the subject entity in contact with any water: water, rain, splash water bottle.",
        "in_lava": "Returns true when the subject entity is in lava.",
        "in_nether": "Returns true when the subject entity is in Nether.",
        "in_overworld": "Returns true when the subject entity is in Overworld.",
        "in_water": "Returns true when the subject entity is in water.",
        "in_water_or_rain": "Returns true when the subject entity is in water or rain.",
        "inactivity_timer": "Tests if the specified duration in seconds of inactivity for despawning has been reached.",
        "int_property": "Returns true when the int actor property matches the value provided.",
        "is_altitude": "Tests the current altitude against a provided value. 0= bedrock elevation.",
        "is_avoiding_mobs": "Returns true if the subject entity is fleeing from other mobs.",
        "is_baby": "Returns true when the subject entity is a baby.",
        "is_biome": "Tests whether the Subject is currently in the named biome.",
        "is_block": "Returns true when the block has the given name.",
        "is_brightness": "Tests the current brightness against a provided value in the range (0.0f, 1.0f).",
        "is_climbing": "Returns true if the subject entity is climbing.",
        "is_color": "Returns true if the subject entity is the named color.",
        "is_daytime": "Returns true during the daylight hours.",
        "is_difficulty": "Tests the current difficulty level of the game.",
        "is_family": "Returns true when the subject entity is a member of the named family.",
        "is_game_rule": "Tests whether a named game rule is active.",
        "is_humid": "Tests whether the Subject is in an area with humidity",
        "is_immobile": "Returns true if the subject entity is immobile. An entity is immobile if it lacks AI goals, has just changed dimensions or if it is a mob and has no health.",
        "is_in_village": "Tests whether the Subject is inside the bounds of a village.",
        "is_leashed": "Returns true if the subject entity is leashed.",
        "is_leashed_to": "Returns true if the subject entity leashed to the calling entity.",
        "is_mark_variant": "Returns true if the subject entity is the mark variant number provided.",
        "is_missing_health": "Tests if the subject is not at full health.",
        "is_moving": "Returns true if the subject entity is moving.",
        "is_navigating": "Tests if the subject is currently pathfinding. Requires a \"minecraft:navigation\" component.",
        "is_owner": "Returns true if the subject entity is the owner of the calling entity.",
        "is_panicking": "Tests if the subject is panicking.",
        "is_persistent": "Tests if the subject's persistence matches the bool value passed in.",
        "is_raider": "Tests if the subject is a raider.",
        "is_riding": "Returns true if the subject entity is riding on another entity.",
        "is_sitting": "Tests if the subject is sitting.",
        "is_skin_id": "Returns true if the subject entity is the skin id number provided.",
        "is_sleeping": "Tests whether the Subject is sleeping.",
        "is_sneak_held": "Returns true if the subject entity has the sneak input held.",
        "is_sneaking": "Returns true if the subject entity is sneaking.",
        "is_snow_covered": "Tests whether the Subject is in an area with snow cover",
        "is_sprinting": "Tests if the subject is sprinting.",
        "is_target": "Returns true if the subject entity is the target of the calling entity.",
        "is_temperature_type": "Tests whether the current temperature is a given type.",
        "is_temperature_value": "Tests the current temperature against a provided value in the range (0.0, 1.0) where 0.0f is the coldest temp and 1.0f is the hottest.",
        "is_underground": "Returns true when the subject entity is underground. An entity is considered underground if there are non-solid blocks above it.",
        "is_underwater": "Returns true when the subject entity is under water. An entity is considered underwater if it is completely submerged in water blocks.",
        "is_variant": "Returns true if the subject entity is the variant number provided.",
        "is_visible": "Returns true if the subject entity is visible.",
        "is_waterlogged": "Tests if the subject block is submerged in water.",
        "is_weather": "DEPRECATED",
        "light_level": "Tests is the mob is outside of the specified light level range (0, 16).",
        "moon_intensity": "Compares the current moon intensity with a float value in the range (0.0, 1.0)",
        "moon_phase": "Compares the current moon phase with an integer value in the range (0, 7).",
        "on_fire": "Tests if the subject is on fire.",
        "on_ground": "Returns true when the subject entity is on ground.",
        "on_hot_block": "Tests if the subject is on a hot block.",
        "on_ladder": "Returns true when the subject entity is on a ladder.",
        "owner_distance": "Tests the distance between the subject and its owner. Returns false if there is no owner.",
        "random_chance": "Returns true if the random chance rolls 0 out of a specified max range.",
        "rider_count": "Returns the number of riders on this entity.",
        "surface_mob": "Tests if the subject is a surface mob.",
        "taking_fire_damage": "Tests if the subject is taking fire damage. Requires the damage_sensor component",
        "target_distance": "Tests the distance between the calling entity and its target.",
        "trusts": "Returns true if the subject is trusted by entity.",
        "was_last_hurt_by": "Tests if the subject is the last player who attacked the entity in the last 400 seconds, or the last mob to do so in the last 60 seconds.",
        "weather": "Tests the current weather in the dimension against a provided weather value.",
        "weather_at_position": "Tests the current weather, at the actor's position, against a provided weather value.",
    },
    "entityBehavior": {
        "minecraft:behavior.admire_item": {
            "description": "Enables the mob to admire items that have been configured as admirable. Must be used in combination with the admire_item component",
            "children": [
                {
                    "name": "admire_item_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The sound event to play when admiring the item",
                },
                {
                    "name": "sound_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "0",
                    "description": "The range of time in seconds to randomly wait before playing the sound again.",
                },
            ],
        },
        "minecraft:behavior.avoid_block": {
            "description": "Allows this entity to avoid certain blocks.",
            "children": [
                {
                    "name": "avoid_block_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The sound event to play when the mob is avoiding a block.",
                },
                {
                    "name": "on_escape",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Escape trigger.",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Maximum distance to look for a block in y.",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Maximum distance to look for a block in xz.",
                },
                {
                    "name": "sound_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "[3.0, 8.0]",
                    "description": "The range of time in seconds to randomly wait before playing the sound again.",
                },
                {
                    "name": "sprint_speed_modifier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Modifier for sprint speed. 1.0 means keep the regular speed, while higher numbers make the sprint speed faster.",
                },
                {
                    "name": "target_blocks",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of block types this mob avoids.",
                },
                {
                    "name": "target_selection_method",
                    "type": "String",
                    "defaultValue": "nearest",
                    "description": "Block search method.",
                },
                {
                    "name": "tick_interval",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Should start tick interval.",
                },
                {
                    "name": "walk_speed_modifier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Modifier for walking speed. 1.0 means keep the regular speed, while higher numbers make the walking speed faster.",
                },
            ],
        },
        "minecraft:behavior.avoid_mob_type": {
            "description": "Allows the entity to run away from other entities that meet the criteria specified.",
            "children": [
                {
                    "name": "avoid_mob_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The sound event to play when the mob is avoiding another mob.",
                },
                {
                    "name": "avoid_target_xz",
                    "type": "Integer",
                    "defaultValue": "16",
                    "description": "The next target position the entity chooses to avoid another entity will be chosen within this XZ Distance.",
                },
                {
                    "name": "avoid_target_y",
                    "type": "Integer",
                    "defaultValue": "7",
                    "description": "The next target position the entity chooses to avoid another entity will be chosen within this Y Distance.",
                },
                {
                    "name": "entity_types",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The list of conditions another entity must meet to be a valid target to avoid.",
                },
                {
                    "name": "ignore_visibilty",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether or not to ignore direct line of sight while this entity is running away from other specified entities.",
                },
                {
                    "name": "max_dist",
                    "type": "Decimal",
                    "defaultValue": "3.0",
                    "description": "Maximum distance to look for an avoid target for the entity.",
                },
                {
                    "name": "max_flee",
                    "type": "Decimal",
                    "defaultValue": "10.0",
                    "description": "How many blocks away from its avoid target the entity must be for it to stop fleeing from the avoid target.",
                },
                {
                    "name": "on_escape_event",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event that is triggered when escaping from a mob.",
                },
                {
                    "name": "probability_per_strength",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Percent chance this entity will stop avoiding another entity based on that entity's strength, where 1.0 = 100%.",
                },
                {
                    "name": "remove_target",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Determine if we should remove target when fleeing or not.",
                },
                {
                    "name": "sound_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "[3.0, 8.0]",
                    "description": "The range of time in seconds to randomly wait before playing the sound again.",
                },
                {
                    "name": "sprint_distance",
                    "type": "Decimal",
                    "defaultValue": "7.0",
                    "description": "How many blocks within range of its avoid target the entity must be for it to begin sprinting away from the avoid target.",
                },
                {
                    "name": "sprint_speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Multiplier for sprint speed. 1.0 means keep the regular speed, while higher numbers make the sprint speed faster.",
                },
                {
                    "name": "walk_speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Multiplier for walking speed. 1.0 means keep the regular speed, while higher numbers make the walking speed faster.",
                },
            ],
        },
        "minecraft:behavior.beg": {
            "description": "Allows this mob to look at and follow the player that holds food they like.",
            "children": [
                {
                    "name": "items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of items that this mob likes",
                },
                {
                    "name": "look_distance",
                    "type": "Decimal",
                    "defaultValue": "8.0",
                    "description": "Distance in blocks the mob will beg from",
                },
                {
                    "name": "look_time",
                    "type": "Range [a, b]",
                    "defaultValue": "[2, 4]",
                    "description": "The range of time in seconds this mob will stare at the player holding a food they like, begging for it",
                },
            ],
        },
        "minecraft:behavior.breed": {
            "description": "Allows this mob to breed with other mobs.",
            "children": [
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.celebrate": {
            "description": "Allows this entity to celebrate surviving a raid by making celebration sounds and jumping.",
            "children": [
                {
                    "name": "celebration_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The sound event to trigger during the celebration.",
                },
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "30.000000",
                    "description": "The duration in seconds that the celebration lasts for.",
                },
                {
                    "name": "jump_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "[1, 3.5]",
                    "description": "Minimum and maximum time between jumping (positive, in seconds).",
                },
                {
                    "name": "on_celebration_end_event",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "The event to trigger when the goal's duration expires.",
                },
                {
                    "name": "sound_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "[2, 7]",
                    "description": "Minimum and maximum time between sound events (positive, in seconds).",
                },
            ],
        },
        "minecraft:behavior.celebrate_survive": {
            "description": "Allows this entity to celebrate surviving a raid by shooting fireworks.",
            "children": [
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "30.000000",
                    "description": "The duration in seconds that the celebration lasts for.",
                },
                {
                    "name": "fireworks_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "[10, 20]",
                    "description": "Minimum and maximum time between firework (positive, in seconds).",
                },
                {
                    "name": "on_celebration_end_event",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "The event to trigger when the goal's duration expires.",
                },
            ],
        },
        "minecraft:behavior.charge_attack": {
            "description": "Allows this entity to damage a target by using a running attack.",
            "children": [
                {
                    "name": "max_distance",
                    "type": "Decimal",
                    "defaultValue": "3",
                    "description": "A charge attack cannot start if the entity is farther than this distance to the target.",
                },
                {
                    "name": "min_distance",
                    "type": "Decimal",
                    "defaultValue": "2",
                    "description": "A charge attack cannot start if the entity is closer than this distance to the target.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Modifies the entity's speed when charging toward the target.",
                },
                {
                    "name": "success_rate",
                    "type": "Decimal",
                    "defaultValue": "0.1428",
                    "description": "Percent chance this entity will start a charge attack, if not already attacking (1.0 = 100%)",
                },
            ],
        },
        "minecraft:behavior.charge_held_item": {
            "description": "Allows an entity to charge and use their held item.",
            "children": [
                {
                    "name": "items",
                    "type": "Array",
                    "defaultValue": "NA",
                    "description": "The list of items that can be used to charge the held item. This list is required and must have at least one item in it.",
                },
            ],
        },
        "minecraft:behavior.circle_around_anchor": {
            "description": "Causes an entity to circle around an anchor point placed near a point or target.",
            "children": [
                {
                    "name": "angle_change",
                    "type": "Decimal",
                    "defaultValue": "15.0",
                    "description": "Number of degrees to change this entity's facing by, when the entity selects its next anchor point.",
                },
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Maximum distance from the anchor-point in which this entity considers itself to have reached the anchor point. This is to prevent the entity from bouncing back and forth trying to reach a specific spot.",
                },
                {
                    "name": "height_above_target_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[ 0.0, 0.0 ]",
                    "description": "The number of blocks above the target that the next anchor point can be set. This value is used only when the entity is tracking a target.",
                },
                {
                    "name": "height_adjustment_chance",
                    "type": "Decimal",
                    "defaultValue": "0.002857",
                    "description": "Percent chance to determine how often to increase or decrease the current height around the anchor point. 1 = 100%. \"height_change_chance\" is deprecated and has been replaced with \"height_adjustment_chance\".",
                },
                {
                    "name": "height_offset_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[ 0.0, 0.0 ]",
                    "description": "Vertical distance from the anchor point this entity must stay within, upon a successful height adjustment.",
                },
                {
                    "name": "radius_adjustment_chance",
                    "type": "Decimal",
                    "defaultValue": "0.004",
                    "description": "Percent chance to determine how often to increase the size of the current movement radius around the anchor point. 1 = 100%. \"radius_change_chance\" is deprecated and has been replaced with \"radius_adjustment_chance\".",
                },
                {
                    "name": "radius_change",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The number of blocks to increase the current movement radius by, upon successful \"radius_adjustment_chance\". If the current radius increases over the range maximum, the current radius will be set back to the range minimum and the entity will change between clockwise and counter-clockwise movement..",
                },
                {
                    "name": "radius_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[ 5.0, 15.0 ]",
                    "description": "Horizontal distance from the anchor point this entity must stay within upon a successful radius adjustment.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Multiplies the speed at which this entity travels to its next desired position.",
                },
            ],
        },
        "minecraft:behavior.controlled_by_player": {
            "description": "Allows the entity to be controlled by the player using an item in the item_controllable property (required). Also requires the minecraft:movement property, and the minecraft:rideable property. On every tick, the entity will attempt to rotate towards where the player is facing with the control item whilst simultaneously moving forward.",
            "children": [
                {
                    "name": "fractional_rotation",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "The entity will attempt to rotate to face where the player is facing each tick. The entity will target this percentage of their difference in their current facing angles each tick (from 0.0 to 1.0 where 1.0 = 100%). This is limited by FractionalRotationLimit. A value of 0.0 will result in the entity no longer turning to where the player is facing.",
                },
                {
                    "name": "fractional_rotation_limit",
                    "type": "Decimal",
                    "defaultValue": "5.0",
                    "description": "Limits the total degrees the entity can rotate to face where the player is facing on each tick.",
                },
                {
                    "name": "mount_speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Speed multiplier of mount when controlled by player.",
                },
            ],
        },
        "minecraft:behavior.croak": {
            "description": "Allows the entity to croak at a random time interval with configurable conditions.",
            "children": [
                {
                    "name": "duration",
                    "type": "Range [a, b]",
                    "defaultValue": "[4.5, 4.5]",
                    "description": "Random range in seconds after which the croaking stops. Can also be a constant.",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Conditions for the behavior to start and keep running. The interval between runs only starts after passing the filters.",
                },
                {
                    "name": "interval",
                    "type": "Range [a, b]",
                    "defaultValue": "[10, 20]",
                    "description": "Random range in seconds between runs of this behavior. Can also be a constant.",
                },
            ],
        },
        "minecraft:behavior.defend_trusted_target": {
            "description": "Allows the mob to target another mob that hurts an entity it trusts.",
            "children": [
                {
                    "name": "aggro_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sound to occasionally play while defending.",
                },
                {
                    "name": "attack_interval",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Time in seconds between attacks",
                },
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of entity types that this mob considers valid targets",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this entry in the list valid",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "Maximum distance this mob can be away to be a valid choice",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob has to be visible to be a valid choice",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Decimal",
                            "defaultValue": "3.0",
                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                        {
                            "name": "sprint_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                        },
                        {
                            "name": "walk_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                        },
                    ],
                },
                {
                    "name": "must_see",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, only entities in this mob's viewing range can be selected as targets",
                },
                {
                    "name": "must_see_forget_duration",
                    "type": "Decimal",
                    "defaultValue": "3.0",
                    "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                },
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Distance in blocks that the target can be within to launch an attack",
                },
            ],
        },
        "minecraft:behavior.defend_village_target": {
            "description": "Allows the entity to stay in a village and defend the village from aggressors. If a player is in bad standing with the village this goal will cause the entity to attack the player regardless of filter conditions.",
            "children": [
                {
                    "name": "attack_chance",
                    "type": "Decimal",
                    "defaultValue": "0.05",
                    "description": "The percentage chance that the entity has to attack aggressors of its village, where 1.0 = 100%.",
                },
            ],
        },
        "minecraft:behavior.delayed_attack": {
            "description": "Allows an entity to attack, while also delaying the damage-dealt until a specific time in the attack animation.",
            "children": [
                {
                    "name": "attack_duration",
                    "type": "Decimal",
                    "defaultValue": "0.75",
                    "description": "The entity's attack animation will play out over this duration (in seconds). Also controls attack cooldown.",
                },
                {
                    "name": "attack_once",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the entity to use this attack behavior, only once EVER.",
                },
                {
                    "name": "attack_types",
                    "type": "String",
                    "defaultValue": "N/A",
                    "description": "Defines the entity types this entity will attack.",
                },
                {
                    "name": "can_spread_on_fire",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If the entity is on fire, this allows the entity's target to catch on fire after being hit.",
                },
                {
                    "name": "hit_delay_pct",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "The percentage into the attack animation to apply the damage of the attack (1.0 = 100%).",
                },
                {
                    "name": "inner_boundary_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.25",
                    "description": "Time (in seconds) to add to attack path recalculation when the target is beyond the \"path_inner_boundary\".",
                },
                {
                    "name": "max_dist",
                    "type": "Decimal",
                    "defaultValue": "N/A",
                    "description": "Unused. No effect on \"minecraft:behavior.melee_attack\".",
                },
                {
                    "name": "max_path_time",
                    "type": "Decimal",
                    "defaultValue": "0.55",
                    "description": "Maximum base time (in seconds) to recalculate new attack path to target (before increases applied).",
                },
                {
                    "name": "melee_fov",
                    "type": "Decimal",
                    "defaultValue": "90",
                    "description": "Field of view (in degrees) when using the sensing component to detect an attack target.",
                },
                {
                    "name": "min_path_time",
                    "type": "Decimal",
                    "defaultValue": "0.2",
                    "description": "Minimum base time (in seconds) to recalculate new attack path to target (before increases applied).",
                },
                {
                    "name": "on_attack",
                    "type": "Trigger",
                    "defaultValue": "N/A",
                    "description": "Defines the event to trigger when this entity successfully attacks.",
                },
                {
                    "name": "outer_boundary_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Time (in seconds) to add to attack path recalculation when the target is beyond the \"path_outer_boundary\".",
                },
                {
                    "name": "path_fail_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.75",
                    "description": "Time (in seconds) to add to attack path recalculation when this entity cannot move along the current path.",
                },
                {
                    "name": "path_inner_boundary",
                    "type": "Decimal",
                    "defaultValue": "16",
                    "description": "Distance at which to increase attack path recalculation by \"inner_boundary_tick_increase\".",
                },
                {
                    "name": "path_outer_boundary",
                    "type": "Decimal",
                    "defaultValue": "32",
                    "description": "Distance at which to increase attack path recalculation by \"outer_boundary_tick_increase\".",
                },
                {
                    "name": "random_stop_interval",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "This entity will have a 1 in N chance to stop it's current attack, where N = \"random_stop_interval\".",
                },
                {
                    "name": "reach_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.5",
                    "description": "Used with the base size of the entity to determine minimum target-distance before trying to deal attack damage.",
                },
                {
                    "name": "require_complete_path",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Toggles (on/off) the need to have a full path from the entity to the target when using this melee attack behavior.",
                },
                {
                    "name": "set_persistent",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the actor to be set to persist upon targeting a player",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "This multiplier modifies the attacking entity's speed when moving toward the target.",
                },
                {
                    "name": "target_dist",
                    "type": "Decimal",
                    "defaultValue": "N/a",
                    "description": "Unused. No effect on \"minecraft:behavior.melee_attack\".",
                },
                {
                    "name": "track_target",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Allows the entity to track the attack target, even if the entity has no sensing.",
                },
                {
                    "name": "x_max_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.",
                },
                {
                    "name": "y_max_head_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate its head while trying to look at the target.",
                },
            ],
        },
        "minecraft:behavior.dig": {
            "description": "Allows this entity to dig into the ground before despawning.",
            "children": [
                {
                    "name": "allow_dig_when_named",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this behavior can run when this entity is named. Otherwise not.",
                },
                {
                    "name": "digs_in_daylight",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Indicates that the actor should start digging when it sees daylight",
                },
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Goal duration in seconds",
                },
                {
                    "name": "idle_time",
                    "type": "Decimal",
                    "defaultValue": "",
                    "description": "The minimum idle time in seconds between the last detected disturbance to the start of digging.",
                },
                {
                    "name": "on_start",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when the goal starts.",
                },
                {
                    "name": "suspicion_is_disturbance",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, finding new suspicious locations count as disturbances that may delay the start of this goal.",
                },
                {
                    "name": "vibration_is_disturbance",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, vibrations count as disturbances that may delay the start of this goal.",
                },
            ],
        },
        "minecraft:behavior.dragonchargeplayer": {
            "description": "Allows this entity to attack a player by charging at them. The player is chosen by the \"minecraft:behavior.dragonscanning\". Can only be used by the Ender Dragon.",
            "children": [
                {
                    "name": "active_speed",
                    "type": "Decimal",
                    "defaultValue": "3",
                    "description": "The speed this entity moves when this behavior has started or while it's active.",
                },
                {
                    "name": "continue_charge_threshold_time",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "If the dragon is outside the \"target_zone\" for longer than \"continue_charge_threshold_time\" seconds, the charge is canceled.",
                },
                {
                    "name": "flight_speed",
                    "type": "Decimal",
                    "defaultValue": "0.6",
                    "description": "The speed this entity moves while this behavior is not active.",
                },
                {
                    "name": "target_zone",
                    "type": "Range [a, b]",
                    "defaultValue": "[10, 150]",
                    "description": "Minimum and maximum distance, from the target, this entity can use this behavior.",
                },
                {
                    "name": "turn_speed",
                    "type": "Decimal",
                    "defaultValue": "0.7",
                    "description": "The speed at which this entity turns while using this behavior.",
                },
            ],
        },
        "minecraft:behavior.dragonflaming": {
            "description": "Allows this entity to use a flame-breath attack. Can only be used by the Ender Dragon.",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "10",
                    "description": "Time (in seconds), after roar, to breath flame.",
                },
                {
                    "name": "flame_time",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Time (in seconds), after roar, to breath flame.",
                },
                {
                    "name": "ground_flame_count",
                    "type": "Integer",
                    "defaultValue": "4",
                    "description": "Number of ground flame-breath attacks to use before flight-takeoff.",
                },
                {
                    "name": "roar_time",
                    "type": "Decimal",
                    "defaultValue": "2",
                    "description": "Time (in seconds) to roar, before breathing flame.",
                },
            ],
        },
        "minecraft:behavior.dragonstrafeplayer": {
            "description": "Allows this entity to fly around looking for a player to shoot fireballs at. Can only be used by the Ender Dragon.",
            "children": [
                {
                    "name": "active_speed",
                    "type": "Decimal",
                    "defaultValue": "0.6",
                    "description": "The speed this entity moves when this behavior has started or while it's active.",
                },
                {
                    "name": "fireball_range",
                    "type": "Decimal",
                    "defaultValue": "64",
                    "description": "Maximum distance of this entity's fireball attack while strafing.",
                },
                {
                    "name": "flight_speed",
                    "type": "Decimal",
                    "defaultValue": "0.6",
                    "description": "The speed this entity moves while this behavior is not active.",
                },
                {
                    "name": "switch_direction_probability",
                    "type": "Decimal",
                    "defaultValue": "0.125",
                    "description": "Percent chance to to switch this entity's strafe direction between clockwise and counterclockwise. Switch direction chance occurs each time a new target is chosen (1.0 = 100%).",
                },
                {
                    "name": "target_in_range_and_in_view_time",
                    "type": "Decimal",
                    "defaultValue": "0.25",
                    "description": "Time (in seconds) the target must be in fireball range, and in view [ie, no solid terrain in-between the target and this entity], before a fireball can be shot.",
                },
                {
                    "name": "target_zone",
                    "type": "Range [a, b]",
                    "defaultValue": "[10, 150]",
                    "description": "Minimum and maximum distance, from the target, this entity can use this behavior.",
                },
                {
                    "name": "turn_speed",
                    "type": "Decimal",
                    "defaultValue": "0.7",
                    "description": "The speed at which this entity turns while using this behavior.",
                },
                {
                    "name": "view_angle",
                    "type": "Decimal",
                    "defaultValue": "10",
                    "description": "The target must be within \"view_angle\" degrees of the dragon's current rotation before a fireball can be shot.",
                },
            ],
        },
        "minecraft:behavior.drink_milk": {
            "description": "Allows the mob to drink milk based on specified environment conditions.",
            "children": [
                {
                    "name": "cooldown_seconds",
                    "type": "Decimal",
                    "defaultValue": "5.00",
                    "description": "Time (in seconds) that the goal is on cooldown before it can be used again.",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Conditions that need to be met for the behavior to start.",
                },
            ],
        },
        "minecraft:behavior.drink_potion": {
            "description": "Allows the mob to drink potions based on specified environment conditions.",
            "children": [
                {
                    "name": "potions",
                    "type": "List",
                    "defaultValue": "",
                    "description": "A list of potions that this entity can drink. Each potion entry has the following parameters:",
                    "children": [
                        {
                            "name": "chance",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "The percent chance (from 0.0 to 1.0) of this potion being selected when searching for a potion to use.",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "The filters to use when determining if this potion can be selected.",
                        },
                        {
                            "name": "id",
                            "type": "Integer",
                            "defaultValue": "-1",
                            "description": "The registry ID of the potion to use",
                        },
                    ],
                },
                {
                    "name": "speed_modifier",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "The movement speed modifier to apply to the entity while it is drinking a potion. A value of 0 represents no change in speed.",
                },
            ],
        },
        "minecraft:behavior.drop_item_for": {
            "description": "Allows the entity to move toward a target, and drop an item near the target. This goal requires a \"minecraft:navigation\" to execute.",
            "children": [
                {
                    "name": "cooldown",
                    "type": "Decimal",
                    "defaultValue": "0.2",
                    "description": "Total time that the goal is on cooldown before it can be used again.",
                },
                {
                    "name": "drop_item_chance",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The percent chance the entity will drop an item when using this goal.",
                },
                {
                    "name": "entity_types",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The list of conditions another entity must meet to be a valid target to drop an item for.",
                },
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.50",
                    "description": "Distance in blocks within the entity considers it has reached it's target position.",
                },
                {
                    "name": "loot_table",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The loot table that contains the possible loot the entity can drop with this goal.",
                },
                {
                    "name": "max_head_look_at_height",
                    "type": "Decimal",
                    "defaultValue": "10.0",
                    "description": "The maximum height the entities head will look at when dropping the item. The entity will always be looking at its target.",
                },
                {
                    "name": "minimum_teleport_distance",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "If the target position is farther away than this distance on any tick, the entity will teleport to the target position.",
                },
                {
                    "name": "offering_distance",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The preferred distance the entity tries to be from the target it is dropping an item for.",
                },
                {
                    "name": "on_drop_attempt",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "The event to trigger when the entity attempts to drop an item.",
                },
                {
                    "name": "search_count",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The number of blocks each tick that the entity will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick.",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The Height in blocks the entity will search within to find a valid target position.",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks the entity will search within to find a valid target position.",
                },
                {
                    "name": "seconds_before_pickup",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "The numbers of seconds that will pass before the dropped entity can be picked up from the ground.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.00",
                    "description": "Movement speed multiplier of the entity when using this Goal.",
                },
                {
                    "name": "target_range",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[1, 1, 1]",
                    "description": "The range in blocks within which the entity searches to find a target to drop an item for.",
                },
                {
                    "name": "teleport_offset",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[0, 1, 0]",
                    "description": "When the entity teleports, offset the teleport position by this many blocks in the X, Y, and Z coordinate.",
                },
                {
                    "name": "time_of_day_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[0, 1]",
                    "description": "The valid times of day that this goal can be used. For reference: noon is 0.0, sunset is 0.25, midnight is 0.5, and sunrise is 0.75, and back to noon for 1.0.",
                },
            ],
        },
        "minecraft:behavior.eat_block": {
            "description": "Allows the entity to consume a block, replace the eaten block with another block, and trigger an event as a result.",
            "children": [
                {
                    "name": "eat_and_replace_block_pairs",
                    "type": "List",
                    "defaultValue": "N/A",
                    "description": "A collection of pairs of blocks; the first (\"eat_block\")is the block the entity should eat, the second (\"replace_block\") is the block that should replace the eaten block.",
                },
                {
                    "name": "on_eat",
                    "type": "Trigger",
                    "defaultValue": "N/A",
                    "description": "The event to trigger when the block eating animation has completed.",
                },
                {
                    "name": "success_chance",
                    "type": "Molang",
                    "defaultValue": "0.02",
                    "description": "A molang expression defining the success chance the entity has to consume a block.",
                },
                {
                    "name": "time_until_eat",
                    "type": "Decimal",
                    "defaultValue": "1.8",
                    "description": "The amount of time (in seconds) it takes for the block to be eaten upon a successful eat attempt.",
                },
            ],
        },
        "minecraft:behavior.eat_carried_item": {
            "description": "If the mob is carrying a food item, the mob will eat it and the effects will be applied to the mob.",
            "children": [
                {
                    "name": "delay_before_eating",
                    "type": "Decimal",
                    "defaultValue": "",
                    "description": "Time in seconds the mob should wait before eating the item.",
                },
            ],
        },
        "minecraft:behavior.eat_mob": {
            "description": "Allows the entity to eat a specified Mob.",
            "children": [
                {
                    "name": "eat_animation_time",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "Sets the time in seconds the eat animation should play for.",
                },
                {
                    "name": "eat_mob_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sets the sound that should play when eating a mob.",
                },
                {
                    "name": "loot_table",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The loot table for loot to be dropped when eating a mob.",
                },
                {
                    "name": "pull_in_force",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "Sets the force which the mob-to-be-eaten is pulled towards the eating mob.",
                },
                {
                    "name": "reach_mob_distance",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "Sets the desired distance to be reached before eating the mob.",
                },
                {
                    "name": "run_speed",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "Sets the entity's speed when running toward the target.",
                },
            ],
        },
        "minecraft:behavior.emerge": {
            "description": "Allows this entity to emerge from the ground",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Integer",
                    "defaultValue": "0.50",
                    "description": "Time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "5.00",
                    "description": "Goal duration in seconds",
                },
                {
                    "name": "on_done",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Trigger to be executed when the goal execution is about to end",
                },
            ],
        },
        "minecraft:behavior.explore_outskirts": {
            "description": "Allows the entity to first travel to a random point on the outskirts of the village, and then explore random points within a small distance. This goal requires \"minecraft:dweller\" and \"minecraft:navigation\" to execute.",
            "children": [
                {
                    "name": "dist_from_boundary",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[5, 0, 5]",
                    "description": "The distance from the boundary the villager must be within in to explore the outskirts.",
                },
                {
                    "name": "explore_dist",
                    "type": "Decimal",
                    "defaultValue": "5.00",
                    "description": "Total distance in blocks the the entity will explore beyond the village bounds when choosing its travel point.",
                },
                {
                    "name": "max_travel_time",
                    "type": "Decimal",
                    "defaultValue": "60.0",
                    "description": "This is the maximum amount of time an entity will attempt to reach it's travel point on the outskirts of the village before the goal exits.",
                },
                {
                    "name": "max_wait_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "The wait time in seconds between choosing new explore points will be chosen on a random interval between this value and the minimum wait time. This value is also the total amount of time the entity will explore random points before the goal stops.",
                },
                {
                    "name": "min_dist_from_target",
                    "type": "Decimal",
                    "defaultValue": "2.2",
                    "description": "The entity must be within this distance for it to consider it has successfully reached its target.",
                },
                {
                    "name": "min_perimeter",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The minimum perimeter of the village required to run this goal.",
                },
                {
                    "name": "min_wait_time",
                    "type": "Decimal",
                    "defaultValue": "3.0",
                    "description": "The wait time in seconds between choosing new explore points will be chosen on a random interval between this value and the maximum wait time.",
                },
                {
                    "name": "next_xz",
                    "type": "Integer",
                    "defaultValue": "5",
                    "description": "A new explore point will randomly be chosen within this XZ distance of the current target position when navigation has finished and the wait timer has elapsed.",
                },
                {
                    "name": "next_y",
                    "type": "Integer",
                    "defaultValue": "3",
                    "description": "A new explore point will randomly be chosen within this Y distance of the current target position when navigation has finished and the wait timer has elapsed.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The multiplier for speed while using this goal. 1.0 maintains the speed.",
                },
                {
                    "name": "timer_ratio",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "Each new explore point will be chosen on a random interval between the minimum and the maximum wait time, divided by this value. This does not apply to the first explore point chosen when the goal runs.",
                },
            ],
        },
        "minecraft:behavior.fertilize_farm_block": {
            "description": "Allows the mob to search within an area for a growable crop block. If found, the mob will use any available fertilizer in their inventory on the crop. This goal will not execute if the mob does not have a fertilizer item in its inventory.",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "1.50",
                    "description": "Distance in blocks within the mob considers it has reached it's target position.",
                },
                {
                    "name": "max_fertilizer_usage",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The maximum number of times the mob will use fertilzer on the target block.",
                },
                {
                    "name": "search_cooldown_max_seconds",
                    "type": "Decimal",
                    "defaultValue": "8.0",
                    "description": "The maximum amount of time in seconds that the goal can take before searching again. The time is chosen between 0 and this number.",
                },
                {
                    "name": "search_count",
                    "type": "Integer",
                    "defaultValue": "9",
                    "description": "The number of randomly selected blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick.",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The Height in blocks the mob will search within to find a valid target position.",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The distance in blocks the mob will search within to find a valid target position.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.50",
                    "description": "Movement speed multiplier of the mob when using this Goal.",
                },
            ],
        },
        "minecraft:behavior.find_cover": {
            "description": "Allows the mob to seek shade.",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.find_mount": {
            "description": "Allows the mob to look around for another mob to ride atop it.",
            "children": [
                {
                    "name": "avoid_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob will not go into water blocks when going towards a mount",
                },
                {
                    "name": "mount_distance",
                    "type": "Decimal",
                    "defaultValue": "-1.0",
                    "description": "This is the distance the mob needs to be, in blocks, from the desired mount to mount it. If the value is below 0, the mob will use its default attack distance",
                },
                {
                    "name": "start_delay",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Time the mob will wait before starting to move towards the mount",
                },
                {
                    "name": "target_needed",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob will only look for a mount if it has a target",
                },
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Distance in blocks within which the mob will look for a mount",
                },
            ],
        },
        "minecraft:behavior.find_underwater_treasure": {
            "description": "Allows the mob to move towards the nearest underwater ruin or shipwreck.",
            "children": [
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The range that the mob will search for a treasure chest within a ruin or shipwreck to move towards.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "stop_distance",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "The distance the mob will move before stopping.",
                },
            ],
        },
        "minecraft:behavior.fire_at_target": {
            "description": "Allows an entity to attack by firing a shot with a delay. Anchor and offset parameters of this component overrides the anchor and offset from projectile component.",
            "children": [
                {
                    "name": "attack_cooldown",
                    "type": "Decimal",
                    "defaultValue": "0.500000",
                    "description": "The cooldown time in seconds before this goal can be used again.",
                },
                {
                    "name": "attack_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[2.000000, 16.000000]",
                    "description": "Target needs to be within this range for the attack to happen.",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Conditions that need to be met for the behavior to start.",
                },
                {
                    "name": "max_head_rotation_x",
                    "type": "Decimal",
                    "defaultValue": "30.000000",
                    "description": "Maximum head rotation (in degrees), on the X-axis, that this entity can apply while trying to look at the target.",
                },
                {
                    "name": "max_head_rotation_y",
                    "type": "Decimal",
                    "defaultValue": "30.000000",
                    "description": "Maximum head rotation (in degrees), on the Y-axis, that this entity can apply while trying to look at the target.",
                },
                {
                    "name": "owner_anchor",
                    "type": "Integer",
                    "defaultValue": "2",
                    "description": "Entity anchor for the projectile spawn location.",
                },
                {
                    "name": "owner_offset",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[0.000, 0.000, 0.000]",
                    "description": "Offset vector from the owner_anchor.",
                },
                {
                    "name": "post_shoot_delay",
                    "type": "Decimal",
                    "defaultValue": "0.200000",
                    "description": "Time in seconds between firing the projectile and ending the goal.",
                },
                {
                    "name": "pre_shoot_delay",
                    "type": "Decimal",
                    "defaultValue": "0.750000",
                    "description": "Time in seconds before firing the projectile.",
                },
                {
                    "name": "projectile_def",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Actor definition to use as projectile for the ranged attack. The actor must be a projectile.",
                },
                {
                    "name": "ranged_fov",
                    "type": "Decimal",
                    "defaultValue": "90.000000",
                    "description": "Field of view (in degrees) when using sensing to detect a target for attack.",
                },
                {
                    "name": "target_anchor",
                    "type": "Integer",
                    "defaultValue": "2",
                    "description": "Entity anchor for projectile target.",
                },
                {
                    "name": "target_offset",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[0.000, 0.000, 0.000]",
                    "description": "Offset vector from the target_anchor.",
                },
            ],
        },
        "minecraft:behavior.flee_sun": {
            "description": "Allows the mob to run away from direct sunlight and seek shade.",
            "children": [
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.float": {
            "description": "Allows the mob to stay afloat while swimming. Passengers will be kicked out the moment the mob's head goes underwater, which may not happen for tall mobs.",
            "children": [
                {
                    "name": "sink_with_passengers",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob will keep sinking as long as it has passengers.",
                },
            ],
        },
        "minecraft:behavior.float_wander": {
            "description": "Allows the mob to float around like the Ghast.",
            "children": [
                {
                    "name": "float_duration",
                    "type": "Range [a, b]",
                    "defaultValue": "[0.0, 0.0]",
                    "description": "Range of time in seconds the mob will float around before landing and choosing to do something else",
                },
                {
                    "name": "must_reach",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the point has to be reachable to be a valid target",
                },
                {
                    "name": "random_reselect",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob will randomly pick a new point while moving to the previously selected one",
                },
                {
                    "name": "xz_dist",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                },
                {
                    "name": "y_dist",
                    "type": "Integer",
                    "defaultValue": "7",
                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                },
                {
                    "name": "y_offset",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Height in blocks to add to the selected target position",
                },
            ],
        },
        "minecraft:behavior.follow_caravan": {
            "description": "Allows the mob to follow mobs that are in a caravan.",
            "children": [
                {
                    "name": "entity_count",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Number of entities that can be in the caravan",
                },
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of entity types that this mob can follow in a caravan",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this entry in the list valid",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "Maximum distance this mob can be away to be a valid choice",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob has to be visible to be a valid choice",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Decimal",
                            "defaultValue": "3.0",
                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                        {
                            "name": "sprint_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                        },
                        {
                            "name": "walk_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                        },
                    ],
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.follow_mob": {
            "description": "Allows the mob to follow other mobs.",
            "children": [
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks it will look for a mob to follow",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "stop_distance",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "The distance in blocks this mob stops from the mob it is following",
                },
            ],
        },
        "minecraft:behavior.follow_owner": {
            "description": "Allows a mob to follow the player that owns it.",
            "children": [
                {
                    "name": "can_teleport",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Defines if the mob will teleport to its owner when too far away.",
                },
                {
                    "name": "ignore_vibration",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Defines if the mob should disregard following its owner after detecting a recent vibration.",
                },
                {
                    "name": "max_distance",
                    "type": "Decimal",
                    "defaultValue": "60.0",
                    "description": "The maximum distance the mob can be from its owner to start following it. Applicable only when \"can_teleport\" is set to false.",
                },
                {
                    "name": "post_teleport_distance",
                    "type": "Boolean",
                    "defaultValue": "\"stop_distance\" + 1",
                    "description": "Defines how far (in blocks) the entity will be from its owner after teleporting. If not specified, it defaults to \"stop_distance\" + 1, allowing the entity to seamlessly resume navigation.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "start_distance",
                    "type": "Decimal",
                    "defaultValue": "10.0",
                    "description": "The minimum distance the mob must be from its owner to start following it.",
                },
                {
                    "name": "stop_distance",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "The distance at which the mob will stop following its owner.",
                },
            ],
        },
        "minecraft:behavior.follow_parent": {
            "description": "Allows the mob to follow their parent around.",
            "children": [
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.follow_target_captain": {
            "description": "Allows mob to move towards its current target captain.",
            "children": [
                {
                    "name": "follow_distance",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Defines the distance in blocks the mob will stay from its target while following.",
                },
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Defines the maximum distance in blocks a mob can get from its target captain before giving up trying to follow it.",
                },
            ],
        },
        "minecraft:behavior.go_and_give_items_to_noteblock": {
            "description": "The entity will attempt to toss the items from its inventory to a nearby recently played noteblock.",
            "children": [
                {
                    "name": "listen_time",
                    "type": "Integer",
                    "defaultValue": "0.000000",
                    "description": "Sets the time an entity should continue delivering items to a noteblock after hearing it.",
                },
                {
                    "name": "on_item_throw",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when this mob throws items.",
                },
                {
                    "name": "reach_block_distance",
                    "type": "Decimal",
                    "defaultValue": "3.000000",
                    "description": "Sets the desired distance to be reached before throwing the items towards the block.",
                },
                {
                    "name": "run_speed",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "Sets the entity's speed when running toward the block.",
                },
                {
                    "name": "throw_force",
                    "type": "Decimal",
                    "defaultValue": "0.200000",
                    "description": "Sets the throw force.",
                },
                {
                    "name": "throw_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sound to play when this mob throws an item.",
                },
                {
                    "name": "vertical_throw_mul",
                    "type": "Decimal",
                    "defaultValue": "1.500000",
                    "description": "Sets the vertical throw multiplier that is applied on top of the throw force in the vertical direction.",
                },
            ],
        },
        "minecraft:behavior.go_and_give_items_to_owner": {
            "description": "The entity will attempt to toss the items from its inventory to its owner.",
            "children": [
                {
                    "name": "on_item_throw",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when this mob throws items.",
                },
                {
                    "name": "reach_mob_distance",
                    "type": "Decimal",
                    "defaultValue": "3.000000",
                    "description": "Sets the desired distance to be reached before giving items to owner.",
                },
                {
                    "name": "run_speed",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "Sets the entity's speed when running toward the owner.",
                },
                {
                    "name": "throw_force",
                    "type": "Decimal",
                    "defaultValue": "0.200000",
                    "description": "Sets the throw force.",
                },
                {
                    "name": "throw_sound",
                    "type": "String",
                    "defaultValue": "item_thrown",
                    "description": "Sound to play when this mob throws an item.",
                },
                {
                    "name": "vertical_throw_mul",
                    "type": "Decimal",
                    "defaultValue": "1.500000",
                    "description": "Sets the vertical throw multiplier that is applied on top of the throw force in the vertical direction.",
                },
            ],
        },
        "minecraft:behavior.go_home": {
            "description": "Allows the mob to move back to the position they were spawned.",
            "children": [
                {
                    "name": "calculate_new_path_radius",
                    "type": "Decimal",
                    "defaultValue": "2.00",
                    "description": "Distance in blocks that the mob is considered close enough to the end of the current path. A new path will then be calculated to continue toward home.",
                },
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.50",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot.",
                },
                {
                    "name": "interval",
                    "type": "Integer",
                    "defaultValue": "120",
                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal.",
                },
                {
                    "name": "on_failed",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when this goal fails.",
                },
                {
                    "name": "on_home",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when this mob gets home.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal.",
                },
            ],
        },
        "minecraft:behavior.guardian_attack": {
            "description": "Allows this entity to use a laser beam attack. Can only be used by Guardians and Elder Guardians.",
            "children": [
                {
                    "name": "elder_extra_magic_damage",
                    "type": "Integer",
                    "defaultValue": "2",
                    "description": "Amount of additional damage dealt from an elder guardian's magic attack.",
                },
                {
                    "name": "hard_mode_extra_magic_damage",
                    "type": "Integer",
                    "defaultValue": "2",
                    "description": "In hard difficulty, amount of additional damage dealt from a guardian's magic attack.",
                },
                {
                    "name": "magic_damage",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Amount of damage dealt from a guardian's magic attack. Magic attack damage is added to the guardian's base attack damage.",
                },
                {
                    "name": "min_distance",
                    "type": "Decimal",
                    "defaultValue": "3",
                    "description": "Guardian attack behavior stops if the target is closer than this distance (doesn't apply to elders).",
                },
                {
                    "name": "sound_delay_time",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Time (in seconds) to wait after starting an attack before playing the guardian attack sound.",
                },
                {
                    "name": "x_max_rotation",
                    "type": "Decimal",
                    "defaultValue": "90",
                    "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.",
                },
                {
                    "name": "y_max_head_rotation",
                    "type": "Decimal",
                    "defaultValue": "90",
                    "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate its head while trying to look at the target.",
                },
            ],
        },
        "minecraft:behavior.harvest_farm_block": {
            "description": "Allows the entity to search within an area for farmland with air above it. If found, the entity will replace the air block by planting a seed item from its inventory on the farmland block. This goal requires \"minecraft:inventory\" and \"minecraft:navigation\" to execute. This goal will not execute if the entity does not have an item in its inventory.",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "1.50",
                    "description": "Distance in blocks within the entity considers it has reached it's target position.",
                },
                {
                    "name": "max_seconds_before_search",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The maximum amount of time in seconds that the goal can take before searching for the first harvest block. The time is chosen between 0 and this number.",
                },
                {
                    "name": "search_cooldown_max_seconds",
                    "type": "Decimal",
                    "defaultValue": "8.0",
                    "description": "The maximum amount of time in seconds that the goal can take before searching again, after failing to find a a harvest block already. The time is chosen between 0 and this number.",
                },
                {
                    "name": "search_count",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The number of randomly selected blocks each tick that the entity will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick.",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The Height in blocks the entity will search within to find a valid target position.",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "16",
                    "description": "The distance in blocks the entity will search within to find a valid target position.",
                },
                {
                    "name": "seconds_until_new_task",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "The amount of time in seconds that the goal will cooldown after a successful reap/sow, before it can start again.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.50",
                    "description": "Movement speed multiplier of the entity when using this Goal.",
                },
            ],
        },
        "minecraft:behavior.hide": {
            "description": "Allows a mob with the hide component to attempt to move to - and hide at - an owned or nearby POI.",
            "children": [
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Amount of time in seconds that the mob reacts.",
                },
                {
                    "name": "poi_type",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Defines what POI type to hide at.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "timeout_cooldown",
                    "type": "Decimal",
                    "defaultValue": "8.0",
                    "description": "The cooldown time in seconds before the goal can be reused after a internal failure or timeout condition.",
                },
            ],
        },
        "minecraft:behavior.hold_ground": {
            "description": "The mob freezes and looks at the mob they are targeting.",
            "children": [
                {
                    "name": "broadcast",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether to broadcast out the mob's target to other mobs of the same type.",
                },
                {
                    "name": "broadcast_range",
                    "type": "Decimal",
                    "defaultValue": "0.0f",
                    "description": "Range in blocks for how far to broadcast.",
                },
                {
                    "name": "min_radius",
                    "type": "Decimal",
                    "defaultValue": "10.0f",
                    "description": "Minimum distance the target must be for the mob to run this goal.",
                },
                {
                    "name": "within_radius_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to run when target is within the radius. This event is broadcasted if broadcast is true.",
                },
            ],
        },
        "minecraft:behavior.hurt_by_target": {
            "description": "Allows the mob to target another mob that hurts them.",
            "children": [
                {
                    "name": "alert_same_type",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, nearby mobs of the same type will be alerted about the damage",
                },
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of entity types that this mob can target when hurt by them",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this entry in the list valid",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "Maximum distance this mob can be away to be a valid choice",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob has to be visible to be a valid choice",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Decimal",
                            "defaultValue": "3.0",
                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                        {
                            "name": "sprint_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                        },
                        {
                            "name": "walk_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                        },
                    ],
                },
                {
                    "name": "hurt_owner",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob will hurt its owner and other mobs with the same owner as itself",
                },
            ],
        },
        "minecraft:behavior.inspect_bookshelf": {
            "description": "Allows the mob to inspect bookshelves.",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "search_count",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The height that the mob will search for bookshelves",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Distance in blocks the mob will look for books to inspect",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.investigate_suspicious_location": {
            "description": "Allows this entity to move towards a \"suspicious\" position based on data gathered in minecraft:suspect_tracking",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "1.5",
                    "description": "Distance in blocks within the entity considers it has reached it's target position.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Movement speed multiplier",
                },
            ],
        },
        "minecraft:behavior.jump_around_target": {
            "description": "Allows an entity to jump around a target.",
            "children": [
                {
                    "name": "check_collision",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Enables collision checks when calculating the jump. Setting check_collision to true may affect performance and should be used with care.",
                },
                {
                    "name": "entity_bounding_box_scale",
                    "type": "Decimal",
                    "defaultValue": "0.700000",
                    "description": "Scaling temporarily applied to the entity's AABB bounds when jumping. A smaller bounding box reduces the risk of collisions during the jump. When check_collision is true it also increases the chance of being able to jump when close to obstacles.",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Conditions that need to be met for the behavior to start.",
                },
                {
                    "name": "jump_angles",
                    "type": "Array",
                    "defaultValue": "[ 40.0, 55.0, 60.0, 75.0, 80.0 ]",
                    "description": "The jump angles in float degrees that are allowed when performing the jump. The order in which the angles are chosen is randomized.",
                },
                {
                    "name": "jump_cooldown_duration",
                    "type": "Decimal",
                    "defaultValue": "0.500000",
                    "description": "The time in seconds to spend in cooldown before this goal can be used again.",
                },
                {
                    "name": "jump_cooldown_when_hurt_duration",
                    "type": "Decimal",
                    "defaultValue": "0.100000",
                    "description": "The time in seconds to spend in cooldown after being hurt before this goal can be used again.",
                },
                {
                    "name": "landing_distance_from_target",
                    "type": "Range [a, b]",
                    "defaultValue": "[4.000000, 8.000000]",
                    "description": "The range deciding how close to and how far away from the target the landing position can be when jumping.",
                },
                {
                    "name": "landing_position_spread_degrees",
                    "type": "Integer",
                    "defaultValue": "90",
                    "description": "This angle (in degrees) is used for controlling the spread when picking a landing position behind the target. A zero spread angle means the landing position will be straight behind the target with no variance. A 90 degree spread angle means the landing position can be up to 45 degrees to the left and to the right of the position straight behind the target's view direction.",
                },
                {
                    "name": "last_hurt_duration",
                    "type": "Decimal",
                    "defaultValue": "2.000000",
                    "description": "If the entity was hurt within these last seconds, the jump_cooldown_when_hurt_duration will be used instead of jump_cooldown_duration.",
                },
                {
                    "name": "line_of_sight_obstruction_height_ignore",
                    "type": "Integer",
                    "defaultValue": "4",
                    "description": "If the entity's line of sight towards its target is obstructed by an obstacle with a height below this number, the obstacle will be ignored, and the goal will try to find a valid landing position.",
                },
                {
                    "name": "max_jump_velocity",
                    "type": "Decimal",
                    "defaultValue": "1.400000",
                    "description": "Maximum velocity a jump can be performed at.",
                },
                {
                    "name": "prepare_jump_duration",
                    "type": "Decimal",
                    "defaultValue": "0.500000",
                    "description": "The time in seconds to spend preparing for the jump.",
                },
                {
                    "name": "required_vertical_space",
                    "type": "Integer",
                    "defaultValue": "4",
                    "description": "The number of blocks above the entity's head that has to be air for this goal to be usable.",
                },
                {
                    "name": "snap_to_surface_block_range",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "The number of blocks above and below from the jump target position that will be checked to find a surface to land on.",
                },
                {
                    "name": "valid_distance_to_target",
                    "type": "Range [a, b]",
                    "defaultValue": "[4.000000, 20.000000]",
                    "description": "Target needs to be within this range for the jump to happen.",
                },
            ],
        },
        "minecraft:behavior.jump_to_block": {
            "description": "Allows an entity to jump to another random block.",
            "children": [
                {
                    "name": "cooldown_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[10, 20]",
                    "description": "Minimum and maximum cooldown time-range (positive, in seconds) between each attempted jump.",
                },
                {
                    "name": "forbidden_blocks",
                    "type": "Array",
                    "defaultValue": "",
                    "description": "Blocks that the mob can't jump to.",
                },
                {
                    "name": "max_velocity",
                    "type": "Decimal",
                    "defaultValue": "1.500000",
                    "description": "The maximum velocity with which the mob can jump.",
                },
                {
                    "name": "minimum_distance",
                    "type": "Integer",
                    "defaultValue": "2",
                    "description": "The minimum distance (in blocks) from the mob to a block, in order to consider jumping to it.",
                },
                {
                    "name": "minimum_path_length",
                    "type": "Integer",
                    "defaultValue": "5",
                    "description": "The minimum length (in blocks) of the mobs path to a block, in order to consider jumping to it.",
                },
                {
                    "name": "preferred_blocks",
                    "type": "Array",
                    "defaultValue": "",
                    "description": "Blocks that the mob prefers jumping to.",
                },
                {
                    "name": "preferred_blocks_chance",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "Chance (between 0.0 and 1.0) that the mob will jump to a preferred block, if in range. Only matters if preferred blocks are defined.",
                },
                {
                    "name": "scale_factor",
                    "type": "Decimal",
                    "defaultValue": "0.700000",
                    "description": "The scalefactor of the bounding box of the mob while it is jumping.",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "The height (in blocks, in range [2, 15]) of the search box, centered around the mob.",
                },
                {
                    "name": "search_width",
                    "type": "Integer",
                    "defaultValue": "8",
                    "description": "The width (in blocks, in range [2, 15]) of the search box, centered around the mob.",
                },
            ],
        },
        "minecraft:behavior.knockback_roar": {
            "description": "Allows the mob to perform a damaging knockback that affects all nearby entities.",
            "children": [
                {
                    "name": "attack_time",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "The delay after which the knockback occurs (in seconds).",
                },
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "0.10",
                    "description": "Time (in seconds) the mob has to wait before using the goal again.",
                },
                {
                    "name": "damage_filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The list of conditions another entity must meet to be a valid target to apply damage to.",
                },
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The max duration of the roar (in seconds).",
                },
                {
                    "name": "knockback_damage",
                    "type": "Integer",
                    "defaultValue": "6",
                    "description": "The damage dealt by the knockback roar.",
                },
                {
                    "name": "knockback_filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The list of conditions another entity must meet to be a valid target to apply knockback to.",
                },
                {
                    "name": "knockback_height_cap",
                    "type": "Decimal",
                    "defaultValue": "0.40",
                    "description": "The maximum height for vertical knockback.",
                },
                {
                    "name": "knockback_horizontal_strength",
                    "type": "Integer",
                    "defaultValue": "4",
                    "description": "The strength of the horizontal knockback.",
                },
                {
                    "name": "knockback_range",
                    "type": "Integer",
                    "defaultValue": "4",
                    "description": "The radius (in blocks) of the knockback effect.",
                },
                {
                    "name": "knockback_vertical_strength",
                    "type": "Integer",
                    "defaultValue": "4",
                    "description": "The strength of the vertical knockback.",
                },
                {
                    "name": "on_roar_end",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event that is triggered when the roar ends.",
                },
            ],
        },
        "minecraft:behavior.lay_down": {
            "description": "Allows mobs to lay down at times",
            "children": [
                {
                    "name": "interval",
                    "type": "Integer",
                    "defaultValue": "120",
                    "description": "A random value to determine at what intervals something can occur. This has a 1/interval chance to choose this goal",
                },
                {
                    "name": "random_stop_interval",
                    "type": "Integer",
                    "defaultValue": "120",
                    "description": "a random value in which the goal can use to pull out of the behavior. This is a 1/interval chance to play the sound",
                },
            ],
        },
        "minecraft:behavior.lay_egg": {
            "description": "Allows the mob to lay an egg block on certain types of blocks if the mob is pregnant.",
            "children": [
                {
                    "name": "allow_laying_from_below",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the mob to lay its eggs from below the target if it can't get there. This is useful if the target block is water with air above, since mobs may not be able to get to the air block above water.",
                },
                {
                    "name": "egg_type",
                    "type": "String",
                    "defaultValue": "minecraft:turtle_egg",
                    "description": "Block type for the egg to lay. If this is a turtle egg, the number of eggs in the block is randomly set.",
                },
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "lay_egg_sound",
                    "type": "String",
                    "defaultValue": "lay_egg",
                    "description": "Name of the sound event played when laying the egg. Defaults to lay_egg, which is used for Turtles.",
                },
                {
                    "name": "lay_seconds",
                    "type": "Decimal",
                    "defaultValue": "10.0f",
                    "description": "Duration of the laying egg process in seconds.",
                },
                {
                    "name": "on_lay",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run when this mob lays the egg.",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Height in blocks the mob will look for a target block to move towards",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks it will look for a target block to move towards",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "target_blocks",
                    "type": "Array",
                    "defaultValue": "[ minecraft:sand ]",
                    "description": "Blocks that the mob can lay its eggs on top of.",
                },
                {
                    "name": "target_materials_above_block",
                    "type": "Array",
                    "defaultValue": "[ Air ]",
                    "description": "Types of materials that can exist above the target block. Valid types are Air, Water, and Lava.",
                },
                {
                    "name": "use_default_animation",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Specifies if the default lay-egg animation should be played when the egg is placed or not.",
                },
            ],
        },
        "minecraft:behavior.leap_at_target": {
            "description": "Allows monsters to jump at and attack their target. Can only be used by hostile mobs.",
            "children": [
                {
                    "name": "must_be_on_ground",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the mob will only jump at its target if its on the ground. Setting it to false will allow it to jump even if its already in the air",
                },
                {
                    "name": "set_persistent",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the actor to be set to persist upon targeting a player",
                },
                {
                    "name": "yd",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "The height in blocks the mob jumps when leaping at its target",
                },
            ],
        },
        "minecraft:behavior.look_at_entity": {
            "description": "Allows the mob to look at nearby entities.",
            "children": [
                {
                    "name": "angle_of_view_horizontal",
                    "type": "Integer",
                    "defaultValue": "360",
                    "description": "The angle in degrees that the mob can see in the Y-axis (up-down).",
                },
                {
                    "name": "angle_of_view_vertical",
                    "type": "Integer",
                    "defaultValue": "360",
                    "description": "The angle in degrees that the mob can see in the X-axis (left-right).",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Filter to determine the conditions for this mob to look at the entity",
                },
                {
                    "name": "look_distance",
                    "type": "Decimal",
                    "defaultValue": "8.0",
                    "description": "The distance in blocks from which the entity will look at the nearest entity.",
                },
                {
                    "name": "look_time",
                    "type": "Range [a, b]",
                    "defaultValue": "[2, 4]",
                    "description": "Time range to look at the nearest entity.",
                },
                {
                    "name": "probability",
                    "type": "Decimal",
                    "defaultValue": "0.02",
                    "description": "The probability of looking at the target. A value of 1.00 is 100%.",
                },
            ],
        },
        "minecraft:behavior.look_at_player": {
            "description": "Allows the mob to look at the player when the player is nearby.",
            "children": [
                {
                    "name": "angle_of_view_horizontal",
                    "type": "Integer",
                    "defaultValue": "360",
                    "description": "The angle in degrees that the mob can see in the Y-axis (up-down).",
                },
                {
                    "name": "angle_of_view_vertical",
                    "type": "Integer",
                    "defaultValue": "360",
                    "description": "The angle in degrees that the mob can see in the X-axis (left-right).",
                },
                {
                    "name": "look_distance",
                    "type": "Decimal",
                    "defaultValue": "8.0",
                    "description": "The distance in blocks from which the entity will look at the nearest player.",
                },
                {
                    "name": "look_time",
                    "type": "Range [a, b]",
                    "defaultValue": "[2, 4]",
                    "description": "Time range to look at the nearest player.",
                },
                {
                    "name": "probability",
                    "type": "Decimal",
                    "defaultValue": "0.02",
                    "description": "The probability of looking at the target. A value of 1.00 is 100%.",
                },
            ],
        },
        "minecraft:behavior.look_at_target": {
            "description": "Allows the mob to look at the entity they are targetting.",
            "children": [
                {
                    "name": "angle_of_view_horizontal",
                    "type": "Integer",
                    "defaultValue": "360",
                    "description": "The angle in degrees that the mob can see in the Y-axis (up-down).",
                },
                {
                    "name": "angle_of_view_vertical",
                    "type": "Integer",
                    "defaultValue": "360",
                    "description": "The angle in degrees that the mob can see in the X-axis (left-right).",
                },
                {
                    "name": "look_distance",
                    "type": "Decimal",
                    "defaultValue": "8.0",
                    "description": "The distance in blocks from which the entity will look at this mob's current target.",
                },
                {
                    "name": "look_time",
                    "type": "Range [a, b]",
                    "defaultValue": "[2, 4]",
                    "description": "Time range to look at this mob's current target.",
                },
                {
                    "name": "probability",
                    "type": "Decimal",
                    "defaultValue": "0.02",
                    "description": "The probability of looking at the target. A value of 1.00 is 100%.",
                },
            ],
        },
        "minecraft:behavior.look_at_trading_player": {
            "description": "Allows the mob to look at the player they are trading with.",
            "children": [
                {
                    "name": "angle_of_view_horizontal",
                    "type": "Integer",
                    "defaultValue": "360",
                    "description": "The angle in degrees that the mob can see in the Y-axis (up-down).",
                },
                {
                    "name": "angle_of_view_vertical",
                    "type": "Integer",
                    "defaultValue": "360",
                    "description": "The angle in degrees that the mob can see in the X-axis (left-right).",
                },
                {
                    "name": "look_distance",
                    "type": "Decimal",
                    "defaultValue": "8.0",
                    "description": "The distance in blocks from which the entity will look at the player this mob is trading with.",
                },
                {
                    "name": "look_time",
                    "type": "Range [a, b]",
                    "defaultValue": "[2, 4]",
                    "description": "Time range to look at the player this mob is trading with.",
                },
                {
                    "name": "probability",
                    "type": "Decimal",
                    "defaultValue": "0.02",
                    "description": "The probability of looking at the target. A value of 1.00 is 100%.",
                },
            ],
        },
        "minecraft:behavior.melee_attack": {
            "description": "Allows an entity to deal damage through a melee attack.",
            "children": [
                {
                    "name": "attack_once",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the entity to use this attack behavior, only once EVER.",
                },
                {
                    "name": "attack_types",
                    "type": "String",
                    "defaultValue": "N/A",
                    "description": "Defines the entity types this entity will attack.",
                },
                {
                    "name": "can_spread_on_fire",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If the entity is on fire, this allows the entity's target to catch on fire after being hit.",
                },
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Cooldown time (in seconds) between attacks.",
                },
                {
                    "name": "inner_boundary_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.25",
                    "description": "Time (in seconds) to add to attack path recalculation when the target is beyond the \"path_inner_boundary\".",
                },
                {
                    "name": "max_dist",
                    "type": "Decimal",
                    "defaultValue": "N/A",
                    "description": "Unused. No effect on \"minecraft:behavior.melee_attack\".",
                },
                {
                    "name": "max_path_time",
                    "type": "Decimal",
                    "defaultValue": "0.55",
                    "description": "Maximum base time (in seconds) to recalculate new attack path to target (before increases applied).",
                },
                {
                    "name": "melee_fov",
                    "type": "Decimal",
                    "defaultValue": "90",
                    "description": "Field of view (in degrees) when using the sensing component to detect an attack target.",
                },
                {
                    "name": "min_path_time",
                    "type": "Decimal",
                    "defaultValue": "0.2",
                    "description": "Minimum base time (in seconds) to recalculate new attack path to target (before increases applied).",
                },
                {
                    "name": "on_attack",
                    "type": "Trigger",
                    "defaultValue": "N/A",
                    "description": "Defines the event to trigger when this entity successfully attacks.",
                },
                {
                    "name": "outer_boundary_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Time (in seconds) to add to attack path recalculation when the target is beyond the \"path_outer_boundary\".",
                },
                {
                    "name": "path_fail_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.75",
                    "description": "Time (in seconds) to add to attack path recalculation when this entity cannot move along the current path.",
                },
                {
                    "name": "path_inner_boundary",
                    "type": "Decimal",
                    "defaultValue": "16",
                    "description": "Distance at which to increase attack path recalculation by \"inner_boundary_tick_increase\".",
                },
                {
                    "name": "path_outer_boundary",
                    "type": "Decimal",
                    "defaultValue": "32",
                    "description": "Distance at which to increase attack path recalculation by \"outer_boundary_tick_increase\".",
                },
                {
                    "name": "random_stop_interval",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "This entity will have a 1 in N chance to stop it's current attack, where N = \"random_stop_interval\".",
                },
                {
                    "name": "reach_multiplier",
                    "type": "Decimal",
                    "defaultValue": "2",
                    "description": "Used with the base size of the entity to determine minimum target-distance before trying to deal attack damage.",
                },
                {
                    "name": "require_complete_path",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Toggles (on/off) the need to have a full path from the entity to the target when using this melee attack behavior.",
                },
                {
                    "name": "set_persistent",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the actor to be set to persist upon targeting a player",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "This multiplier modifies the attacking entity's speed when moving toward the target.",
                },
                {
                    "name": "target_dist",
                    "type": "Decimal",
                    "defaultValue": "N/a",
                    "description": "Unused. No effect on \"minecraft:behavior.melee_attack\".",
                },
                {
                    "name": "track_target",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the entity to track the attack target, even if the entity has no sensing.",
                },
                {
                    "name": "x_max_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.",
                },
                {
                    "name": "y_max_head_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate its head while trying to look at the target.",
                },
            ],
        },
        "minecraft:behavior.melee_box_attack": {
            "description": "Allows an entity to deal damage through a melee attack with reach calculations based on bounding boxes.",
            "children": [
                {
                    "name": "attack_once",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the entity to use this attack behavior, only once EVER.",
                },
                {
                    "name": "attack_types",
                    "type": "String",
                    "defaultValue": "N/A",
                    "description": "Defines the entity types this entity will attack.",
                },
                {
                    "name": "can_spread_on_fire",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If the entity is on fire, this allows the entity's target to catch on fire after being hit.",
                },
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Cooldown time (in seconds) between attacks.",
                },
                {
                    "name": "horizontal_reach",
                    "type": "Decimal",
                    "defaultValue": "0.8",
                    "description": "The attack reach of the mob will be a box with the size of the mobs bounds increased by this value in all horizontal directions.",
                },
                {
                    "name": "inner_boundary_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.25",
                    "description": "Time (in seconds) to add to attack path recalculation when the target is beyond the \"path_inner_boundary\".",
                },
                {
                    "name": "max_dist",
                    "type": "Decimal",
                    "defaultValue": "N/A",
                    "description": "Unused. No effect on \"minecraft:behavior.melee_attack\".",
                },
                {
                    "name": "max_path_time",
                    "type": "Decimal",
                    "defaultValue": "0.55",
                    "description": "Maximum base time (in seconds) to recalculate new attack path to target (before increases applied).",
                },
                {
                    "name": "melee_fov",
                    "type": "Decimal",
                    "defaultValue": "90",
                    "description": "Field of view (in degrees) when using the sensing component to detect an attack target.",
                },
                {
                    "name": "min_path_time",
                    "type": "Decimal",
                    "defaultValue": "0.2",
                    "description": "Minimum base time (in seconds) to recalculate new attack path to target (before increases applied).",
                },
                {
                    "name": "on_attack",
                    "type": "Trigger",
                    "defaultValue": "N/A",
                    "description": "Defines the event to trigger when this entity successfully attacks.",
                },
                {
                    "name": "outer_boundary_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Time (in seconds) to add to attack path recalculation when the target is beyond the \"path_outer_boundary\".",
                },
                {
                    "name": "path_fail_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.75",
                    "description": "Time (in seconds) to add to attack path recalculation when this entity cannot move along the current path.",
                },
                {
                    "name": "path_inner_boundary",
                    "type": "Decimal",
                    "defaultValue": "16",
                    "description": "Distance at which to increase attack path recalculation by \"inner_boundary_tick_increase\".",
                },
                {
                    "name": "path_outer_boundary",
                    "type": "Decimal",
                    "defaultValue": "32",
                    "description": "Distance at which to increase attack path recalculation by \"outer_boundary_tick_increase\".",
                },
                {
                    "name": "random_stop_interval",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "This entity will have a 1 in N chance to stop it's current attack, where N = \"random_stop_interval\".",
                },
                {
                    "name": "require_complete_path",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Toggles (on/off) the need to have a full path from the entity to the target when using this melee attack behavior.",
                },
                {
                    "name": "set_persistent",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the actor to be set to persist upon targeting a player",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "This multiplier modifies the attacking entity's speed when moving toward the target.",
                },
                {
                    "name": "target_dist",
                    "type": "Decimal",
                    "defaultValue": "N/a",
                    "description": "Unused. No effect on \"minecraft:behavior.melee_attack\".",
                },
                {
                    "name": "track_target",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the entity to track the attack target, even if the entity has no sensing.",
                },
                {
                    "name": "x_max_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.",
                },
                {
                    "name": "y_max_head_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate its head while trying to look at the target.",
                },
            ],
        },
        "minecraft:behavior.mingle": {
            "description": "Allows an entity to go to the village bell and mingle with other entities",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Amount of time in seconds that the entity will chat with another entity",
                },
                {
                    "name": "mingle_distance",
                    "type": "Decimal",
                    "defaultValue": "2.0f",
                    "description": "The distance from its partner that this entity will mingle. If the entity type is not the same as the entity, this value needs to be identical on both entities.",
                },
                {
                    "name": "mingle_partner_type",
                    "type": "List",
                    "defaultValue": "empty",
                    "description": "The entity type that this entity is allowed to mingle with",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.mount_pathing": {
            "description": "Allows the mob to move around on its own while mounted seeking a target to attack.",
            "children": [
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "target_dist",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "The distance at which this mob wants to be away from its target",
                },
                {
                    "name": "track_target",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this mob will chase after the target as long as it's a valid target",
                },
            ],
        },
        "minecraft:behavior.move_around_target": {
            "description": "Allows an entity to move around a target. If the entity is too close (i.e. closer than destination range min and height difference limit) it will try to move away from its target. If the entity is too far away from its target it will try to move closer to a random position within the destination range. A randomized amount of those positions will be behind the target, and the spread can be tweaked with 'destination_pos_search_spread_degrees'.",
            "children": [
                {
                    "name": "destination_pos_search_spread_degrees",
                    "type": "Decimal",
                    "defaultValue": "90.000000",
                    "description": "This angle (in degrees) is used for controlling the spread when picking a destination position behind the target. A zero spread angle means the destination position will be straight behind the target with no variance. A 90 degree spread angle means the destination position can be up to 45 degrees to the left and to the right of the position straight behind the target's view direction..",
                },
                {
                    "name": "destination_position_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[4.000000, 8.000000]",
                    "description": "The range of distances from the target entity within which the goal should look for a position to move the owner entity to.",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Conditions that need to be met for the behavior to start.",
                },
                {
                    "name": "height_difference_limit",
                    "type": "Decimal",
                    "defaultValue": "10.000000",
                    "description": "Distance in height (in blocks) between the owner entity and the target has to be less than this value when owner checks if it is too close and should move away from the target. This value needs to be bigger than zero for the move away logic to trigger.",
                },
                {
                    "name": "horizontal_search_distance",
                    "type": "Integer",
                    "defaultValue": "5",
                    "description": "Horizontal search distance (in blocks) when searching for a position to move away from target.",
                },
                {
                    "name": "movement_speed",
                    "type": "Decimal",
                    "defaultValue": "0.600000",
                    "description": "The speed with which the entity should move to its target position.",
                },
                {
                    "name": "vertical_search_distance",
                    "type": "Integer",
                    "defaultValue": "5",
                    "description": "Vertical search distance (in blocks) when searching for a position to move away from target.",
                },
            ],
        },
        "minecraft:behavior.move_indoors": {
            "description": "Allows this entity to move indoors.",
            "children": [
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.800000",
                    "description": "The movement speed modifier to apply to the entity while it is moving indoors.",
                },
                {
                    "name": "timeout_cooldown",
                    "type": "Decimal",
                    "defaultValue": "8.000000",
                    "description": "The cooldown time in seconds before the goal can be reused after pathfinding fails",
                },
            ],
        },
        "minecraft:behavior.move_outdoors": {
            "description": "Allows this entity to move outdoors.",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.500000",
                    "description": "The radius away from the target block to count as reaching the goal.",
                },
                {
                    "name": "search_count",
                    "type": "Integer",
                    "defaultValue": "0.000000",
                    "description": "The amount of times to try finding a random outdoors position before failing.",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "0.000000",
                    "description": "The y range to search for an outdoors position for.",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0.000000",
                    "description": "The x and z range to search for an outdoors position for.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.500000",
                    "description": "The movement speed modifier to apply to the entity while it is moving outdoors.",
                },
                {
                    "name": "timeout_cooldown",
                    "type": "Decimal",
                    "defaultValue": "8.000000",
                    "description": "The cooldown time in seconds before the goal can be reused after pathfinding fails",
                },
            ],
        },
        "minecraft:behavior.move_through_village": {
            "description": "Can only be used by Villagers. Allows the villagers to create paths around the village.",
            "children": [
                {
                    "name": "only_at_night",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob will only move through the village during night time",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.move_to_block": {
            "description": "Allows mob to move towards a block.",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "on_reach",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run on block reached.",
                },
                {
                    "name": "on_stay_completed",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run on completing a stay of stay_duration at the block.",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The height in blocks that the mob will look for the block.",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks that the mob will look for the block.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "start_chance",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Chance to start the behavior (applied after each random tick_interval).",
                },
                {
                    "name": "stay_duration",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Number of ticks needed to complete a stay at the block.",
                },
                {
                    "name": "target_blocks",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Block types to move to.",
                },
                {
                    "name": "target_offset",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[0, 0, 0]",
                    "description": "Offset to add to the selected target position.",
                },
                {
                    "name": "target_selection_method",
                    "type": "String",
                    "defaultValue": "nearest",
                    "description": "Kind of block to find fitting the specification. Valid values are \"random\" and \"nearest\".",
                },
                {
                    "name": "tick_interval",
                    "type": "Integer",
                    "defaultValue": "20",
                    "description": "Average interval in ticks to try to run this behavior.",
                },
            ],
        },
        "minecraft:behavior.move_to_land": {
            "description": "Allows the mob to move back onto land when in water.",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "search_count",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Height in blocks the mob will look for land to move towards",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks it will look for land to move towards",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.move_to_lava": {
            "description": "Allows the mob to move back into lava when on land.",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "search_count",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Height in blocks the mob will look for lava to move towards",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks it will look for lava to move towards",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.move_to_liquid": {
            "description": "Allows the mob to move into a liquid when on land.",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "material_type",
                    "type": "String",
                    "defaultValue": "Any",
                    "description": "The material type of the liquid block to find. Valid values are \"Any\", \"Water\", and \"Lava\".",
                },
                {
                    "name": "search_count",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Height in blocks the mob will look for the liquid block to move towards",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks it will look for the liquid block to move towards",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.move_to_poi": {
            "description": "Allows the mob to move to a POI if able to",
            "children": [
                {
                    "name": "poi_type",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Tells the goal what POI type it should be looking for",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.move_to_random_block": {
            "description": "Allows mob to move towards a random block.",
            "children": [
                {
                    "name": "block_distance",
                    "type": "Decimal",
                    "defaultValue": "16.0",
                    "description": "Defines the distance from the mob, in blocks, that the block to move to will be chosen.",
                },
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Defines the distance in blocks the mob has to be from the block for the movement to be finished.",
                },
            ],
        },
        "minecraft:behavior.move_to_village": {
            "description": "Allows the mob to move into a random location within a village.",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks to search for villages. If <= 0, find the closest village regardless of distance.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.move_to_water": {
            "description": "Allows the mob to move back into water when on land.",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "search_count",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Height in blocks the mob will look for water to move towards",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks it will look for water to move towards",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.move_towards_dwelling_restriction": {
            "description": "Allows mobs with the dweller component to move toward their Village area that the mob should be restricted to.",
            "children": [
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "This multiplier modifies the entity's speed when moving towards it's restriction.",
                },
            ],
        },
        "minecraft:behavior.move_towards_home_restriction": {
            "description": "Allows mobs with the home component to move toward their pre-defined area that the mob should be restricted to.",
            "children": [
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "This multiplier modifies the entity's speed when moving towards it's restriction.",
                },
            ],
        },
        "minecraft:behavior.move_towards_target": {
            "description": "Allows mob to move towards its current target.",
            "children": [
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Defines the radius in blocks that the mob tries to be from the target. A value of 0 means it tries to occupy the same block as the target",
                },
            ],
        },
        "minecraft:behavior.nap": {
            "description": "Allows mobs to occassionally stop and take a nap under certain conditions.",
            "children": [
                {
                    "name": "cooldown_max",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Maximum time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "cooldown_min",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Minimum time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "mob_detect_dist",
                    "type": "Decimal",
                    "defaultValue": "6.0",
                    "description": "The block distance in x and z that will be checked for mobs that this mob detects",
                },
                {
                    "name": "mob_detect_height",
                    "type": "Decimal",
                    "defaultValue": "6.0",
                    "description": "The block distance in y that will be checked for mobs that this mob detects",
                },
            ],
        },
        "minecraft:behavior.nearest_attackable_target": {
            "description": "Allows an entity to attack the closest target within a given subset of specific target types.",
            "children": [
                {
                    "name": "attack_interval",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Time range (in seconds) between searching for an attack target, range is in (0, \"attack_interval\"]. Only used if \"attack_interval\" is greater than 0, otherwise \"scan_interval\" is used.",
                },
                {
                    "name": "attack_interval_min",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Alias for \"attack_interval\"; provides the same functionality as \"attack_interval\".",
                },
                {
                    "name": "attack_owner",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity can attack its owner.",
                },
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Filters which types of targets are valid for this entity.",
                    "children": [
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this target a valid type.",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "To be a valid target choice, the target type cannot be farther away from this entity than \"max_dist\".",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "Determines if target-validity requires this entity to be in range only, or both in range and in sight.",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Boolean",
                            "defaultValue": "3.0",
                            "description": "Time (in seconds) the target must not be seen by this entity to become invalid. Used only if \"must_see\" is true.",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                    ],
                },
                {
                    "name": "must_reach",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity requires a path to the target.",
                },
                {
                    "name": "must_see",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Determines if target-validity requires this entity to be in range only, or both in range and in sight.",
                },
                {
                    "name": "must_see_forget_duration",
                    "type": "Decimal",
                    "defaultValue": "3.0",
                    "description": "Time (in seconds) the target must not be seen by this entity to become invalid. Used only if \"must_see\" is true.",
                },
                {
                    "name": "persist_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Time (in seconds) this entity can continue attacking the target after the target is no longer valid.",
                },
                {
                    "name": "reselect_targets",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the attacking entity to update the nearest target, otherwise a target is only reselected after each \"scan_interval\" or \"attack_interval\".",
                },
                {
                    "name": "scan_interval",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "If \"attack_interval\" is 0 or isn't declared, then between attacks: scanning for a new target occurs every amount of ticks equal to \"scan_interval\", minimum value is 1. Values under 10 can affect performance.",
                },
                {
                    "name": "set_persistent",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the actor to be set to persist upon targeting a player",
                },
                {
                    "name": "target_invisible_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.70",
                    "description": "Multiplied with the target's armor coverage percentage to modify \"max_dist\" when detecting an invisible target.",
                },
                {
                    "name": "target_search_height",
                    "type": "Decimal",
                    "defaultValue": "-1.00",
                    "description": "Maximum vertical target-search distance, if it's greater than the target type's \"max_dist\". A negative value defaults to \"entity_types\" greatest \"max_dist\".",
                },
                {
                    "name": "target_sneak_visibility_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.80",
                    "description": "Multiplied with the target type's \"max_dist\" when trying to detect a sneaking target.",
                },
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Maximum distance this entity can be from the target when following it, otherwise the target becomes invalid. This value is only used if the entity doesn't declare \"minecraft:follow_range\".",
                },
            ],
        },
        "minecraft:behavior.nearest_prioritized_attackable_target": {
            "description": "Allows the mob to check for and pursue the nearest valid target.",
            "children": [
                {
                    "name": "attack_interval",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Time in seconds before selecting a target",
                },
                {
                    "name": "cooldown",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                },
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of entity types that this mob considers valid targets",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this entry in the list valid",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "Maximum distance this mob can be away to be a valid choice",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob has to be visible to be a valid choice",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Decimal",
                            "defaultValue": "3.0",
                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                        {
                            "name": "sprint_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                        },
                        {
                            "name": "walk_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                        },
                    ],
                },
                {
                    "name": "must_reach",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, only entities that this mob can path to can be selected as targets",
                },
                {
                    "name": "must_see",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, only entities in this mob's viewing range can be selected as targets",
                },
                {
                    "name": "must_see_forget_duration",
                    "type": "Decimal",
                    "defaultValue": "3.0",
                    "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                },
                {
                    "name": "persist_time",
                    "type": "Decimal",
                    "defaultValue": "0.0f",
                    "description": "Time in seconds for a valid target to stay targeted when it becomes and invalid target.",
                },
                {
                    "name": "priority",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Specifies the priority in which filtered enemy types should be attacked. Lower number means higher priority.",
                },
                {
                    "name": "reselect_targets",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the target will change to the current closest entity whenever a different entity is closer",
                },
                {
                    "name": "scan_interval",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "How many ticks to wait between scanning for a target.",
                },
                {
                    "name": "set_persistent",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the actor to be set to persist upon targeting a player",
                },
                {
                    "name": "target_search_height",
                    "type": "Decimal",
                    "defaultValue": "-1.0f",
                    "description": "Height in blocks to search for a target mob. -1.0f means the height does not matter.",
                },
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Distance in blocks that the target can be within to launch an attack",
                },
            ],
        },
        "minecraft:behavior.ocelot_sit_on_block": {
            "description": "Allows to mob to be able to sit in place like the ocelot.",
            "children": [
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.ocelotattack": {
            "description": "Allows an entity to attack by sneaking and pouncing.",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Time (in seconds) between attacks.",
                },
                {
                    "name": "max_distance",
                    "type": "Decimal",
                    "defaultValue": "15",
                    "description": "Max distance from the target, this entity will use this attack behavior.",
                },
                {
                    "name": "max_sneak_range",
                    "type": "Decimal",
                    "defaultValue": "15",
                    "description": "Max distance from the target, this entity starts sneaking.",
                },
                {
                    "name": "max_sprint_range",
                    "type": "Decimal",
                    "defaultValue": "4",
                    "description": "Max distance from the target, this entity starts sprinting (sprinting takes priority over sneaking).",
                },
                {
                    "name": "reach_multiplier",
                    "type": "Decimal",
                    "defaultValue": "2",
                    "description": "Used with the base size of the entity to determine minimum target-distance before trying to deal attack damage.",
                },
                {
                    "name": "sneak_speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.6",
                    "description": "Modifies the attacking entity's movement speed while sneaking.",
                },
                {
                    "name": "sprint_speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.33",
                    "description": "Modifies the attacking entity's movement speed while sprinting.",
                },
                {
                    "name": "walk_speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.8",
                    "description": "Modifies the attacking entity's movement speed when not sneaking or sprinting, but still within attack range.",
                },
                {
                    "name": "x_max_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.",
                },
                {
                    "name": "y_max_head_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate its head while trying to look at the target.",
                },
            ],
        },
        "minecraft:behavior.offer_flower": {
            "description": "Allows the mob to offer a flower to another mob with the minecraft:take_flower behavior.",
            "children": [
                {
                    "name": "chance_to_start",
                    "type": "Decimal",
                    "defaultValue": "0.00",
                    "description": "Percent chance that the mob will start this goal from 0.0 to 1.0 (where 1.0 = 100%).",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Conditions that need to be met for the behavior to start.",
                },
                {
                    "name": "max_head_rotation_y",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate its head while trying to look at the target.",
                },
                {
                    "name": "max_offer_flower_duration",
                    "type": "Decimal",
                    "defaultValue": "20.00",
                    "description": "The max amount of time (in seconds) that the mob will offer the flower for before exiting the Goal.",
                },
                {
                    "name": "max_rotation_x",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.",
                },
                {
                    "name": "search_area",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[6, 2, 6]",
                    "description": "The dimensions of the AABB used to search for a potential mob to offer flower to.",
                },
            ],
        },
        "minecraft:behavior.open_door": {
            "description": "Allows the mob to open doors. Requires the mob to be able to path through doors, otherwise the mob won't even want to try opening them.",
            "children": [
                {
                    "name": "close_door_after",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the mob will close the door after opening it and going through it",
                },
            ],
        },
        "minecraft:behavior.owner_hurt_by_target": {
            "description": "Allows the mob to target another mob that hurts their owner.",
            "children": [
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of entity types that this mob can target if they hurt their owner",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this entry in the list valid",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "Maximum distance this mob can be away to be a valid choice",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob has to be visible to be a valid choice",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Decimal",
                            "defaultValue": "3.0",
                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                        {
                            "name": "sprint_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                        },
                        {
                            "name": "walk_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                        },
                    ],
                },
            ],
        },
        "minecraft:behavior.owner_hurt_target": {
            "description": "Allows the mob to target a mob that is hurt by their owner.",
            "children": [
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of entity types that this entity can target if the potential target is hurt by this mob's owner",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this entry in the list valid",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "Maximum distance this mob can be away to be a valid choice",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob has to be visible to be a valid choice",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Decimal",
                            "defaultValue": "3.0",
                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                        {
                            "name": "sprint_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                        },
                        {
                            "name": "walk_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                        },
                    ],
                },
            ],
        },
        "minecraft:behavior.panic": {
            "description": "Allows the mob to enter the panic state, which makes it run around and away from the damage source that made it enter this state.",
            "children": [
                {
                    "name": "damage_sources",
                    "type": "List",
                    "defaultValue": "[campfire, fire, fire_tick, freezing, lava, lightning, magma, soul_campfire, temperature, entity_attack, entity_explosion, fireworks, magic, projectile, ram_attack, sonic_boom, wither, mace_smash]",
                    "description": "The list of Entity Damage Sources that will cause this mob to panic",
                },
                {
                    "name": "force",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this mob will not stop panicking until it can't move anymore or the goal is removed from it",
                },
                {
                    "name": "ignore_mob_damage",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob will not panic in response to damage from other mobs. This overrides the damage types in \"damage_sources\"",
                },
                {
                    "name": "prefer_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob will prefer water over land",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.pet_sleep_with_owner": {
            "description": "Allows the pet mob to move onto a bed with its owner while sleeping.",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Height in blocks from the owner the pet can be to sleep with owner.",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks from the owner the pet can be to sleep with owner.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.pickup_items": {
            "description": "Allows the mob to pick up items on the ground.",
            "children": [
                {
                    "name": "can_pickup_any_item",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob can pickup any item",
                },
                {
                    "name": "can_pickup_to_hand_or_equipment",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the mob can pickup items to its hand or armor slots",
                },
                {
                    "name": "excluded_items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of items this mob will not pick up",
                },
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "max_dist",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Maximum distance this mob will look for items to pick up",
                },
                {
                    "name": "pickup_based_on_chance",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, depending on the difficulty, there is a random chance that the mob may not be able to pickup items",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "track_target",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this mob will chase after the target as long as it's a valid target",
                },
            ],
        },
        "minecraft:behavior.play": {
            "description": "Allows the mob to play with other mobs by chasing each other and moving around randomly.",
            "children": [
                {
                    "name": "chance_to_start",
                    "type": "Decimal",
                    "defaultValue": "0.00",
                    "description": "Percent chance that the mob will start this goal, from 0 to 1.",
                },
                {
                    "name": "follow_distance",
                    "type": "Integer",
                    "defaultValue": "2",
                    "description": "The distance (in blocks) that the mob tries to be in range of the friend it's following.",
                },
                {
                    "name": "friend_search_area",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[6, 3, 6]",
                    "description": "The dimensions of the AABB used to search for a potential friend to play with.",
                },
                {
                    "name": "friend_types",
                    "type": "Array",
                    "defaultValue": "",
                    "description": "The entity type(s) to consider when searching for a potential friend to play with.",
                },
                {
                    "name": "max_play_duration_seconds",
                    "type": "Decimal",
                    "defaultValue": "50.00",
                    "description": "The max amount of seconds that the mob will play for before exiting the Goal.",
                },
                {
                    "name": "random_pos_search_height",
                    "type": "Integer",
                    "defaultValue": "3",
                    "description": "The height (in blocks) that the mob will search within to find a random position position to move to. Must be at least 1.",
                },
                {
                    "name": "random_pos_search_range",
                    "type": "Integer",
                    "defaultValue": "16",
                    "description": "The distance (in blocks) on ground that the mob will search within to find a random position to move to. Must be at least 1.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.00",
                    "description": "Movement speed multiplier of the mob when using this AI Goal.",
                },
            ],
        },
        "minecraft:behavior.play_dead": {
            "description": "Allows this entity to pretend to be dead to avoid being targeted by attackers.",
            "children": [
                {
                    "name": "apply_regeneration",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether the mob will receive the regeneration effect while playing dead.",
                },
                {
                    "name": "damage_sources",
                    "type": "Array",
                    "defaultValue": "all",
                    "description": "The list of Entity Damage Sources that will cause this mob to play dead.",
                },
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "The amount of time the mob will remain playing dead (in seconds).",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The list of other triggers that are required for the mob to activate play dead",
                },
                {
                    "name": "force_below_health",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The amount of health at which damage will cause the mob to play dead.",
                },
                {
                    "name": "random_damage_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[0, 0]",
                    "description": "The range of damage that may cause the goal to start depending on randomness. Damage taken below the min will never cause the goal to start. Damage taken above the max will always cause the goal to start.",
                },
                {
                    "name": "random_start_chance",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "The likelihood of this goal starting upon taking damage.",
                },
            ],
        },
        "minecraft:behavior.raid_garden": {
            "description": "Allows the mob to eat/raid crops out of farms until they are full.",
            "children": [
                {
                    "name": "blocks",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Blocks that the mob is looking for to eat/raid",
                },
                {
                    "name": "eat_delay",
                    "type": "Integer",
                    "defaultValue": "2",
                    "description": "Time in seconds between each time it eats/raids",
                },
                {
                    "name": "full_delay",
                    "type": "Integer",
                    "defaultValue": "100",
                    "description": "Amount of time in seconds before this mob wants to eat/raid again after eating its maximum",
                },
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "initial_eat_delay",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Time in seconds before starting to eat/raid once it arrives at it",
                },
                {
                    "name": "max_to_eat",
                    "type": "Integer",
                    "defaultValue": "6",
                    "description": "Maximum number of crops this entity wants to eat/raid. If set to zero or less then it doesn't have a maximum",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Distance in blocks the mob will look for crops to eat",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.ram_attack": {
            "description": "Allows this entity to damage a target by using a running attack.",
            "children": [
                {
                    "name": "baby_knockback_modifier",
                    "type": "Decimal",
                    "defaultValue": "0.333333",
                    "description": "The modifier to knockback that babies have.",
                },
                {
                    "name": "cooldown_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[10, 20]",
                    "description": "Minimum and maximum cooldown time-range (positive, in seconds) between each attempted ram attack.",
                },
                {
                    "name": "knockback_force",
                    "type": "Decimal",
                    "defaultValue": "5.000000",
                    "description": "The force of the knockback of the ram attack.",
                },
                {
                    "name": "knockback_height",
                    "type": "Decimal",
                    "defaultValue": "0.100000",
                    "description": "The height of the knockback of the ram attack.",
                },
                {
                    "name": "min_ram_distance",
                    "type": "Decimal",
                    "defaultValue": "0.000000",
                    "description": "The minimum distance at which the mob can start a ram attack.",
                },
                {
                    "name": "on_start",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "The event to trigger when attacking",
                },
                {
                    "name": "pre_ram_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The sound to play when an entity is about to perform a ram attack.",
                },
                {
                    "name": "ram_distance",
                    "type": "Decimal",
                    "defaultValue": "0.000000",
                    "description": "The distance at which the mob start to run with ram speed.",
                },
                {
                    "name": "ram_impact_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The sound to play when an entity is impacting on a ram attack.",
                },
                {
                    "name": "ram_speed",
                    "type": "Decimal",
                    "defaultValue": "2.000000",
                    "description": "Sets the entity's speed when charging toward the target.",
                },
                {
                    "name": "run_speed",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "Sets the entity's speed when running toward the target.",
                },
            ],
        },
        "minecraft:behavior.random_breach": {
            "description": "Allows the mob to randomly break surface of the water.",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "interval",
                    "type": "Integer",
                    "defaultValue": "120",
                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "xz_dist",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                },
                {
                    "name": "y_dist",
                    "type": "Integer",
                    "defaultValue": "7",
                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                },
            ],
        },
        "minecraft:behavior.random_fly": {
            "description": "Allows a mob to randomly fly around.",
            "children": [
                {
                    "name": "can_land_on_trees",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the mob can stop flying and land on a tree instead of the ground",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "xz_dist",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                },
                {
                    "name": "y_dist",
                    "type": "Integer",
                    "defaultValue": "7",
                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                },
            ],
        },
        "minecraft:behavior.random_hover": {
            "description": "Allows the mob to hover around randomly, close to the surface",
            "children": [
                {
                    "name": "hover_height",
                    "type": "Range [a, b]",
                    "defaultValue": "",
                    "description": "The height above the surface which the mob will try to maintain",
                },
                {
                    "name": "interval",
                    "type": "Integer",
                    "defaultValue": "120",
                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "xz_dist",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                },
                {
                    "name": "y_dist",
                    "type": "Integer",
                    "defaultValue": "7",
                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                },
                {
                    "name": "y_offset",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Height in blocks to add to the selected target position",
                },
            ],
        },
        "minecraft:behavior.random_look_around": {
            "description": "Allows the mob to randomly look around.",
            "children": [
                {
                    "name": "look_time",
                    "type": "Range [a, b]",
                    "defaultValue": "[2, 4]",
                    "description": "The range of time in seconds the mob will stay looking in a random direction before looking elsewhere",
                },
                {
                    "name": "max_angle_of_view_horizontal",
                    "type": "Integer",
                    "defaultValue": "30",
                    "description": "The rightmost angle a mob can look at on the horizontal plane with respect to its initial facing direction.",
                },
                {
                    "name": "min_angle_of_view_horizontal",
                    "type": "Integer",
                    "defaultValue": "-30",
                    "description": "The leftmost angle a mob can look at on the horizontal plane with respect to its initial facing direction.",
                },
            ],
        },
        "minecraft:behavior.random_look_around_and_sit": {
            "description": "Allows the mob to randomly sit and look around for a duration. Note: Must have a sitting animation set up to use this.",
            "children": [
                {
                    "name": "continue_if_leashed",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If the goal should continue to be used as long as the mob is leashed.",
                },
                {
                    "name": "continue_sitting_on_reload",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "The mob will stay sitting on reload.",
                },
                {
                    "name": "max_angle_of_view_horizontal",
                    "type": "Decimal",
                    "defaultValue": "30.0",
                    "description": "The rightmost angle a mob can look at on the horizontal plane with respect to its initial facing direction.",
                },
                {
                    "name": "max_look_count",
                    "type": "Integer",
                    "defaultValue": "2",
                    "description": "The max amount of unique looks a mob will have while looking around.",
                },
                {
                    "name": "max_look_time",
                    "type": "Integer",
                    "defaultValue": "40",
                    "description": "The max amount of time (in ticks) a mob will stay looking at a direction while looking around.",
                },
                {
                    "name": "min_angle_of_view_horizontal",
                    "type": "Decimal",
                    "defaultValue": "-30.0",
                    "description": "The leftmost angle a mob can look at on the horizontal plane with respect to its initial facing direction.",
                },
                {
                    "name": "min_look_count",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The min amount of unique looks a mob will have while looking around.",
                },
                {
                    "name": "min_look_time",
                    "type": "Integer",
                    "defaultValue": "20",
                    "description": "The min amount of time (in ticks) a mob will stay looking at a direction while looking around.",
                },
                {
                    "name": "probability",
                    "type": "Decimal",
                    "defaultValue": "0.02",
                    "description": "The probability of randomly looking around/sitting.",
                },
                {
                    "name": "random_look_around_cooldown",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The cooldown in seconds before the goal can be used again.",
                },
            ],
        },
        "minecraft:behavior.random_search_and_dig": {
            "description": "Allows this entity to locate a random target block that it can path find to. Once found, the entity will move towards it and dig up an item. [Default target block types: Dirt, Grass, Podzol, DirtWithRoots, MossBlock, Mud, MuddyMangroveRoots].",
            "children": [
                {
                    "name": "cooldown_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[0.000000, 0.000000]",
                    "description": "Goal cooldown range in seconds.",
                },
                {
                    "name": "digging_duration_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[0.000000, 0.000000]",
                    "description": "Digging duration in seconds.",
                },
                {
                    "name": "find_valid_position_retries",
                    "type": "Decimal",
                    "defaultValue": "0.000000",
                    "description": "Amount of retries to find a valid target position within search range.",
                },
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "1.500000",
                    "description": "Distance in blocks within the entity to considers it has reached it's target position.",
                },
                {
                    "name": "item_table",
                    "type": "String",
                    "defaultValue": "",
                    "description": "File path relative to the resource pack root for items to spawn list (loot table format).",
                },
                {
                    "name": "on_digging_start",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run when the goal ends searching has begins digging.",
                },
                {
                    "name": "on_fail_during_digging",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run when the goal failed while in digging state.",
                },
                {
                    "name": "on_fail_during_searching",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run when the goal failed while in searching state.",
                },
                {
                    "name": "on_item_found",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run when the goal find a item.",
                },
                {
                    "name": "on_searching_start",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run when the goal starts searching.",
                },
                {
                    "name": "on_success",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run when searching and digging has ended.",
                },
                {
                    "name": "search_range_xz",
                    "type": "Decimal",
                    "defaultValue": "0.000000",
                    "description": "Width and length of the volume around the entity used to find a valid target position",
                },
                {
                    "name": "search_range_y",
                    "type": "Decimal",
                    "defaultValue": "0.000000",
                    "description": "Height of the volume around the entity used to find a valid target position",
                },
                {
                    "name": "spawn_item_after_seconds",
                    "type": "Decimal",
                    "defaultValue": "0.000000",
                    "description": "Digging duration before spawning item in seconds.",
                },
                {
                    "name": "spawn_item_pos_offset",
                    "type": "Decimal",
                    "defaultValue": "0.000000",
                    "description": "Distance to offset the item's spawn location in the direction the mob is facing.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "Searching movement speed multiplier.",
                },
                {
                    "name": "target_blocks",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of target block types the goal will look to dig on. Overrides the default list.",
                },
                {
                    "name": "target_dig_position_offset",
                    "type": "Decimal",
                    "defaultValue": "2.250000",
                    "description": "Dig target position offset from the feet position of the mob in their facing direction.",
                },
            ],
        },
        "minecraft:behavior.random_sitting": {
            "description": "Allows the mob to randomly sit for a duration.",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "min_sit_time",
                    "type": "Decimal",
                    "defaultValue": "10",
                    "description": "The minimum amount of time in seconds before the mob can stand back up",
                },
                {
                    "name": "start_chance",
                    "type": "Decimal",
                    "defaultValue": "0.1",
                    "description": "This is the chance that the mob will start this goal, from 0 to 1",
                },
                {
                    "name": "stop_chance",
                    "type": "Decimal",
                    "defaultValue": "0.3",
                    "description": "This is the chance that the mob will stop this goal, from 0 to 1",
                },
            ],
        },
        "minecraft:behavior.random_stroll": {
            "description": "Allows a mob to randomly stroll around.",
            "children": [
                {
                    "name": "interval",
                    "type": "Integer",
                    "defaultValue": "120",
                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "xz_dist",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                },
                {
                    "name": "y_dist",
                    "type": "Integer",
                    "defaultValue": "7",
                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                },
            ],
        },
        "minecraft:behavior.random_swim": {
            "description": "Allows an entity to randomly move through water",
            "children": [
                {
                    "name": "avoid_surface",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the mob will avoid surface water blocks by swimming below them",
                },
                {
                    "name": "interval",
                    "type": "Integer",
                    "defaultValue": "120",
                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "xz_dist",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                },
                {
                    "name": "y_dist",
                    "type": "Integer",
                    "defaultValue": "7",
                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                },
            ],
        },
        "minecraft:behavior.ranged_attack": {
            "description": "Allows an entity to attack by using ranged shots. \"charge_shoot_trigger\" must be greater than 0 to enable charged up burst-shot attacks. Requires minecraft:shooter to define projectile behaviour.",
            "children": [
                {
                    "name": "attack_interval",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Alternative to \"attack_interval_min\" & \"attack_interval_max\". Consistent reload-time (in seconds), when not using a charged shot. Does not scale with target-distance.",
                },
                {
                    "name": "attack_interval_max",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Maximum bound for reload-time range (in seconds), when not using a charged shot. Reload-time range scales with target-distance.",
                },
                {
                    "name": "attack_interval_min",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Minimum bound for reload-time range (in seconds), when not using a charged shot. Reload-time range scales with target-distance.",
                },
                {
                    "name": "attack_radius",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Minimum distance to target before this entity will attempt to shoot.",
                },
                {
                    "name": "attack_radius_min",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Minimum distance the target can be for this mob to fire. If the target is closer, this mob will move first before firing",
                },
                {
                    "name": "burst_interval",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Time (in seconds) between each individual shot when firing a burst of shots from a charged up attack.",
                },
                {
                    "name": "burst_shots",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Number of shots fired every time the attacking entity uses a charged up attack.",
                },
                {
                    "name": "charge_charged_trigger",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Time (in seconds, then add \"charge_shoot_trigger\"), before a charged up attack is done charging. Charge-time decays while target is not in sight.",
                },
                {
                    "name": "charge_shoot_trigger",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Amount of time (in seconds, then doubled) a charged shot must be charging before reloading burst shots. Charge-time decays while target is not in sight.",
                },
                {
                    "name": "ranged_fov",
                    "type": "Decimal",
                    "defaultValue": "90",
                    "description": "Field of view (in degrees) when using sensing to detect a target for attack.",
                },
                {
                    "name": "set_persistent",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the actor to be set to persist upon targeting a player",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "During attack behavior, this multiplier modifies the entity's speed when moving toward the target.",
                },
                {
                    "name": "swing",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If a swing animation (using variable.attack_time) exists, this causes the actor to swing their arm(s) upon firing the ranged attack.",
                },
                {
                    "name": "target_in_sight_time",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Minimum amount of time (in seconds) the attacking entity needs to see the target before moving toward it.",
                },
                {
                    "name": "x_max_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.",
                },
                {
                    "name": "y_max_head_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate its head while trying to look at the target.",
                },
            ],
        },
        "minecraft:behavior.rise_to_liquid_level": {
            "description": "Allows the mob to stay at a certain level when in liquid.",
            "children": [
                {
                    "name": "liquid_y_offset",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Target distance down from the liquid surface. i.e. Positive values move the target Y down.",
                },
                {
                    "name": "rise_delta",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Movement up in Y per tick when below the liquid surface.",
                },
                {
                    "name": "sink_delta",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Movement down in Y per tick when above the liquid surface.",
                },
            ],
        },
        "minecraft:behavior.roar": {
            "description": "Allows this entity to roar at another entity based on data in minecraft:anger_level. Once the anger threshold specified in minecraft:anger_level has been reached, this entity will roar for the specified amount of time, look at the other entity, apply anger boost towards it, and finally target it.",
            "children": [
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "The amount of time to roar for.",
                },
            ],
        },
        "minecraft:behavior.roll": {
            "description": "This allows the mob to roll forward.",
            "children": [
                {
                    "name": "probability",
                    "type": "Decimal",
                    "defaultValue": "[1.0]",
                    "description": "The probability that the mob will use the goal.",
                },
            ],
        },
        "minecraft:behavior.run_around_like_crazy": {
            "description": "Allows the mob to run around aimlessly.",
            "children": [
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.scared": {
            "description": "Allows the a mob to become scared when the weather outside is thundering",
            "children": [
                {
                    "name": "sound_interval",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The interval in which a sound will play when active in a 1/delay chance to kick off",
                },
            ],
        },
        "minecraft:behavior.send_event": {
            "description": "Allows the mob to send an event to another mob.",
            "children": [
                {
                    "name": "cast_duration",
                    "type": "Decimal",
                    "defaultValue": "Total delay of the steps",
                    "description": "Time in seconds for the entire event sending process",
                },
                {
                    "name": "look_at_target",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the mob will face the entity it sends an event to",
                },
                {
                    "name": "sequence",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of events to send",
                    "children": [
                        {
                            "name": "base_delay",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "Amount of time in seconds before starting this step",
                        },
                        {
                            "name": "event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The event to send to the entity",
                        },
                        {
                            "name": "sound_event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The sound event to play when this step happens",
                        },
                    ],
                },
            ],
        },
        "minecraft:behavior.share_items": {
            "description": "Allows the mob to give items it has to others.",
            "children": [
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of entities this mob will share items with",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this entry in the list valid",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "Maximum distance this mob can be away to be a valid choice",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob has to be visible to be a valid choice",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Decimal",
                            "defaultValue": "3.0",
                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                        {
                            "name": "sprint_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                        },
                        {
                            "name": "walk_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                        },
                    ],
                },
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "max_dist",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Maximum distance in blocks this mob will look for entities to share items with",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.skeleton_horse_trap": {
            "description": "Allows Equine mobs to be Horse Traps and be triggered like them, spawning a lightning bolt and a bunch of horses when a player is nearby. Can only be used by Horses, Mules, Donkeys and Skeleton Horses.",
            "children": [
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Amount of time in seconds the trap exists. After this amount of time is elapsed, the trap is removed from the world if it hasn't been activated",
                },
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Distance in blocks that the player has to be within to trigger the horse trap",
                },
            ],
        },
        "minecraft:behavior.sleep": {
            "description": "Allows mobs that own a bed to in a village to move to and sleep in it.",
            "children": [
                {
                    "name": "can_sleep_while_riding",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob will be able to use the sleep goal if riding something",
                },
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "sleep_collider_height",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The height of the mob's collider while sleeping",
                },
                {
                    "name": "sleep_collider_width",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The width of the mob's collider while sleeping",
                },
                {
                    "name": "sleep_y_offset",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The y offset of the mob's collider while sleeping",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "timeout_cooldown",
                    "type": "Decimal",
                    "defaultValue": "8.0",
                    "description": "The cooldown time in seconds before the goal can be reused after a internal failure or timeout condition",
                },
            ],
        },
        "minecraft:behavior.slime_attack": {
            "description": "Causes the entity to grow tired every once in a while, while attacking.",
            "children": [
                {
                    "name": "set_persistent",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the actor to be set to persist upon targeting a player",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "During attack behavior, this multiplier modifies the entity's speed when moving toward the target.",
                },
                {
                    "name": "x_max_rotation",
                    "type": "Decimal",
                    "defaultValue": "10",
                    "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.",
                },
                {
                    "name": "y_max_rotation",
                    "type": "Decimal",
                    "defaultValue": "10",
                    "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate while trying to look at the target.",
                },
            ],
        },
        "minecraft:behavior.slime_float": {
            "description": "Allow slimes to float in water / lava. Can only be used by Slime and Magma Cubes.",
            "children": [
                {
                    "name": "jump_chance_percentage",
                    "type": "Decimal",
                    "defaultValue": "0.8",
                    "description": "Percent chance a slime or magma cube has to jump while in water / lava.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.2",
                    "description": "Determines the multiplier the entity's speed is modified by when moving through water / lava.",
                },
            ],
        },
        "minecraft:behavior.slime_keep_on_jumping": {
            "description": "Allows the entity to continuously jump around like a slime.",
            "children": [
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Determines the multiplier this entity's speed is modified by when jumping around.",
                },
            ],
        },
        "minecraft:behavior.slime_random_direction": {
            "description": "Allows the entity to move in random directions like a slime.",
            "children": [
                {
                    "name": "add_random_time_range",
                    "type": "Integer",
                    "defaultValue": "3",
                    "description": "Additional time (in whole seconds), chosen randomly in the range of [0, \"add_random_time_range\"], to add to \"min_change_direction_time\".",
                },
                {
                    "name": "min_change_direction_time",
                    "type": "Decimal",
                    "defaultValue": "2",
                    "description": "Constant minimum time (in seconds) to wait before choosing a new direction.",
                },
                {
                    "name": "turn_range",
                    "type": "Integer",
                    "defaultValue": "360",
                    "description": "Maximum rotation angle range (in degrees) when randomly choosing a new direction.",
                },
            ],
        },
        "minecraft:behavior.snacking": {
            "description": "Allows the mob to take a load off and snack on food that it found nearby.",
            "children": [
                {
                    "name": "items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Items that we are interested in snacking on",
                },
                {
                    "name": "snacking_cooldown",
                    "type": "Decimal",
                    "defaultValue": "7.5",
                    "description": "The cooldown time in seconds before the mob is able to snack again",
                },
                {
                    "name": "snacking_cooldown_min",
                    "type": "Decimal",
                    "defaultValue": "0.5f",
                    "description": "The minimum time in seconds before the mob is able to snack again",
                },
                {
                    "name": "snacking_stop_chance",
                    "type": "Decimal",
                    "defaultValue": "0.0017",
                    "description": "This is the chance that the mob will stop snacking, from 0 to 1",
                },
            ],
        },
        "minecraft:behavior.sneeze": {
            "description": "Allows the mob to stop and sneeze possibly startling nearby mobs and dropping an item.",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "drop_item_chance",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The probability that the mob will drop an item when it sneezes.",
                },
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of entity types this mob will startle (cause to jump) when it sneezes.",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this entry in the list valid",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "Maximum distance this mob can be away to be a valid choice",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob has to be visible to be a valid choice",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Decimal",
                            "defaultValue": "3.0",
                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                        {
                            "name": "sprint_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                        },
                        {
                            "name": "walk_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                        },
                    ],
                },
                {
                    "name": "loot_table",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Loot table to select dropped items from.",
                },
                {
                    "name": "prepare_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sound to play when the sneeze is about to happen.",
                },
                {
                    "name": "prepare_time",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The time in seconds that the mob takes to prepare to sneeze (while the prepare_sound is playing).",
                },
                {
                    "name": "probability",
                    "type": "Decimal",
                    "defaultValue": "0.02",
                    "description": "The probability of sneezing. A value of 1.00 is 100%",
                },
                {
                    "name": "sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sound to play when the sneeze occurs.",
                },
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Distance in blocks that mobs will be startled.",
                },
            ],
        },
        "minecraft:behavior.sniff": {
            "description": "Allows this entity to detect the nearest player within \"sniffing_radius\" and update its \"minecraft:suspect_tracking\" component state",
            "children": [
                {
                    "name": "cooldown_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[3.0, 10.0]",
                    "description": "Cooldown range between sniffs in seconds",
                },
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Sniffing duration in seconds",
                },
                {
                    "name": "sniffing_radius",
                    "type": "Decimal",
                    "defaultValue": "5.0",
                    "description": "Mob detection radius",
                },
                {
                    "name": "suspicion_radius_horizontal",
                    "type": "Decimal",
                    "defaultValue": "3.0",
                    "description": "Mob suspicion horizontal radius. When a player is within this radius horizontally, the anger level towards that player is increased",
                },
                {
                    "name": "suspicion_radius_vertical",
                    "type": "Decimal",
                    "defaultValue": "3.0",
                    "description": "Mob suspicion vertical radius. When a player is within this radius vertically, the anger level towards that player is increased",
                },
            ],
        },
        "minecraft:behavior.sonic_boom": {
            "description": "Allows this entity to perform a 'sonic boom' ranged attack",
            "children": [
                {
                    "name": "attack_cooldown",
                    "type": "Decimal",
                    "defaultValue": "5.00",
                    "description": "Cooldown in seconds required after using this attack until the entity can use sonic boom again.",
                },
                {
                    "name": "attack_damage",
                    "type": "Decimal",
                    "defaultValue": "30.00",
                    "description": "Attack damage of the sonic boom.",
                },
                {
                    "name": "attack_range_horizontal",
                    "type": "Decimal",
                    "defaultValue": "15.00",
                    "description": "Horizontal range (in blocks) at which the sonic boom can damage the target.",
                },
                {
                    "name": "attack_range_vertical",
                    "type": "Decimal",
                    "defaultValue": "20.00",
                    "description": "Vertical range (in blocks) at which the sonic boom can damage the target.",
                },
                {
                    "name": "attack_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sound event for the attack.",
                },
                {
                    "name": "charge_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sound event for the charge up.",
                },
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "3.00",
                    "description": "Goal duration in seconds",
                },
                {
                    "name": "duration_until_attack_sound",
                    "type": "Decimal",
                    "defaultValue": "1.70",
                    "description": "Duration in seconds until the attack sound is played.",
                },
                {
                    "name": "knockback_height_cap",
                    "type": "Decimal",
                    "defaultValue": "0.00",
                    "description": "Height cap of the attack knockback's vertical delta.",
                },
                {
                    "name": "knockback_horizontal_strength",
                    "type": "Decimal",
                    "defaultValue": "0.00",
                    "description": "Horizontal strength of the attack's knockback applied to the attack target.",
                },
                {
                    "name": "knockback_vertical_strength",
                    "type": "Decimal",
                    "defaultValue": "0.00",
                    "description": "Vertical strength of the attack's knockback applied to the attack target.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.00",
                    "description": "This multiplier modifies the attacking entity's speed when moving toward the target.",
                },
            ],
        },
        "minecraft:behavior.stalk_and_pounce_on_target": {
            "description": "Allows a mob to stalk a target, then once within range pounce onto a target, on success the target will be attacked dealing damage defined by the attack component. On failure, the mob will risk getting stuck",
            "children": [
                {
                    "name": "interest_time",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "The amount of time the mob will be interested before pouncing. This happens when the mob is within range of pouncing",
                },
                {
                    "name": "leap_distance",
                    "type": "Decimal",
                    "defaultValue": "0.8",
                    "description": "The distance in blocks the mob jumps in the direction of its target",
                },
                {
                    "name": "leap_height",
                    "type": "Decimal",
                    "defaultValue": "0.9",
                    "description": "The height in blocks the mob jumps when leaping at its target",
                },
                {
                    "name": "max_stalk_dist",
                    "type": "Decimal",
                    "defaultValue": "10.0",
                    "description": "The maximum distance away a target can be before the mob gives up on stalking",
                },
                {
                    "name": "pounce_max_dist",
                    "type": "Decimal",
                    "defaultValue": "5.0",
                    "description": "The maximum distance away from the target in blocks to begin pouncing at the target",
                },
                {
                    "name": "set_persistent",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the actor to be set to persist upon targeting a player",
                },
                {
                    "name": "stalk_speed",
                    "type": "Decimal",
                    "defaultValue": "1.2",
                    "description": "The movement speed in which you stalk your target",
                },
                {
                    "name": "strike_dist",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "The max distance away from the target when landing from the pounce that will still result in damaging the target",
                },
                {
                    "name": "stuck_time",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "The amount of time the mob will be stuck if they fail and land on a block they can be stuck on",
                },
            ],
        },
        "minecraft:behavior.stay_near_noteblock": {
            "description": "The entity will attempt to toss the items from its inventory to a nearby recently played noteblock.",
            "children": [
                {
                    "name": "listen_time",
                    "type": "Integer",
                    "defaultValue": "0.000000",
                    "description": "Sets the time an entity should stay near a noteblock after hearing it.",
                },
                {
                    "name": "speed",
                    "type": "Decimal",
                    "defaultValue": "1.000000",
                    "description": "Sets the entity's speed when moving toward the block.",
                },
                {
                    "name": "start_distance",
                    "type": "Decimal",
                    "defaultValue": "10.000000",
                    "description": "Sets the distance the entity needs to be away from the block to attempt to start the goal.",
                },
                {
                    "name": "stop_distance",
                    "type": "Decimal",
                    "defaultValue": "2.000000",
                    "description": "Sets the distance from the block the entity will attempt to reach.",
                },
            ],
        },
        "minecraft:behavior.stomp_attack": {
            "description": "Allows an entity to attack using stomp AoE damage behavior.",
            "children": [
                {
                    "name": "attack_once",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the entity to use this attack behavior, only once EVER.",
                },
                {
                    "name": "attack_types",
                    "type": "String",
                    "defaultValue": "N/A",
                    "description": "Defines the entity types this entity will attack.",
                },
                {
                    "name": "can_spread_on_fire",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If the entity is on fire, this allows the entity's target to catch on fire after being hit.",
                },
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Cooldown time (in seconds) between attacks.",
                },
                {
                    "name": "inner_boundary_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.25",
                    "description": "Time (in seconds) to add to attack path recalculation when the target is beyond the \"path_inner_boundary\".",
                },
                {
                    "name": "max_dist",
                    "type": "Decimal",
                    "defaultValue": "N/A",
                    "description": "Unused. No effect on \"minecraft:behavior.melee_attack\".",
                },
                {
                    "name": "max_path_time",
                    "type": "Decimal",
                    "defaultValue": "0.55",
                    "description": "Maximum base time (in seconds) to recalculate new attack path to target (before increases applied).",
                },
                {
                    "name": "min_path_time",
                    "type": "Decimal",
                    "defaultValue": "0.2",
                    "description": "Minimum base time (in seconds) to recalculate new attack path to target (before increases applied).",
                },
                {
                    "name": "no_damage_range_multiplier",
                    "type": "Decimal",
                    "defaultValue": "2",
                    "description": "Multiplied with the final AoE damage range to determine a no damage range. The stomp attack will go on cooldown if target is in this no damage range.",
                },
                {
                    "name": "on_attack",
                    "type": "Trigger",
                    "defaultValue": "N/A",
                    "description": "Defines the event to trigger when this entity successfully attacks.",
                },
                {
                    "name": "outer_boundary_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Time (in seconds) to add to attack path recalculation when the target is beyond the \"path_outer_boundary\".",
                },
                {
                    "name": "path_fail_time_increase",
                    "type": "Decimal",
                    "defaultValue": "0.75",
                    "description": "Time (in seconds) to add to attack path recalculation when this entity cannot move along the current path.",
                },
                {
                    "name": "path_inner_boundary",
                    "type": "Decimal",
                    "defaultValue": "16",
                    "description": "Distance at which to increase attack path recalculation by \"inner_boundary_tick_increase\".",
                },
                {
                    "name": "path_outer_boundary",
                    "type": "Decimal",
                    "defaultValue": "32",
                    "description": "Distance at which to increase attack path recalculation by \"outer_boundary_tick_increase\".",
                },
                {
                    "name": "random_stop_interval",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "This entity will have a 1 in N chance to stop it's current attack, where N = \"random_stop_interval\".",
                },
                {
                    "name": "reach_multiplier",
                    "type": "Decimal",
                    "defaultValue": "2",
                    "description": "Used with the base size of the entity to determine minimum target-distance before trying to deal attack damage.",
                },
                {
                    "name": "require_complete_path",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Toggles (on/off) the need to have a full path from the entity to the target when using this melee attack behavior.",
                },
                {
                    "name": "set_persistent",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the actor to be set to persist upon targeting a player",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "This multiplier modifies the attacking entity's speed when moving toward the target.",
                },
                {
                    "name": "stomp_range_multiplier",
                    "type": "Decimal",
                    "defaultValue": "2",
                    "description": "Multiplied with the base size of the entity to determine stomp AoE damage range.",
                },
                {
                    "name": "target_dist",
                    "type": "Decimal",
                    "defaultValue": "N/a",
                    "description": "Unused. No effect on \"minecraft:behavior.melee_attack\".",
                },
                {
                    "name": "track_target",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Allows the entity to track the attack target, even if the entity has no sensing.",
                },
                {
                    "name": "x_max_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.",
                },
                {
                    "name": "y_max_head_rotation",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate its head while trying to look at the target.",
                },
            ],
        },
        "minecraft:behavior.stomp_turtle_egg": {
            "description": "Allows this mob to stomp turtle eggs",
            "children": [
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "interval",
                    "type": "Integer",
                    "defaultValue": "120",
                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Height in blocks the mob will look for turtle eggs to move towards",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks it will look for turtle eggs to move towards",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
            ],
        },
        "minecraft:behavior.stroll_towards_village": {
            "description": "Allows the mob to move into a random location within a village within the search range.",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Time in seconds the mob has to wait before using the goal again",
                },
                {
                    "name": "goal_radius",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                },
                {
                    "name": "search_range",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The distance in blocks to search for points inside villages. If <= 0, find the closest village regardless of distance.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "start_chance",
                    "type": "Decimal",
                    "defaultValue": "0.1",
                    "description": "This is the chance that the mob will start this goal, from 0 to 1",
                },
            ],
        },
        "minecraft:behavior.summon_entity": {
            "description": "Allows the mob to attack the player by summoning other entities.",
            "children": [
                {
                    "name": "summon_choices",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of spells for the mob to use to summon entities. Each spell has the following parameters:",
                    "children": [
                        {
                            "name": "cast_duration",
                            "type": "Decimal",
                            "defaultValue": "Total delay of the steps",
                            "description": "Time in seconds the spell casting will take",
                        },
                        {
                            "name": "cooldown_time",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "Time in seconds the mob has to wait before using the spell again",
                        },
                        {
                            "name": "do_casting",
                            "type": "Boolean",
                            "defaultValue": "true",
                            "description": "If true, the mob will do the casting animations and render spell particles",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "",
                        },
                        {
                            "name": "max_activation_range",
                            "type": "Decimal",
                            "defaultValue": "32.0",
                            "description": "Upper bound of the activation distance in blocks for this spell, must not be negative.",
                        },
                        {
                            "name": "min_activation_range",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Lower bound of the activation distance in blocks for this spell, must not be negative.",
                        },
                        {
                            "name": "particle_color",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "The color of the particles for this spell",
                        },
                        {
                            "name": "sequence",
                            "type": "List",
                            "defaultValue": "",
                            "description": "List of steps for the spell. Each step has the following parameters:",
                            "children": [
                                {
                                    "name": "base_delay",
                                    "type": "Decimal",
                                    "defaultValue": "0.0",
                                    "description": "Amount of time in seconds to wait before this step starts",
                                },
                                {
                                    "name": "delay_per_summon",
                                    "type": "Decimal",
                                    "defaultValue": "0.0",
                                    "description": "Amount of time in seconds before each entity is summoned in this step",
                                },
                                {
                                    "name": "entity_lifespan",
                                    "type": "Decimal",
                                    "defaultValue": "-1.0",
                                    "description": "Amount of time in seconds that the spawned entity will be alive for. A value of -1.0 means it will remain alive for as long as it can",
                                },
                                {
                                    "name": "entity_type",
                                    "type": "String",
                                    "defaultValue": "",
                                    "description": "The entity type of the entities we will spawn in this step",
                                },
                                {
                                    "name": "num_entities_spawned",
                                    "type": "Integer",
                                    "defaultValue": "1",
                                    "description": "Number of entities that will be spawned in this step",
                                },
                                {
                                    "name": "shape",
                                    "type": "String",
                                    "defaultValue": "line",
                                    "description": "The base shape of this step. Valid values are circle and line",
                                },
                                {
                                    "name": "size",
                                    "type": "Decimal",
                                    "defaultValue": "1.0",
                                    "description": "The base size of the entity",
                                },
                                {
                                    "name": "sound_event",
                                    "type": "String",
                                    "defaultValue": "",
                                    "description": "The sound event to play for this step",
                                },
                                {
                                    "name": "summon_cap",
                                    "type": "Integer",
                                    "defaultValue": "0",
                                    "description": "Maximum number of summoned entities at any given time",
                                },
                                {
                                    "name": "summon_cap_radius",
                                    "type": "Decimal",
                                    "defaultValue": "0.0",
                                    "description": "",
                                },
                                {
                                    "name": "target",
                                    "type": "String",
                                    "defaultValue": "self",
                                    "description": "The target of the spell. This is where the spell will start (line will start here, circle will be centered here)",
                                },
                            ],
                        },
                        {
                            "name": "start_sound_event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The sound event to play when using this spell",
                        },
                        {
                            "name": "weight",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The weight of this spell. Controls how likely the mob is to choose this spell when casting one",
                        },
                    ],
                },
            ],
        },
        "minecraft:behavior.swell": {
            "description": "Allows the creeper to swell up when a player is nearby. It can only be used by Creepers.",
            "children": [
                {
                    "name": "start_distance",
                    "type": "Decimal",
                    "defaultValue": "10.0",
                    "description": "This mob starts swelling when a target is at least this many blocks away",
                },
                {
                    "name": "stop_distance",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "This mob stops swelling when a target has moved away at least this many blocks",
                },
            ],
        },
        "minecraft:behavior.swim_idle": {
            "description": "Allows the entity go idle, if swimming. Entity must be in water.",
            "children": [
                {
                    "name": "idle_time",
                    "type": "Decimal",
                    "defaultValue": "5",
                    "description": "Amount of time (in seconds) to stay idle.",
                },
                {
                    "name": "success_rate",
                    "type": "Decimal",
                    "defaultValue": "0.1",
                    "description": "Percent chance this entity will go idle, 1.0 = 100%.",
                },
            ],
        },
        "minecraft:behavior.swim_up_for_breath": {
            "description": "Allows the mob to try to move to air once it is close to running out of its total breathable supply. Requires \"minecraft:breathable\".",
            "children": [
                {
                    "name": "material_type",
                    "type": "String",
                    "defaultValue": "water",
                    "description": "The material the mob is traveling in. An air block will only be considered valid to move to with a block of this material below it. Options are: \"water\", \"lava\", or \"any\".",
                },
                {
                    "name": "search_height",
                    "type": "Integer",
                    "defaultValue": "16",
                    "description": "The height (in blocks) above the mob's current position that it will search for a valid air block to move to. If a valid block cannot be found, the mob will move to the position this many blocks above it.",
                },
                {
                    "name": "search_radius",
                    "type": "Integer",
                    "defaultValue": "4",
                    "description": "The radius (in blocks) around the mob's current position that it will search for a valid air block to move to.",
                },
                {
                    "name": "speed_mod",
                    "type": "Decimal",
                    "defaultValue": "1.40",
                    "description": "Movement speed multiplier of the mob when using this Goal.",
                },
            ],
        },
        "minecraft:behavior.swim_wander": {
            "description": "Allows the entity to wander around while swimming, when not path-finding.",
            "children": [
                {
                    "name": "interval",
                    "type": "Decimal",
                    "defaultValue": "0.00833",
                    "description": "Percent chance to start wandering, when not path-finding. 1 = 100%",
                },
                {
                    "name": "look_ahead",
                    "type": "Decimal",
                    "defaultValue": "5",
                    "description": "Distance to look ahead for obstacle avoidance, while wandering.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "This multiplier modifies the entity's speed when wandering.",
                },
                {
                    "name": "wander_time",
                    "type": "Decimal",
                    "defaultValue": "5",
                    "description": "Amount of time (in seconds) to wander after wandering behavior was successfully started.",
                },
            ],
        },
        "minecraft:behavior.swim_with_entity": {
            "description": "Allows the entity follow another entity. Both entities must be swimming [ie, in water].",
            "children": [
                {
                    "name": "catch_up_multiplier",
                    "type": "Decimal",
                    "defaultValue": "2.5",
                    "description": "The multiplier this entity's speed is modified by when matching another entity's direction.",
                },
                {
                    "name": "catch_up_threshold",
                    "type": "Decimal",
                    "defaultValue": "12",
                    "description": "Distance, from the entity being followed, at which this entity will speed up to reach that entity.",
                },
                {
                    "name": "chance_to_stop",
                    "type": "Decimal",
                    "defaultValue": "0.0333",
                    "description": "Percent chance to stop following the current entity, if they're riding another entity or they're not swimming. 1.0 = 100%",
                },
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Filters which types of entities are valid to follow.",
                },
                {
                    "name": "match_direction_threshold",
                    "type": "Decimal",
                    "defaultValue": "2",
                    "description": "Distance, from the entity being followed, at which this entity will try to match that entity's direction",
                },
                {
                    "name": "search_range",
                    "type": "Decimal",
                    "defaultValue": "20",
                    "description": "Radius around this entity to search for another entity to follow.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.5",
                    "description": "The multiplier this entity's speed is modified by when trying to catch up to the entity being followed.",
                },
                {
                    "name": "state_check_interval",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Time (in seconds) between checks to determine if this entity should catch up to the entity being followed or match the direction of the entity being followed.",
                },
                {
                    "name": "stop_distance",
                    "type": "Decimal",
                    "defaultValue": "5",
                    "description": "Distance, from the entity being followed, at which this entity will stop following that entity.",
                },
                {
                    "name": "success_rate",
                    "type": "Decimal",
                    "defaultValue": "0.1",
                    "description": "Percent chance to start following another entity, if not already doing so. 1.0 = 100%",
                },
            ],
        },
        "minecraft:behavior.swoop_attack": {
            "description": "Allows an entity to attack using swoop attack behavior; Ideal for use with flying mobs. The behavior ends if the entity has a horizontal collision or gets hit.",
            "children": [
                {
                    "name": "damage_reach",
                    "type": "Decimal",
                    "defaultValue": "0.2",
                    "description": "Added to the base size of the entity, to determine the target's maximum allowable distance, when trying to deal attack damage.",
                },
                {
                    "name": "delay_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[10, 20]",
                    "description": "Minimum and maximum cooldown time-range (in seconds) between each attempted swoop attack.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "During swoop attack behavior, this determines the multiplier the entity's speed is modified by when moving toward the target.",
                },
            ],
        },
        "minecraft:behavior.take_flower": {
            "description": "Allows the mob to accept flowers from another mob with the minecraft:offer_flower behavior.",
            "children": [
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Conditions that need to be met for the behavior to start.",
                },
                {
                    "name": "max_head_rotation_y",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the Y-axis, this entity can rotate its head while trying to look at the target.",
                },
                {
                    "name": "max_rotation_x",
                    "type": "Decimal",
                    "defaultValue": "30",
                    "description": "Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.",
                },
                {
                    "name": "max_wait_time",
                    "type": "Decimal",
                    "defaultValue": "20.00",
                    "description": "The maximum amount of time (in seconds) for the mob to randomly wait for before taking the flower.",
                },
                {
                    "name": "min_distance_to_target",
                    "type": "Decimal",
                    "defaultValue": "2.00",
                    "description": "Minimum distance (in blocks) for the entity to be considered having reached its target.",
                },
                {
                    "name": "min_wait_time",
                    "type": "Decimal",
                    "defaultValue": "4.00",
                    "description": "The minimum amount of time (in seconds) for the mob to randomly wait for before taking the flower.",
                },
                {
                    "name": "search_area",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[6, 2, 6]",
                    "description": "The dimensions of the AABB used to search for a potential mob to take a flower from.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.50",
                    "description": "Movement speed multiplier of the mob when using this AI Goal.",
                },
            ],
        },
        "minecraft:behavior.teleport_to_owner": {
            "description": "Allows an entity to teleport to its owner.",
            "children": [
                {
                    "name": "cooldown",
                    "type": "Decimal",
                    "defaultValue": "1.00",
                    "description": "The time in seconds that must pass for the entity to be able to try to teleport again.",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Conditions to be satisfied for the entity to teleport to its owner.",
                },
            ],
        },
        "minecraft:behavior.tempt": {
            "description": "Allows the mob to be tempted by food they like.",
            "children": [
                {
                    "name": "can_get_scared",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob can stop being tempted if the player moves too fast while close to this mob",
                },
                {
                    "name": "can_tempt_vertically",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, vertical distance to the player will be considered when tempting.",
                },
                {
                    "name": "can_tempt_while_ridden",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the mob can be tempted even if it has a passenger (i.e. if being ridden).",
                },
                {
                    "name": "items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of items this mob is tempted by",
                },
                {
                    "name": "sound_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "[0.0, 0.0]",
                    "description": "Range of random ticks to wait between tempt sounds.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "tempt_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sound to play while the mob is being tempted.",
                },
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Distance in blocks this mob can get tempted by a player holding an item they like",
                },
            ],
        },
        "minecraft:behavior.timer_flag_1": {
            "description": "Fires an event when this behavior starts, then waits for a duration before stopping. When stopping due to that timeout or due to being interrupted by another behavior, fires another event. query.timer_flag_1 will return 1.0 on both the client and server when this behavior is running, and 0.0 otherwise.",
            "children": [
                {
                    "name": "cooldown_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[10.000000, 10.000000]",
                    "description": "Goal cooldown range in seconds. If specified, the cooldown will have to elapse even before the goal can be selected for the first time.",
                },
                {
                    "name": "duration_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[2.000000, 2.000000]",
                    "description": "Goal duration range in seconds.",
                },
                {
                    "name": "on_end",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when the goal end.",
                },
                {
                    "name": "on_start",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when the goal starts.",
                },
            ],
        },
        "minecraft:behavior.timer_flag_2": {
            "description": "Fires an event when this behavior starts, then waits for a duration before stopping. When stopping due to that timeout or due to being interrupted by another behavior, fires another event. query.timer_flag_2 will return 1.0 on both the client and server when this behavior is running, and 0.0 otherwise.",
            "children": [
                {
                    "name": "cooldown_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[10.000000, 10.000000]",
                    "description": "Goal cooldown range in seconds. If specified, the cooldown will have to elapse even before the goal can be selected for the first time.",
                },
                {
                    "name": "duration_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[2.000000, 2.000000]",
                    "description": "Goal duration range in seconds.",
                },
                {
                    "name": "on_end",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when the goal end.",
                },
                {
                    "name": "on_start",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when the goal starts.",
                },
            ],
        },
        "minecraft:behavior.timer_flag_3": {
            "description": "Fires an event when this behavior starts, then waits for a duration before stopping. When stopping due to that timeout or due to being interrupted by another behavior, fires another event. query.timer_flag_3 will return 1.0 on both the client and server when this behavior is running, and 0.0 otherwise.",
            "children": [
                {
                    "name": "cooldown_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[10.000000, 10.000000]",
                    "description": "Goal cooldown range in seconds. If specified, the cooldown will have to elapse even before the goal can be selected for the first time.",
                },
                {
                    "name": "duration_range",
                    "type": "Range [a, b]",
                    "defaultValue": "[2.000000, 2.000000]",
                    "description": "Goal duration range in seconds.",
                },
                {
                    "name": "on_end",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when the goal end.",
                },
                {
                    "name": "on_start",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event(s) to run when the goal starts.",
                },
            ],
        },
        "minecraft:behavior.trade_interest": {
            "description": "Allows the mob to look at a player that is holding a tradable item.",
            "children": [
                {
                    "name": "carried_item_switch_time",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "The max time in seconds that the trader will hold an item before attempting to switch for a different item that takes the same trade",
                },
                {
                    "name": "cooldown",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "The time in seconds before the trader can use this goal again",
                },
                {
                    "name": "interest_time",
                    "type": "Decimal",
                    "defaultValue": "45.0",
                    "description": "The max time in seconds that the trader will be interested with showing its trade items",
                },
                {
                    "name": "remove_item_time",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The max time in seconds that the trader will wait when you no longer have items to trade",
                },
                {
                    "name": "within_radius",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Distance in blocks this mob can be interested by a player holding an item they like",
                },
            ],
        },
        "minecraft:behavior.trade_with_player": {
            "description": "Allows the player to trade with this mob. When the goal starts, it will stop the mob's navigation.",
            "children": [
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Conditions that need to be met for the behavior to start.",
                },
                {
                    "name": "max_distance_from_player",
                    "type": "Decimal",
                    "defaultValue": "8.00",
                    "description": "The max distance that the mob can be from the player before exiting the goal.",
                },
            ],
        },
        "minecraft:behavior.vex_copy_owner_target": {
            "description": "Allows the mob to target the same entity its owner is targeting.",
            "children": [
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of entities this mob can copy the owner from",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this entry in the list valid",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "Maximum distance this mob can be away to be a valid choice",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob has to be visible to be a valid choice",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Decimal",
                            "defaultValue": "3.0",
                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                        {
                            "name": "sprint_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                        },
                        {
                            "name": "walk_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                        },
                    ],
                },
            ],
        },
        "minecraft:behavior.wither_target_highest_damage": {
            "description": "Allows the wither to focus its attacks on whichever mob has dealt the most damage to it.",
            "children": [
                {
                    "name": "entity_types",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of entity types the wither takes into account to find who dealt the most damage to it",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "The amount of time in seconds that the mob has to wait before selecting a target of the same type again",
                        },
                        {
                            "name": "filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "Conditions that make this entry in the list valid",
                        },
                        {
                            "name": "max_dist",
                            "type": "Decimal",
                            "defaultValue": "16",
                            "description": "Maximum distance this mob can be away to be a valid choice",
                        },
                        {
                            "name": "must_see",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob has to be visible to be a valid choice",
                        },
                        {
                            "name": "must_see_forget_duration",
                            "type": "Decimal",
                            "defaultValue": "3.0",
                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                        },
                        {
                            "name": "reevaluate_description",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true, the mob will stop being targeted if it stops meeting any conditions.",
                        },
                        {
                            "name": "sprint_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                        },
                        {
                            "name": "walk_speed_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                        },
                    ],
                },
            ],
        },
        "minecraft:behavior.work": {
            "description": "Allows the NPC to use the POI",
            "children": [
                {
                    "name": "active_time",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The amount of ticks the NPC will stay in their the work location",
                },
                {
                    "name": "can_work_in_rain",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity can work when their jobsite POI is being rained on.",
                },
                {
                    "name": "goal_cooldown",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The amount of ticks the goal will be on cooldown before it can be used again",
                },
                {
                    "name": "on_arrival",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run when the mob reaches their jobsite.",
                },
                {
                    "name": "sound_delay_max",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The max interval in which a sound will play.",
                },
                {
                    "name": "sound_delay_min",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The min interval in which a sound will play.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.50",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "work_in_rain_tolerance",
                    "type": "Integer",
                    "defaultValue": "-1",
                    "description": "If \"can_work_in_rain\" is false, this is the maximum number of ticks left in the goal where rain will not interrupt the goal",
                },
            ],
        },
        "minecraft:behavior.work_composter": {
            "description": "Allows the NPC to use the composter POI to convert excess seeds into bone meal.",
            "children": [
                {
                    "name": "active_time",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The amount of ticks the NPC will stay in their the work location",
                },
                {
                    "name": "block_interaction_max",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The maximum number of times the mob will interact with the composter.",
                },
                {
                    "name": "can_empty_composter",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Determines whether the mob can empty a full composter.",
                },
                {
                    "name": "can_fill_composter",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Determines whether the mob can add items to a composter given that it is not full.",
                },
                {
                    "name": "can_work_in_rain",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity can work when their jobsite POI is being rained on.",
                },
                {
                    "name": "goal_cooldown",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The amount of ticks the goal will be on cooldown before it can be used again",
                },
                {
                    "name": "items_per_use_max",
                    "type": "Integer",
                    "defaultValue": "20",
                    "description": "The maximum number of items which can be added to the composter per block interaction.",
                },
                {
                    "name": "min_item_count",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "Limits the amount of each compostable item the mob can use. Any amount held over this number will be composted if possible",
                },
                {
                    "name": "on_arrival",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to run when the mob reaches their jobsite.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0.50",
                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                },
                {
                    "name": "use_block_max",
                    "type": "Integer",
                    "defaultValue": "200",
                    "description": "The maximum interval in which the mob will interact with the composter.",
                },
                {
                    "name": "use_block_min",
                    "type": "Integer",
                    "defaultValue": "100",
                    "description": "The minimum interval in which the mob will interact with the composter.",
                },
                {
                    "name": "work_in_rain_tolerance",
                    "type": "Integer",
                    "defaultValue": "-1",
                    "description": "If \"can_work_in_rain\" is false, this is the maximum number of ticks left in the goal where rain will not interrupt the goal",
                },
            ],
        },
    },
    "entityAttribute": {
        "minecraft:attack": {
            "description": "Defines an entity's melee attack and any additional effects on it.",
            "children": [
                {
                    "name": "damage",
                    "type": "Range [a, b]",
                    "defaultValue": "",
                    "description": "Range of the random amount of damage the melee attack deals. A negative value can heal the entity instead of hurting it",
                },
                {
                    "name": "effect_duration",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Duration in seconds of the status ailment applied to the damaged entity",
                },
                {
                    "name": "effect_name",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Identifier of the status ailment to apply to an entity attacked by this entity's melee attack",
                },
            ],
        },
        "minecraft:spell_effects": {
            "description": "Defines what mob effects to add and remove to the entity when adding this component.",
            "children": [
                {
                    "name": "add_effects",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of effects to add to this entity after adding this component",
                    "children": [
                        {
                            "name": "effect",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Effect to add to this entity. Includes 'duration' in seconds, 'amplifier' level, 'ambient' if it is to be considered an ambient effect, and 'visible' if the effect should be visible",
                        },
                    ],
                },
                {
                    "name": "remove_effects",
                    "type": "String",
                    "defaultValue": "",
                    "description": "List of identifiers of effects to be removed from this entity after adding this component",
                },
            ],
        },
        "minecraft:strength": {
            "description": "Defines the entity's strength to carry items.",
            "children": [
                {
                    "name": "max",
                    "type": "Integer",
                    "defaultValue": "5",
                    "description": "The maximum strength of this entity",
                },
                {
                    "name": "value",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The initial value of the strength",
                },
            ],
        },
    },
    "entityBuiltinEvent": {
        "minecraft:entity_born": "Event called on an entity that is spawned through two entities breeding.",
        "minecraft:entity_spawned": "Event called on an entity that is placed in the level.",
        "minecraft:entity_transformed": "Event called on an entity that transforms into another entity.",
        "minecraft:on_prime": "Event called on an entity whose fuse is lit and is ready to explode.",
    },
    "entityComponent": {
        "minecraft:addrider": {
            "description": "Adds a rider to the entity. Requires minecraft:rideable.",
            "children": [
                {
                    "name": "entity_type",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The entity type that will be riding this entity.",
                },
                {
                    "name": "spawn_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The spawn event that will be used when the riding entity is created.",
                },
            ],
        },
        "minecraft:admire_item": {
            "description": "Causes the mob to ignore attackable targets for a given duration.",
            "children": [
                {
                    "name": "cooldown_after_being_attacked",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Duration, in seconds, for which mob won't admire items if it was hurt",
                },
                {
                    "name": "duration",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "Duration, in seconds, that the mob is pacified.",
                },
            ],
        },
        "minecraft:ageable": {
            "description": "Adds a timer for the entity to grow up. It can be accelerated by giving the entity the items it likes as defined by feedItems.",
            "children": [
                {
                    "name": "drop_items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of items that the entity drops when it grows up.",
                },
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "1200.0",
                    "description": "Amount of time before the entity grows up, -1 for always a baby.",
                },
                {
                    "name": "feed_items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of items that can be fed to the entity. Includes 'item' for the item name and 'growth' to define how much time it grows up by.",
                },
                {
                    "name": "grow_up",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to run when this entity grows up.",
                },
                {
                    "name": "interact_filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "List of conditions to meet so that the entity can be fed.",
                },
                {
                    "name": "transform_to_item",
                    "type": "Item Description Properties",
                    "defaultValue": "",
                    "description": "The feed item used will transform to this item upon successful interaction. Format: itemName:auxValue",
                },
            ],
        },
        "minecraft:anger_level": {
            "description": "Allows this entity to track anger towards a set of nuisances",
            "children": [
                {
                    "name": "anger_decrement_interval",
                    "type": "Decimal",
                    "defaultValue": "1.00",
                    "description": "Anger level will decay over time. Defines how often anger towards all nuisances will be decreased by one",
                },
                {
                    "name": "angry_boost",
                    "type": "Positive Integer",
                    "defaultValue": "20",
                    "description": "Anger boost applied to angry threshold when mob gets angry",
                },
                {
                    "name": "angry_threshold",
                    "type": "Positive Integer",
                    "defaultValue": "80",
                    "description": "Threshold that define when the mob is considered angry at a nuisance",
                },
                {
                    "name": "default_annoyingness",
                    "type": "String",
                    "defaultValue": "0",
                    "description": "The default amount of annoyingness for any given nuisance. Specifies how much to raise anger level on each provocation",
                },
                {
                    "name": "max_anger",
                    "type": "Positive Integer",
                    "defaultValue": "100",
                    "description": "The maximum anger level that can be reached. Applies to any nuisance",
                },
                {
                    "name": "nuisance_filter",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Filter that is applied to determine if a mob can be a nuisance",
                },
                {
                    "name": "on_increase_sounds",
                    "type": "Array",
                    "defaultValue": "",
                },
                {
                    "name": "remove_targets_below_angry_threshold",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Defines if the mob should remove target if it falls below 'angry' threshold",
                },
            ],
        },
        "minecraft:angry": {
            "description": "Defines the entity's 'angry' state using a timer.",
            "children": [
                {
                    "name": "angry_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The sound event to play when the mob is angry",
                },
                {
                    "name": "broadcast_anger",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, other entities of the same entity definition within the broadcastRange will also become angry",
                },
                {
                    "name": "broadcast_anger_on_attack",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, other entities of the same entity definition within the broadcastRange will also become angry whenever this mob attacks",
                },
                {
                    "name": "broadcast_anger_on_being_attacked",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, other entities of the same entity definition within the broadcastRange will also become angry whenever this mob is attacked",
                },
                {
                    "name": "broadcast_filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Conditions that make this entry in the list valid",
                },
                {
                    "name": "broadcast_range",
                    "type": "Integer",
                    "defaultValue": "20",
                    "description": "Distance in blocks within which other entities of the same entity definition will become angry",
                },
                {
                    "name": "broadcast_targets",
                    "type": "List",
                    "defaultValue": "",
                    "description": "A list of entity families to broadcast anger to",
                },
                {
                    "name": "calm_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to run after the number of seconds specified in duration expires (when the entity stops being 'angry')",
                },
                {
                    "name": "duration",
                    "type": "Integer",
                    "defaultValue": "25",
                    "description": "The amount of time in seconds that the entity will be angry",
                },
                {
                    "name": "duration_delta",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Variance in seconds added to the duration [-delta, delta]",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Filter out mob types that it should not attack while angry (other Piglins)",
                },
                {
                    "name": "sound_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "0",
                    "description": "The range of time in seconds to randomly wait before playing the sound again",
                },
            ],
        },
        "minecraft:annotation.break_door": {
            "description": "Allows the actor to break doors assuming that that flags set up for the component to use in navigation",
            "children": [
                {
                    "name": "break_time",
                    "type": "Decimal",
                    "defaultValue": "12.0",
                    "description": "The time in seconds required to break through doors.",
                },
                {
                    "name": "min_difficulty",
                    "type": "String",
                    "defaultValue": "hard",
                    "description": "The minimum difficulty that the world must be on for this entity to break doors.",
                },
            ],
        },
        "minecraft:area_attack": {
            "description": "A component that does damage to entities that get within range.",
            "children": [
                {
                    "name": "cause",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The type of damage that is applied to entities that enter the damage range.",
                },
                {
                    "name": "damage_cooldown",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Attack cooldown (in seconds) for how often this entity can attack a target.",
                },
                {
                    "name": "damage_per_tick",
                    "type": "Integer",
                    "defaultValue": "2",
                    "description": "How much damage per tick is applied to entities that enter the damage range.",
                },
                {
                    "name": "damage_range",
                    "type": "Decimal",
                    "defaultValue": "0.2",
                    "description": "How close a hostile entity must be to have the damage applied.",
                },
                {
                    "name": "entity_filter",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The set of entities that are valid to apply the damage to when within range.",
                },
                {
                    "name": "play_attack_sound",
                    "type": "Boolean",
                    "defaultValue": "4.94066e-324",
                    "description": "If the entity should play their attack sound when attacking a target.",
                },
            ],
        },
        "minecraft:attack_cooldown": {
            "description": "Adds a cooldown to a mob. The intention of this cooldown is to be used to prevent the mob from attempting to aquire new attack targets.",
            "children": [
                {
                    "name": "attack_cooldown_complete_event",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to be run when the cooldown is complete.",
                },
                {
                    "name": "attack_cooldown_time",
                    "type": "Range [a, b]",
                    "defaultValue": "[0.00, 1.00]",
                    "description": "Amount of time in seconds for the cooldown. Can be specified as a number or a pair of numbers (min and max).",
                },
            ],
        },
        "minecraft:barter": {
            "description": "Enables the component to drop an item as a barter exchange.",
            "children": [
                {
                    "name": "barter_table",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Loot table that's used to drop a random item.",
                },
                {
                    "name": "cooldown_after_being_attacked",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Duration, in seconds, for which mob won't barter items if it was hurt",
                },
            ],
        },
        "minecraft:block_sensor": {
            "description": "Fires off a specified event when a block in the block list is broken within the sensor range.",
            "children": [
                {
                    "name": "on_break",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of blocks to watch for being broken to fire off a specified event. If a block is in multiple lists, multiple events will fire.",
                },
                {
                    "name": "sensor_radius",
                    "type": "Decimal",
                    "defaultValue": "16.00",
                    "description": "The maximum radial distance in which a specified block can be detected. The biggest radius is 32.0.",
                },
                {
                    "name": "sources",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of sources that break the block to listen for. If none are specified, all block breaks will be detected.",
                },
            ],
        },
        "minecraft:boostable": {
            "description": "Defines the conditions and behavior of a rideable entity's boost.",
            "children": [
                {
                    "name": "boost_items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of items that can be used to boost while riding this entity. Each item has the following properties:",
                    "children": [
                        {
                            "name": "damage",
                            "type": "Integer",
                            "defaultValue": "1",
                            "description": "This is the damage that the item will take each time it is used.",
                        },
                        {
                            "name": "item",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Name of the item that can be used to boost.",
                        },
                        {
                            "name": "replace_item",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The item used to boost will become this item once it is used up.",
                        },
                    ],
                },
                {
                    "name": "duration",
                    "type": "Decimal",
                    "defaultValue": "3.00",
                    "description": "Time in seconds for the boost.",
                },
                {
                    "name": "speed_multiplier",
                    "type": "Decimal",
                    "defaultValue": "1.35",
                    "description": "Factor by which the entity's normal speed increases. E.g. 2.0 means go twice as fast. Requires \"format_version\" of 1.20 or more, otherwise the value 1.35 will be used.",
                },
            ],
        },
        "minecraft:boss": {
            "description": "The current state of the boss for updating the boss HUD.",
            "children": [
                {
                    "name": "hud_range",
                    "type": "Integer",
                    "defaultValue": "55",
                    "description": "The max distance from the boss at which the boss's health bar is present on the players screen.",
                },
                {
                    "name": "name",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The name that will be displayed above the boss's health bar.",
                },
                {
                    "name": "should_darken_sky",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether the sky should darken in the presence of the boss.",
                },
            ],
        },
        "minecraft:break_blocks": {
            "description": "Specifies the blocks that this entity can break as it moves around.",
            "children": [
                {
                    "name": "breakable_blocks",
                    "type": "List",
                    "defaultValue": "",
                    "description": "A list of the blocks that can be broken as this entity moves around",
                },
            ],
        },
        "minecraft:breathable": {
            "description": "Defines what blocks this entity can breathe in and gives them the ability to suffocate.",
            "children": [
                {
                    "name": "breathe_blocks",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of blocks this entity can breathe in, in addition to the other \"breathes\" parameters.",
                },
                {
                    "name": "breathes_air",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, this entity can breathe in air.",
                },
                {
                    "name": "breathes_lava",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, this entity can breathe in lava.",
                },
                {
                    "name": "breathes_solids",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity can breathe in solid blocks.",
                },
                {
                    "name": "breathes_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity can breathe in water.",
                },
                {
                    "name": "generates_bubbles",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, this entity will have visible bubbles while in water.",
                },
                {
                    "name": "inhale_time",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Time in seconds to recover breath to maximum.",
                },
                {
                    "name": "non_breathe_blocks",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of blocks this entity can't breathe in, in addition to the other \"breathes\" parameters.",
                },
                {
                    "name": "suffocate_time",
                    "type": "Integer",
                    "defaultValue": "-20",
                    "description": "Time in seconds between suffocation damage.",
                },
                {
                    "name": "total_supply",
                    "type": "Integer",
                    "defaultValue": "15",
                    "description": "Time in seconds the entity can hold its breath.",
                },
            ],
        },
        "minecraft:breedable": {
            "description": "Defines the way an entity can get into the 'love' state.",
            "children": [
                {
                    "name": "allow_sitting",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, entities can breed while sitting",
                },
                {
                    "name": "blend_attributes",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the entities will blend their attributes in the offspring after they breed.",
                },
                {
                    "name": "breed_cooldown",
                    "type": "Decimal",
                    "defaultValue": "60",
                    "description": "Time in seconds before the Entity can breed again.",
                },
                {
                    "name": "breed_items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of items that can be used to get the entity into the 'love' state",
                },
                {
                    "name": "breeds_with",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of entity definitions that this entity can breed with.",
                    "children": [
                        {
                            "name": "baby_type",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The entity definition of this entity's babies.",
                        },
                        {
                            "name": "breed_event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Event to run when this entity breeds.",
                        },
                        {
                            "name": "mate_type",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The entity definition of this entity's mate.",
                        },
                    ],
                },
                {
                    "name": "causes_pregnancy",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the entity will become pregnant instead of spawning a baby.",
                },
                {
                    "name": "deny_parents_variant",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Determines how likely the baby of parents with the same variant will deny that variant and take a random variant within the given range instead.",
                    "children": [
                        {
                            "name": "chance",
                            "type": "Decimal",
                            "defaultValue": "0",
                            "description": "The percentage chance of denying the parents' variant.",
                        },
                        {
                            "name": "max_variant",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "The inclusive maximum of the variant range.",
                        },
                        {
                            "name": "min_variant",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "The inclusive minimum of the variant range.",
                        },
                    ],
                },
                {
                    "name": "environment_requirements",
                    "type": "List",
                    "defaultValue": "",
                },
                {
                    "name": "extra_baby_chance",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Chance that up to 16 babies will spawn between 0.0 and 1.0, where 1.0 is 100%.",
                },
                {
                    "name": "inherit_tamed",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the babies will be automatically tamed if its parents are",
                },
                {
                    "name": "love_filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The filters to run when attempting to fall in love.",
                },
                {
                    "name": "mutation_factor",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Determines how likely the babies are to NOT inherit one of their parent's variances. Values are between 0.0 and 1.0, with a higher number meaning more likely to mutate.",
                    "children": [
                        {
                            "name": "color",
                            "type": "Decimal",
                            "defaultValue": "0",
                            "description": "The percentage chance of a mutation on the entity's color.",
                        },
                        {
                            "name": "extra_variant",
                            "type": "Decimal",
                            "defaultValue": "0",
                            "description": "The percentage chance of a mutation on the entity's extra variant type.",
                        },
                        {
                            "name": "variant",
                            "type": "Decimal",
                            "defaultValue": "0",
                            "description": "The percentage chance of a mutation on the entity's variant type.",
                        },
                    ],
                },
                {
                    "name": "mutation_strategy",
                    "type": "String",
                    "defaultValue": "none",
                    "description": "Strategy used for mutating variants and extra variants for offspring. Current valid alternatives are 'random' and 'none'.",
                },
                {
                    "name": "parent_centric_attribute_blending",
                    "type": "List",
                    "defaultValue": "",
                    "description": "[EXPERIMENTAL] List of attributes that should benefit from parent centric attribute blending. For example, horses blend their health, movement, and jump_strength in their offspring.",
                },
                {
                    "name": "random_extra_variant_mutation_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "0",
                    "description": "Range used to determine random extra variant.",
                },
                {
                    "name": "random_variant_mutation_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "0",
                    "description": "Range used to determine random variant.",
                },
                {
                    "name": "require_full_health",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the entity needs to be at full health before it can breed.",
                },
                {
                    "name": "require_tame",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the entities need to be tamed first before they can breed.",
                },
                {
                    "name": "transform_to_item",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The breed item used will transform to this item upon successful interaction. Format: itemName:auxValue",
                },
            ],
        },
        "minecraft:bribeable": {
            "description": "Defines the way an entity can get into the 'bribed' state.",
            "children": [
                {
                    "name": "bribe_cooldown",
                    "type": "Decimal",
                    "defaultValue": "2.0",
                    "description": "Time in seconds before the Entity can be bribed again.",
                },
                {
                    "name": "bribe_items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of items that can be used to bribe the entity.",
                },
            ],
        },
        "minecraft:buoyant": {
            "description": "Enables an entity to float on the specified liquid blocks.",
            "children": [
                {
                    "name": "apply_gravity",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Applies gravity each tick. Causes more of a wave simulation, but will cause more gravity to be applied outside liquids.",
                },
                {
                    "name": "base_buoyancy",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Base buoyancy used to calculate how much will a mob float.",
                },
                {
                    "name": "big_wave_probability",
                    "type": "Decimal",
                    "defaultValue": "0.03",
                    "description": "Probability for a big wave hitting the entity. Only used if `simulate_waves` is true.",
                },
                {
                    "name": "big_wave_speed",
                    "type": "Decimal",
                    "defaultValue": "10.0",
                    "description": "Multiplier for the speed to make a big wave. Triggered depending on 'big_wave_probability'.",
                },
                {
                    "name": "drag_down_on_buoyancy_removed",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "How much an actor will be dragged down when the Buoyancy Component is removed.",
                },
                {
                    "name": "liquid_blocks",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of blocks this entity can float on. Must be a liquid block.",
                },
                {
                    "name": "simulate_waves",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Should the movement simulate waves going through.",
                },
            ],
        },
        "minecraft:celebrate_hunt": {
            "description": "Specifies hunt celebration behaviour.",
            "children": [
                {
                    "name": "broadcast",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, celebration will be broadcasted to other entities in the radius.",
                },
                {
                    "name": "celeberation_targets",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The list of conditions that target of hunt must satisfy to initiate celebration.",
                },
                {
                    "name": "celebrate_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The sound event to play when the mob is celebrating",
                },
                {
                    "name": "duration",
                    "type": "Integer",
                    "defaultValue": "4",
                    "description": "Duration, in seconds, of celebration",
                },
                {
                    "name": "radius",
                    "type": "Decimal",
                    "defaultValue": "16",
                    "description": "If broadcast is enabled, specifies the radius in which it will notify other entities for celebration.",
                },
                {
                    "name": "sound_interval",
                    "type": "Range [a, b]",
                    "defaultValue": "0",
                    "description": "The range of time in seconds to randomly wait before playing the sound again",
                },
            ],
        },
        "minecraft:collision_box": {
            "description": "Sets the width and height of the Entity's collision box.",
            "children": [
                {
                    "name": "height",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Height of the collision box in blocks. A negative value will be assumed to be 0.",
                },
                {
                    "name": "width",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "Width of the collision box in blocks. A negative value will be assumed to be 0.",
                },
            ],
        },
        "minecraft:combat_regeneration": {
            "description": "Gives Regeneration I and removes Mining Fatigue from the mob that kills the Actor's attack target.",
            "children": [
                {
                    "name": "apply_to_family",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Determines if the mob will grant mobs of the same type combat buffs if they kill the target.",
                },
                {
                    "name": "apply_to_self",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Determines if the mob will grant itself the combat buffs if it kills the target.",
                },
                {
                    "name": "regeneration_duration",
                    "type": "Integer",
                    "defaultValue": "5",
                    "description": "The duration in seconds of Regeneration I added to the mob.",
                },
            ],
        },
        "minecraft:conditional_bandwidth_optimization": {
            "description": "Defines the Conditional Spatial Update Bandwidth Optimizations of this entity.",
            "children": [
                {
                    "name": "conditional_values",
                    "type": "List",
                    "defaultValue": "",
                },
                {
                    "name": "default_values",
                    "type": "JSON Object",
                    "defaultValue": "",
                },
            ],
        },
        "minecraft:custom_hit_test": {
            "description": "List of hitboxes for melee and ranged hits against the entity.",
            "children": [
                {
                    "name": "hitboxes",
                    "type": "Array",
                    "defaultValue": "",
                    "description": "Comma seperated list of hitboxes.",
                },
            ],
        },
        "minecraft:damage_over_time": {
            "description": "Applies defined amount of damage to the entity at specified intervals.",
            "children": [
                {
                    "name": "damage_per_hurt",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "Amount of damage caused each hurt.",
                },
                {
                    "name": "time_between_hurt",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Time in seconds between damage.",
                },
            ],
        },
        "minecraft:damage_sensor": {
            "description": "Defines what events to call when this entity is damaged by specific entities or items.",
            "children": [
                {
                    "name": "triggers",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of triggers with the events to call when taking specific kinds of damage.",
                    "children": [
                        {
                            "name": "cause",
                            "type": "String",
                            "defaultValue": "none",
                            "description": "Type of damage that triggers the events.",
                        },
                        {
                            "name": "damage_modifier",
                            "type": "Decimal",
                            "defaultValue": "0.0",
                            "description": "A modifier that adds to/removes from the base damage from the damage cause. It does not reduce damage to less than 0.",
                        },
                        {
                            "name": "damage_multiplier",
                            "type": "Decimal",
                            "defaultValue": "1.0",
                            "description": "A multiplier that modifies the base damage from the damage cause. If deals_damage is true the multiplier can only reduce the damage the entity will take to a minimum of 1.",
                        },
                        {
                            "name": "deals_damage",
                            "type": "Boolean",
                            "defaultValue": "true",
                            "description": "If true, the damage dealt to the entity will take away health from it, set to false to make the entity ignore that damage.",
                        },
                        {
                            "name": "on_damage",
                            "type": "JSON Object",
                            "defaultValue": "",
                            "description": "Specifies filters for entity definitions and events.",
                        },
                        {
                            "name": "on_damage_sound_event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Defines what sound to play, if any, when the on_damage filters are met.",
                        },
                    ],
                },
            ],
        },
        "minecraft:dash": {
            "description": "Ability for a rideable entity to dash.",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Decimal",
                    "defaultValue": "1.00",
                    "description": "The dash cooldown in seconds. Default value is 1.000000.",
                },
                {
                    "name": "horizontal_momentum",
                    "type": "Decimal",
                    "defaultValue": "1.00",
                    "description": "Horizontal momentum of the dash.",
                },
                {
                    "name": "vertical_momentum",
                    "type": "Decimal",
                    "defaultValue": "1.00",
                    "description": "Vertical momentum of the dash.",
                },
            ],
        },
        "minecraft:despawn": {
            "description": "Despawns the Actor when the despawn rules or optional filters evaluate to true.",
            "children": [
                {
                    "name": "despawn_from_chance",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Determines if \"min_range_random_chance\" is used in the standard despawn rules",
                },
                {
                    "name": "despawn_from_distance",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Specifies if the \"min_distance\" and \"max_distance\" are used in the standard despawn rules.",
                    "children": [
                        {
                            "name": "max_distance",
                            "type": "Integer",
                            "defaultValue": "128",
                            "description": "maximum distance for standard despawn rules to instantly despawn the mob.",
                        },
                        {
                            "name": "min_distance",
                            "type": "Integer",
                            "defaultValue": "32",
                            "description": "minimum distance for standard despawn rules to try to despawn the mob.",
                        },
                    ],
                },
                {
                    "name": "despawn_from_inactivity",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Determines if the \"min_range_inactivity_timer\" is used in the standard despawn rules.",
                },
                {
                    "name": "despawn_from_simulation_edge",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Determines if the mob is instantly despawned at the edge of simulation distance in the standard despawn rules.",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The list of conditions that must be satisfied before the Actor is despawned. If a filter is defined then standard despawn rules are ignored.",
                },
                {
                    "name": "min_range_inactivity_timer",
                    "type": "Integer",
                    "defaultValue": "30",
                    "description": "The amount of time in seconds that the mob must be inactive.",
                },
                {
                    "name": "min_range_random_chance",
                    "type": "Integer",
                    "defaultValue": "800",
                    "description": "A random chance between 1 and the given value.",
                },
                {
                    "name": "remove_child_entities",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, all entities linked to this entity in a child relationship (eg. leashed) will also be despawned.",
                },
            ],
        },
        "minecraft:drying_out_timer": {
            "description": "Adds a timer for drying out that will count down and fire 'dried_out_event' or will stop as soon as the entity will get under rain or water and fire 'stopped_drying_out_event'",
            "children": [
                {
                    "name": "dried_out_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to fire when the drying out time runs out.",
                },
                {
                    "name": "recover_after_dried_out_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to fire when entity was already dried out but received increase in water supply.",
                },
                {
                    "name": "stopped_drying_out_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to fire when entity stopped drying out, for example got into water or under rain.",
                },
                {
                    "name": "total_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Amount of time in seconds to dry out fully.",
                },
                {
                    "name": "water_bottle_refill_time",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "Optional amount of additional time in seconds given by using splash water bottle on entity.",
                },
            ],
        },
        "minecraft:economy_trade_table": {
            "description": "Defines this entity's ability to trade with players.",
            "children": [
                {
                    "name": "convert_trades_economy",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Determines when the mob transforms, if the trades should be converted when the new mob has a economy_trade_table. When the trades are converted, the mob will generate a new trade list with their new trade table, but then it will try to convert any of the same trades over to have the same enchantments and user data. For example, if the original has a Emerald to Enchanted Iron Sword (Sharpness 1), and the new trade also has an Emerald for Enchanted Iron Sword, then the enchantment will be Sharpness 1.",
                },
                {
                    "name": "cured_discount",
                    "type": "Range [a, b]",
                    "defaultValue": "[-25, -20]",
                    "description": "How much should the discount be modified by when the player has cured the Zombie Villager. Can be specified as a pair of numbers (When use_legacy_price_formula is true this is the low-tier trade discount and high-tier trade discount, otherwise it is the minor positive gossip and major positive gossip.)",
                },
                {
                    "name": "display_name",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Name to be displayed while trading with this entity",
                },
                {
                    "name": "hero_demand_discount",
                    "type": "Integer",
                    "defaultValue": "-4",
                    "description": "Used in legacy prices to determine how much should Demand be modified by when the player has the Hero of the Village mob effect",
                },
                {
                    "name": "max_cured_discount",
                    "type": "Range [a, b]",
                    "defaultValue": "[-25, -20]",
                    "description": "The max the discount can be modified by when the player has cured the Zombie Villager. Can be specified as a pair of numbers (When use_legacy_price_formula is true this is the low-tier trade discount and high-tier trade discount, otherwise it is the minor positive gossip and major positive gossip.)",
                },
                {
                    "name": "max_nearby_cured_discount",
                    "type": "Integer",
                    "defaultValue": "-200",
                    "description": "The max the discount can be modified by when the player has cured a nearby Zombie Villager. Only used when use_legacy_price_formula is true, otherwise max_cured_discount (low) is used.",
                },
                {
                    "name": "nearby_cured_discount",
                    "type": "Integer",
                    "defaultValue": "-20",
                    "description": "How much should the discount be modified by when the player has cured a nearby Zombie Villager",
                },
                {
                    "name": "new_screen",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Used to determine if trading with entity opens the new trade screen",
                },
                {
                    "name": "persist_trades",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Determines if the trades should persist when the mob transforms. This makes it so that the next time the mob is transformed to something with a trade_table or economy_trade_table, then it keeps their trades.",
                },
                {
                    "name": "show_trade_screen",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Show an in game trade screen when interacting with the mob.",
                },
                {
                    "name": "table",
                    "type": "String",
                    "defaultValue": "",
                    "description": "File path relative to the resource pack root for this entity's trades",
                },
                {
                    "name": "use_legacy_price_formula",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Determines whether the legacy formula is used to determines the trade prices.",
                },
            ],
        },
        "minecraft:entity_armor_equipment_slot_mapping": {
            "description": "It defines to which armor slot an item equipped to 'minecraft:equippable''s second slot should be equipped to. It is automatically applied to all entities for worlds with a version greater than or equal to 1.21.10. For older worlds, 'slot.armor.torso' will be used. It is strongly advised not to explicitly use this component, as no backwards compatibility for it will be provided.",
            "children": [
                {
                    "name": "armor_slot",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The armor slot an item equipped to 'minecraft:equippable''s second slot should be equipped to. It defaults to 'slot.armor.torso' for entities with a format version prior to 1.21.10, and to 'slot.armor.body' otherwise.",
                },
            ],
        },
        "minecraft:entity_sensor": {
            "description": "A component that owns multiple subsensors, each one firing an event when a set of conditions are met by other entities within the defined range.",
            "children": [
                {
                    "name": "relative_range",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true the subsensors' range is additive on top of the entity's size.",
                },
                {
                    "name": "subsensors",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of subsensors which sense for entities and emit events when all their conditions are met.",
                    "children": [
                        {
                            "name": "cooldown",
                            "type": "Decimal",
                            "defaultValue": "-1",
                            "description": "How many seconds should elapse before the subsensor can once again sense for entities. The cooldown is applied on top of the base 1 tick (0.05 seconds) delay. Negative values will result in no cooldown being used.",
                        },
                        {
                            "name": "event",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Event to fire when the conditions are met.",
                        },
                        {
                            "name": "event_filters",
                            "type": "Minecraft Filter",
                            "defaultValue": "",
                            "description": "The set of conditions that must be satisfied to fire the event.",
                        },
                        {
                            "name": "maximum_count",
                            "type": "Integer",
                            "defaultValue": "-1",
                            "description": "The maximum number of entities that must pass the filter conditions for the event to send.",
                        },
                        {
                            "name": "minimum_count",
                            "type": "Integer",
                            "defaultValue": "1",
                            "description": "The minimum number of entities that must pass the filter conditions for the event to send.",
                        },
                        {
                            "name": "range",
                            "type": "Vector [a, b]",
                            "defaultValue": "[10, 10]",
                            "description": "The maximum horizontal and vertical distance another entity can be from this and have the filters checked against it.",
                        },
                        {
                            "name": "require_all",
                            "type": "Boolean",
                            "defaultValue": "false",
                            "description": "If true requires all nearby entities to pass the filter conditions for the events to send.",
                        },
                    ],
                },
            ],
        },
        "minecraft:environment_sensor": {
            "description": "Creates a trigger based on environment conditions.",
            "children": [
                {
                    "name": "triggers",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of triggers that fire when the environment conditions match the given filter criteria.",
                },
            ],
        },
        "minecraft:equip_item": {
            "description": "The entity puts on the desired equipment.",
            "children": [
                {
                    "name": "excluded_items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of items that the entity should not equip.",
                },
            ],
        },
        "minecraft:equippable": {
            "description": "Defines an entity's behavior for having items equipped to it.",
            "children": [
                {
                    "name": "slots",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of slots and the item that can be equipped.",
                    "children": [
                        {
                            "name": "accepted_items",
                            "type": "List",
                            "defaultValue": "",
                            "description": "The list of items that can go in this slot.",
                        },
                        {
                            "name": "interact_text",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Text to be displayed when the entity can be equipped with this item when playing with Touch-screen controls.",
                        },
                        {
                            "name": "item",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Identifier of the item that can be equipped for this slot.",
                        },
                        {
                            "name": "on_equip",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Event to trigger when this entity is equipped with this item.",
                        },
                        {
                            "name": "on_unequip",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Event to trigger when this item is removed from this entity.",
                        },
                        {
                            "name": "slot",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "The slot number of this slot.",
                        },
                    ],
                },
            ],
        },
        "minecraft:exhaustion_values": {
            "description": "Defines how much exhaustion each player action should take.",
            "children": [
                {
                    "name": "attack",
                    "type": "Decimal",
                    "defaultValue": "0.1",
                    "description": "Amount of exhaustion applied when attacking.",
                },
                {
                    "name": "damage",
                    "type": "Decimal",
                    "defaultValue": "0.1",
                    "description": "Amount of exhaustion applied when taking damage.",
                },
                {
                    "name": "heal",
                    "type": "Decimal",
                    "defaultValue": "6",
                    "description": "Amount of exhaustion applied when healed through food regeneration.",
                },
                {
                    "name": "jump",
                    "type": "Decimal",
                    "defaultValue": "0.05",
                    "description": "Amount of exhaustion applied when jumping.",
                },
                {
                    "name": "mine",
                    "type": "Decimal",
                    "defaultValue": "0.005",
                    "description": "Amount of exhaustion applied when mining.",
                },
                {
                    "name": "sprint",
                    "type": "Decimal",
                    "defaultValue": "0.01",
                    "description": "Amount of exhaustion applied when sprinting.",
                },
                {
                    "name": "sprint_jump",
                    "type": "Decimal",
                    "defaultValue": "0.2",
                    "description": "Amount of exhaustion applied when sprint jumping.",
                },
                {
                    "name": "swim",
                    "type": "Decimal",
                    "defaultValue": "0.01",
                    "description": "Amount of exhaustion applied when swimming.",
                },
                {
                    "name": "walk",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Amount of exhaustion applied when walking.",
                },
            ],
        },
        "minecraft:experience_reward": {
            "description": ".",
            "children": [
                {
                    "name": "on_bred",
                    "type": "Molang",
                    "defaultValue": "0",
                    "description": "A Molang expression defining the amount of experience rewarded when this entity is successfully bred. An array of expressions adds each expression's result together for a final total.",
                },
                {
                    "name": "on_death",
                    "type": "Molang",
                    "defaultValue": "0",
                    "description": "A Molang expression defining the amount of experience rewarded when this entity dies. An array of expressions adds each expression's result together for a final total.",
                },
            ],
        },
        "minecraft:explode": {
            "description": "Defines how the entity explodes.",
            "children": [
                {
                    "name": "breaks_blocks",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the explosion will destroy blocks in the explosion radius.",
                },
                {
                    "name": "causes_fire",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, blocks in the explosion radius will be set on fire.",
                },
                {
                    "name": "destroy_affected_by_griefing",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, whether the explosion breaks blocks is affected by the mob griefing game rule.",
                },
                {
                    "name": "fire_affected_by_griefing",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, whether the explosion causes fire is affected by the mob griefing game rule.",
                },
                {
                    "name": "fuse_length",
                    "type": "Range [a, b]",
                    "defaultValue": "[0.0, 0.0]",
                    "description": "The range for the random amount of time the fuse will be lit before exploding, a negative value means the explosion will be immediate.",
                },
                {
                    "name": "fuse_lit",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the fuse is already lit when this component is added to the entity.",
                },
                {
                    "name": "max_resistance",
                    "type": "Decimal",
                    "defaultValue": "3.40282e+38",
                    "description": "A blocks explosion resistance will be capped at this value when an explosion occurs.",
                },
                {
                    "name": "power",
                    "type": "Decimal",
                    "defaultValue": "3",
                    "description": "The radius of the explosion in blocks and the amount of damage the explosion deals.",
                },
            ],
        },
        "minecraft:flocking": {
            "description": "Allows entities to flock in groups in water or not.",
            "children": [
                {
                    "name": "block_distance",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "The amount of blocks away the entity will look at to push away from.",
                },
                {
                    "name": "block_weight",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "The weight of the push back away from blocks.",
                },
                {
                    "name": "breach_influence",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "The amount of push back given to a flocker that breaches out of the water.",
                },
                {
                    "name": "cohesion_threshold",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "The threshold in which to start applying cohesion.",
                },
                {
                    "name": "cohesion_weight",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "The weight applied for the cohesion steering of the flock.",
                },
                {
                    "name": "goal_weight",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "The weight on which to apply on the goal output.",
                },
                {
                    "name": "high_flock_limit",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Determines the high bound amount of entities that can be allowed in the flock.",
                },
                {
                    "name": "in_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the Flocking Component if the entity exists in water.",
                },
                {
                    "name": "influence_radius",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "The area around the entity that allows others to be added to the flock.",
                },
                {
                    "name": "innner_cohesion_threshold",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "The distance in which the flocker will stop applying cohesion.",
                },
                {
                    "name": "loner_chance",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "The percentage chance between 0-1 that a fish will spawn and not want to join flocks. Invalid values will be capped at the end points.",
                },
                {
                    "name": "low_flock_limit",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Determines the low bound amount of entities that can be allowed in the flock.",
                },
                {
                    "name": "match_variants",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the flockers that they can only match similar entities that also match the variant, mark variants, and color data of the other potential flockers.",
                },
                {
                    "name": "max_height",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "The max height allowable in the air or water.",
                },
                {
                    "name": "min_height",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "The min height allowable in the air or water.",
                },
                {
                    "name": "separation_threshold",
                    "type": "Decimal",
                    "defaultValue": "2",
                    "description": "The distance that is determined to be to close to another flocking and to start applying separation.",
                },
                {
                    "name": "separation_weight",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "The weight applied to the separation of the flock.",
                },
                {
                    "name": "use_center_of_mass",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the flockers that they will follow flocks based on the center of mass.",
                },
            ],
        },
        "minecraft:game_event_movement_tracking": {
            "description": "Allows an entity to emit `entityMove`, `swim` and `flap` game events, depending on the block the entity is moving through. It is added by default to every mob. Add it again to override its behavior.",
            "children": [
                {
                    "name": "emit_flap",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the `flap` game event will be emitted when the entity moves through air.",
                },
                {
                    "name": "emit_move",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the `entityMove` game event will be emitted when the entity moves on ground or through a solid.",
                },
                {
                    "name": "emit_swim",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the `swim` game event will be emitted when the entity moves through a liquid.",
                },
            ],
        },
        "minecraft:genetics": {
            "description": "Defines the way a mob's genes and alleles are passed on to its offspring, and how those traits manifest in the child. Compatible parent genes are crossed together, the alleles are handed down from the parents to the child, and any matching genetic variants fire off JSON events to modify the child and express the traits.",
            "children": [
                {
                    "name": "genes",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of genes that this entity has and will cross with a partner during breeding.",
                    "children": [
                        {
                            "name": "allele_range",
                            "type": "Integer",
                            "defaultValue": "",
                            "description": "The range of positive integer allele values for this gene. Spawned mobs will have a random number in this range assigned to them.",
                            "children": [
                                {
                                    "name": "range_max",
                                    "type": "Integer",
                                    "defaultValue": "0",
                                    "description": "Upper bound of the allele values for this gene.",
                                },
                                {
                                    "name": "range_min",
                                    "type": "Integer",
                                    "defaultValue": "0",
                                    "description": "Lower bound of the allele values for this gene.",
                                },
                            ],
                        },
                        {
                            "name": "genetic_variants",
                            "type": "List",
                            "defaultValue": "",
                            "description": "The list of genetic variants for this gene. These check for particular allele combinations and fire events when all of them are satisfied.",
                            "children": [
                                {
                                    "name": "birth_event",
                                    "type": "String",
                                    "defaultValue": "",
                                    "description": "Event to run when this mob is created and matches the allele conditions.",
                                },
                                {
                                    "name": "both_allele",
                                    "type": "Integer",
                                    "defaultValue": "-1",
                                    "description": "If this value is non-negative, compare both the mob's main and hidden alleles with this value for a match with both. Can also be a range of integers.",
                                },
                                {
                                    "name": "either_allele",
                                    "type": "Integer",
                                    "defaultValue": "-1",
                                    "description": "If this value is non-negative, compare both the mob's main and hidden alleles with this value for a match with either. Can also be a range of integers.",
                                },
                                {
                                    "name": "hidden_allele",
                                    "type": "Integer",
                                    "defaultValue": "-1",
                                    "description": "If this value is non-negative, compare the mob's hidden allele with this value for a match. Can also be a range of integers.",
                                },
                                {
                                    "name": "main_allele",
                                    "type": "Integer",
                                    "defaultValue": "-1",
                                    "description": "If this value is non-negative, compare the mob's main allele with this value for a match. Can also be a range of integers.",
                                },
                            ],
                        },
                        {
                            "name": "mutation_rate",
                            "type": "Decimal",
                            "defaultValue": "-1",
                            "description": "If this value is non-negative, overrides the chance for this gene that an allele will be replaced with a random one instead of the parent's allele during birth. Non-negative values greater than `1` will be the same as the value `1`.",
                        },
                        {
                            "name": "name",
                            "type": "String",
                            "defaultValue": "",
                            "description": "The name of the gene.",
                        },
                    ],
                },
                {
                    "name": "mutation_rate",
                    "type": "Decimal",
                    "defaultValue": "0.03125",
                    "description": "Chance that an allele will be replaced with a random one instead of the parent's allele during birth.",
                },
            ],
        },
        "minecraft:giveable": {
            "description": "Defines sets of items that can be used to trigger events when used on this entity. The item will also be taken and placed in the entity's inventory.",
            "children": [
                {
                    "name": "cooldown",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "An optional cool down in seconds to prevent spamming interactions.",
                },
                {
                    "name": "items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of items that can be given to the entity to place in their inventory.",
                },
                {
                    "name": "on_give",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to fire when the correct item is given.",
                },
            ],
        },
        "minecraft:group_size": {
            "description": "Keeps track of entity group size in the given radius.",
            "children": [
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The list of conditions that must be satisfied for other entities to be counted towards group size.",
                },
                {
                    "name": "radius",
                    "type": "Decimal",
                    "defaultValue": "16",
                    "description": "Radius from center of entity.",
                },
            ],
        },
        "minecraft:grows_crop": {
            "description": "Could increase crop growth when entity walks over crop",
            "children": [
                {
                    "name": "chance",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Value between 0-1. Chance of success per tick.",
                },
                {
                    "name": "charges",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "Number of charges",
                },
            ],
        },
        "minecraft:healable": {
            "description": "Defines the interactions with this entity for healing it.",
            "children": [
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The filter group that defines the conditions for using this item to heal the entity.",
                },
                {
                    "name": "force_use",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Determines if item can be used regardless of entity being at full health.",
                },
                {
                    "name": "items",
                    "type": "Array",
                    "defaultValue": "",
                    "description": "The array of items that can be used to heal this entity.",
                    "children": [
                        {
                            "name": "heal_amount",
                            "type": "Integer",
                            "defaultValue": "1",
                            "description": "The amount of health this entity gains when fed this item.",
                        },
                        {
                            "name": "item",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Item identifier that can be used to heal this entity.",
                        },
                    ],
                },
            ],
        },
        "minecraft:heartbeat": {
            "description": "Defines the entity's heartbeat.",
            "children": [
                {
                    "name": "interval",
                    "type": "Molang",
                    "defaultValue": "1.00",
                    "description": "A Molang expression defining the inter-beat interval in seconds. A value of zero or less means no heartbeat.",
                },
                {
                    "name": "sound_event",
                    "type": "String",
                    "defaultValue": "heartbeat",
                    "description": "Level sound event to be played as the heartbeat sound.",
                },
            ],
        },
        "minecraft:home": {
            "description": "Saves a home pos for when the the entity is spawned.",
            "children": [
                {
                    "name": "home_block_list",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Optional block list that the home position will be associated with. If any of the blocks no longer exist at that position, the home restriction is removed. Example syntax: minecraft:sand.  Not supported: minecraft:sand:1",
                },
                {
                    "name": "restriction_radius",
                    "type": "Integer",
                    "defaultValue": "-1",
                    "description": "The radius that the entity will be restricted to in relation to its home",
                },
            ],
        },
        "minecraft:hurt_on_condition": {
            "description": "Defines a set of conditions under which an entity should take damage.",
            "children": [
                {
                    "name": "damage_conditions",
                    "type": "Array",
                    "defaultValue": "",
                },
            ],
        },
        "minecraft:inside_block_notifier": {
            "description": "Verifies whether the entity is inside any of the listed blocks.",
            "children": [
                {
                    "name": "block_list",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of blocks, with certain block states, that we are monitoring to see if the entity is inside.",
                },
            ],
        },
        "minecraft:insomnia": {
            "description": "Adds a timer since last rested to see if phantoms should spawn.",
            "children": [
                {
                    "name": "days_until_insomnia",
                    "type": "Decimal",
                    "defaultValue": "3.0",
                    "description": "Number of days the mob has to stay up until the insomnia effect begins.",
                },
            ],
        },
        "minecraft:instant_despawn": {
            "description": "Despawns the Actor immediately.",
            "children": [
                {
                    "name": "remove_child_entities",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, all entities linked to this entity in a child relationship (eg. leashed) will also be despawned.",
                },
            ],
        },
        "minecraft:interact": {
            "description": "Defines interactions with this entity.",
            "children": [
                {
                    "name": "add_items",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Loot table with items to add to the player's inventory upon successful interaction.",
                    "children": [
                        {
                            "name": "table",
                            "type": "String",
                            "defaultValue": "",
                            "description": "File path, relative to the Behavior Pack's path, to the loot table file.",
                        },
                    ],
                },
                {
                    "name": "cooldown",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Time in seconds before this entity can be interacted with again.",
                },
                {
                    "name": "cooldown_after_being_attacked",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Time in seconds before this entity can be interacted with after being attacked.",
                },
                {
                    "name": "drop_item_slot",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The entity's slot to remove and drop the item from, if any, upon successful interaction. Inventory slots are denoted by positive numbers. Armor slots are denoted by 'slot.armor.head', 'slot.armor.chest', 'slot.armor.legs', 'slot.armor.feet' and 'slot.armor.body'.",
                },
                {
                    "name": "equip_item_slot",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The entity's slot to equip the item to, if any, upon successful interaction. Inventory slots are denoted by positive numbers. Armor slots are denoted by 'slot.armor.head', 'slot.armor.chest', 'slot.armor.legs', 'slot.armor.feet' and 'slot.armor.body'.",
                },
                {
                    "name": "health_amount",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The amount of health this entity will recover or lose when interacting with this item. Negative values will harm the entity.",
                },
                {
                    "name": "hurt_item",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The amount of damage the item will take when used to interact with this entity. A value of 0 means the item won't lose durability.",
                },
                {
                    "name": "interact_text",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Text to show when the player is able to interact in this way with this entity when playing with Touch-screen controls.",
                },
                {
                    "name": "on_interact",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to fire when the interaction occurs.",
                },
                {
                    "name": "particle_on_start",
                    "type": "JSON Object",
                    "defaultValue": "",
                },
                {
                    "name": "play_sounds",
                    "type": "String",
                    "defaultValue": "",
                    "description": "List of sounds to play when the interaction occurs.",
                },
                {
                    "name": "repair_entity_item",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Allows to repair one of the entity's items.",
                    "children": [
                        {
                            "name": "amount",
                            "type": "Integer",
                            "defaultValue": "",
                            "description": "How much of the item durability should be restored upon interaction.",
                        },
                        {
                            "name": "slot",
                            "type": "Integer",
                            "defaultValue": "",
                            "description": "The entity's slot containing the item to be repaired. Inventory slots are denoted by positive numbers. Armor slots are denoted by 'slot.armor.head', 'slot.armor.chest', 'slot.armor.legs', 'slot.armor.feet' and 'slot.armor.body'.",
                        },
                    ],
                },
                {
                    "name": "spawn_entities",
                    "type": "String",
                    "defaultValue": "",
                    "description": "List of entities to spawn when the interaction occurs.",
                },
                {
                    "name": "spawn_items",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Loot table with items to drop on the ground upon successful interaction.",
                    "children": [
                        {
                            "name": "table",
                            "type": "String",
                            "defaultValue": "",
                            "description": "File path, relative to the Behavior Pack's path, to the loot table file.",
                        },
                    ],
                },
                {
                    "name": "swing",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the player will do the 'swing' animation when interacting with this entity.",
                },
                {
                    "name": "transform_to_item",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The item used will transform to this item upon successful interaction. Format: itemName:auxValue",
                },
                {
                    "name": "use_item",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the interaction will use an item.",
                },
                {
                    "name": "vibration",
                    "type": "String",
                    "defaultValue": "entity_interact",
                    "description": "Vibration to emit when the interaction occurs. Admitted values are none (no vibration emitted), shear, entity_act, entity_interact.",
                },
            ],
        },
        "minecraft:inventory": {
            "description": "Defines this entity's inventory properties.",
            "children": [
                {
                    "name": "additional_slots_per_strength",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Number of slots that this entity can gain per extra strength",
                },
                {
                    "name": "can_be_siphoned_from",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the contents of this inventory can be removed by a hopper",
                },
                {
                    "name": "container_type",
                    "type": "String",
                    "defaultValue": "none",
                    "description": "Type of container this entity has. Can be horse, minecart_chest, chest_boat, minecart_hopper, inventory, container or hopper",
                },
                {
                    "name": "inventory_size",
                    "type": "Integer",
                    "defaultValue": "5",
                    "description": "Number of slots the container has",
                },
                {
                    "name": "private",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the entity will not drop its inventory on death",
                },
                {
                    "name": "restrict_to_owner",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the entity's inventory can only be accessed by its owner or itself",
                },
            ],
        },
        "minecraft:jump.static": {
            "description": "Gives the entity the ability to jump.",
            "children": [
                {
                    "name": "jump_power",
                    "type": "Decimal",
                    "defaultValue": "0.42",
                    "description": "The initial vertical velocity for the jump",
                },
            ],
        },
        "minecraft:leashable": {
            "description": "Allows this entity to be leashed and defines the conditions and events for this entity when is leashed.",
            "children": [
                {
                    "name": "can_be_stolen",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, players can leash this entity even if it is already leashed to another mob.",
                },
                {
                    "name": "hard_distance",
                    "type": "Decimal",
                    "defaultValue": "6",
                    "description": "Distance in blocks at which the leash stiffens, restricting movement.",
                },
                {
                    "name": "max_distance",
                    "type": "Decimal",
                    "defaultValue": "10",
                    "description": "Distance in blocks at which the leash breaks.",
                },
                {
                    "name": "on_leash",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to call when this entity is leashed.",
                },
                {
                    "name": "on_unleash",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to call when this entity is unleashed.",
                },
                {
                    "name": "soft_distance",
                    "type": "Decimal",
                    "defaultValue": "4",
                    "description": "Distance in blocks at which the 'spring' effect starts acting to keep this entity close to the entity that leashed it.",
                },
            ],
        },
        "minecraft:lookat": {
            "description": "Defines the behavior when another entity looks at this entity.",
            "children": [
                {
                    "name": "allow_invulnerable",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, invulnerable entities (e.g. Players in creative mode) are considered valid targets.",
                },
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "Defines the entities that can trigger this component.",
                },
                {
                    "name": "look_cooldown",
                    "type": "Range [a, b]",
                    "defaultValue": "[0, 0]",
                    "description": "The range for the random amount of time during which the entity is 'cooling down' and won't get angered or look for a target.",
                },
                {
                    "name": "look_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The event identifier to run when the entities specified in filters look at this entity.",
                },
                {
                    "name": "search_radius",
                    "type": "Decimal",
                    "defaultValue": "10",
                    "description": "Maximum distance this entity will look for another entity looking at it.",
                },
                {
                    "name": "set_target",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, this entity will set the attack target as the entity that looked at it.",
                },
            ],
        },
        "minecraft:mob_effect": {
            "description": "A component that applies a mob effect to entities that get within range.",
            "children": [
                {
                    "name": "cooldown_time",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Time in seconds to wait between each application of the effect.",
                },
                {
                    "name": "effect_range",
                    "type": "Decimal",
                    "defaultValue": "0.2",
                    "description": "How close a hostile entity must be to have the mob effect applied.",
                },
                {
                    "name": "effect_time",
                    "type": "Integer",
                    "defaultValue": "10",
                    "description": "How long the applied mob effect lasts in seconds.",
                },
                {
                    "name": "entity_filter",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "The set of entities that are valid to apply the mob effect to.",
                },
                {
                    "name": "mob_effect",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The mob effect that is applied to entities that enter this entities effect range.",
                },
            ],
        },
        "minecraft:mob_effect_immunity": {
            "description": "Entities with this component will have an immunity to the provided mob effects.",
            "children": [
                {
                    "name": "mob_effects",
                    "type": "Array",
                    "defaultValue": "",
                    "description": "List of names of effects the entity is immune to.",
                },
            ],
        },
        "minecraft:movement.amphibious": {
            "description": "This move control allows the mob to swim in water and walk on land.",
            "children": [
                {
                    "name": "max_turn",
                    "type": "Decimal",
                    "defaultValue": "30.0",
                    "description": "The maximum number in degrees the mob can turn per tick.",
                },
            ],
        },
        "minecraft:movement.basic": {
            "description": "This component accents the movement of an entity.",
            "children": [
                {
                    "name": "max_turn",
                    "type": "Decimal",
                    "defaultValue": "30.0",
                    "description": "The maximum number in degrees the mob can turn per tick.",
                },
            ],
        },
        "minecraft:movement.fly": {
            "description": "This move control causes the mob to fly.",
            "children": [
                {
                    "name": "max_turn",
                    "type": "Decimal",
                    "defaultValue": "30.0",
                    "description": "The maximum number in degrees the mob can turn per tick.",
                },
            ],
        },
        "minecraft:movement.generic": {
            "description": "This move control allows a mob to fly, swim, climb, etc.",
            "children": [
                {
                    "name": "max_turn",
                    "type": "Decimal",
                    "defaultValue": "30.0",
                    "description": "The maximum number in degrees the mob can turn per tick.",
                },
            ],
        },
        "minecraft:movement.hover": {
            "description": "This move control causes the mob to hover.",
            "children": [
                {
                    "name": "max_turn",
                    "type": "Decimal",
                    "defaultValue": "30.0",
                    "description": "The maximum number in degrees the mob can turn per tick.",
                },
            ],
        },
        "minecraft:movement.jump": {
            "description": "Move control that causes the mob to jump as it moves with a specified delay between jumps.",
            "children": [
                {
                    "name": "jump_delay",
                    "type": "Range [a, b]",
                    "defaultValue": "[0.0, 0.0]",
                    "description": "Delay after landing when using the slime move control.",
                },
                {
                    "name": "max_turn",
                    "type": "Decimal",
                    "defaultValue": "30.0",
                    "description": "The maximum number in degrees the mob can turn per tick.",
                },
            ],
        },
        "minecraft:movement.skip": {
            "description": "This move control causes the mob to hop as it moves.",
            "children": [
                {
                    "name": "max_turn",
                    "type": "Decimal",
                    "defaultValue": "30.0",
                    "description": "The maximum number in degrees the mob can turn per tick.",
                },
            ],
        },
        "minecraft:movement.sway": {
            "description": "This move control causes the mob to sway side to side giving the impression it is swimming.",
            "children": [
                {
                    "name": "max_turn",
                    "type": "Decimal",
                    "defaultValue": "30.0",
                    "description": "The maximum number in degrees the mob can turn per tick.",
                },
                {
                    "name": "sway_amplitude",
                    "type": "Decimal",
                    "defaultValue": "0.05",
                    "description": "Strength of the sway movement.",
                },
                {
                    "name": "sway_frequency",
                    "type": "Decimal",
                    "defaultValue": "0.5",
                    "description": "Multiplier for the frequency of the sway movement.",
                },
            ],
        },
        "minecraft:nameable": {
            "description": "Allows this entity to be named (e.g. using a name tag).",
            "children": [
                {
                    "name": "allow_name_tag_renaming",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, this entity can be renamed with name tags",
                },
                {
                    "name": "always_show",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the name will always be shown",
                },
                {
                    "name": "default_trigger",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Trigger to run when the entity gets named",
                },
                {
                    "name": "name_actions",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Describes the special names for this entity and the events to call when the entity acquires those names",
                    "children": [
                        {
                            "name": "name_filter",
                            "type": "String",
                            "defaultValue": "",
                            "description": "List of special names that will cause the events defined in 'on_named' to fire",
                        },
                        {
                            "name": "on_named",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Event to be called when this entity acquires the name specified in 'name_filter'",
                        },
                    ],
                },
            ],
        },
        "minecraft:navigation.climb": {
            "description": "Allows this entity to generate paths that include vertical walls like the vanilla Spiders do.",
            "children": [
                {
                    "name": "avoid_damage_blocks",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                },
                {
                    "name": "avoid_portals",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                },
                {
                    "name": "avoid_sun",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                },
                {
                    "name": "avoid_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid water when creating a path",
                },
                {
                    "name": "blocks_to_avoid",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                },
                {
                    "name": "can_breach",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                },
                {
                    "name": "can_break_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                },
                {
                    "name": "can_jump",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                },
                {
                    "name": "can_open_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                },
                {
                    "name": "can_open_iron_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                },
                {
                    "name": "can_pass_doors",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether a path can be created through a door",
                },
                {
                    "name": "can_path_from_air",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can start pathing when in the air",
                },
                {
                    "name": "can_path_over_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                },
                {
                    "name": "can_path_over_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                },
                {
                    "name": "can_sink",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                },
                {
                    "name": "can_swim",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                },
                {
                    "name": "can_walk",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                },
                {
                    "name": "can_walk_in_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                },
                {
                    "name": "is_amphibious",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                },
            ],
        },
        "minecraft:navigation.float": {
            "description": "Allows this entity to generate paths by flying around the air like the regular Ghast.",
            "children": [
                {
                    "name": "avoid_damage_blocks",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                },
                {
                    "name": "avoid_portals",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                },
                {
                    "name": "avoid_sun",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                },
                {
                    "name": "avoid_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid water when creating a path",
                },
                {
                    "name": "blocks_to_avoid",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                },
                {
                    "name": "can_breach",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                },
                {
                    "name": "can_break_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                },
                {
                    "name": "can_jump",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                },
                {
                    "name": "can_open_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                },
                {
                    "name": "can_open_iron_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                },
                {
                    "name": "can_pass_doors",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether a path can be created through a door",
                },
                {
                    "name": "can_path_from_air",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can start pathing when in the air",
                },
                {
                    "name": "can_path_over_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                },
                {
                    "name": "can_path_over_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                },
                {
                    "name": "can_sink",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                },
                {
                    "name": "can_swim",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                },
                {
                    "name": "can_walk",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                },
                {
                    "name": "can_walk_in_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                },
                {
                    "name": "is_amphibious",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                },
            ],
        },
        "minecraft:navigation.fly": {
            "description": "Allows this entity to generate paths in the air like the vanilla Parrots do.",
            "children": [
                {
                    "name": "avoid_damage_blocks",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                },
                {
                    "name": "avoid_portals",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                },
                {
                    "name": "avoid_sun",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                },
                {
                    "name": "avoid_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid water when creating a path",
                },
                {
                    "name": "blocks_to_avoid",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                },
                {
                    "name": "can_breach",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                },
                {
                    "name": "can_break_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                },
                {
                    "name": "can_jump",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                },
                {
                    "name": "can_open_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                },
                {
                    "name": "can_open_iron_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                },
                {
                    "name": "can_pass_doors",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether a path can be created through a door",
                },
                {
                    "name": "can_path_from_air",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can start pathing when in the air",
                },
                {
                    "name": "can_path_over_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                },
                {
                    "name": "can_path_over_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                },
                {
                    "name": "can_sink",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                },
                {
                    "name": "can_swim",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                },
                {
                    "name": "can_walk",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                },
                {
                    "name": "can_walk_in_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                },
                {
                    "name": "is_amphibious",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                },
            ],
        },
        "minecraft:navigation.generic": {
            "description": "Allows this entity to generate paths by walking, swimming, flying and/or climbing around and jumping up and down a block.",
            "children": [
                {
                    "name": "avoid_damage_blocks",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                },
                {
                    "name": "avoid_portals",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                },
                {
                    "name": "avoid_sun",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                },
                {
                    "name": "avoid_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid water when creating a path",
                },
                {
                    "name": "blocks_to_avoid",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                },
                {
                    "name": "can_breach",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                },
                {
                    "name": "can_break_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                },
                {
                    "name": "can_jump",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                },
                {
                    "name": "can_open_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                },
                {
                    "name": "can_open_iron_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                },
                {
                    "name": "can_pass_doors",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether a path can be created through a door",
                },
                {
                    "name": "can_path_from_air",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can start pathing when in the air",
                },
                {
                    "name": "can_path_over_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                },
                {
                    "name": "can_path_over_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                },
                {
                    "name": "can_sink",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                },
                {
                    "name": "can_swim",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                },
                {
                    "name": "can_walk",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                },
                {
                    "name": "can_walk_in_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                },
                {
                    "name": "is_amphibious",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                },
            ],
        },
        "minecraft:navigation.hover": {
            "description": "Allows this entity to generate paths in the air like the vanilla Bees do. Keeps them from falling out of the skies and doing predictive movement.",
            "children": [
                {
                    "name": "avoid_damage_blocks",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                },
                {
                    "name": "avoid_portals",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                },
                {
                    "name": "avoid_sun",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                },
                {
                    "name": "avoid_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid water when creating a path",
                },
                {
                    "name": "blocks_to_avoid",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                },
                {
                    "name": "can_breach",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                },
                {
                    "name": "can_break_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                },
                {
                    "name": "can_jump",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                },
                {
                    "name": "can_open_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                },
                {
                    "name": "can_open_iron_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                },
                {
                    "name": "can_pass_doors",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether a path can be created through a door",
                },
                {
                    "name": "can_path_from_air",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can start pathing when in the air",
                },
                {
                    "name": "can_path_over_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                },
                {
                    "name": "can_path_over_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                },
                {
                    "name": "can_sink",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                },
                {
                    "name": "can_swim",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                },
                {
                    "name": "can_walk",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                },
                {
                    "name": "can_walk_in_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                },
                {
                    "name": "is_amphibious",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                },
            ],
        },
        "minecraft:navigation.swim": {
            "description": "Allows this entity to generate paths that include water.",
            "children": [
                {
                    "name": "avoid_damage_blocks",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                },
                {
                    "name": "avoid_portals",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                },
                {
                    "name": "avoid_sun",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                },
                {
                    "name": "avoid_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid water when creating a path",
                },
                {
                    "name": "blocks_to_avoid",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                },
                {
                    "name": "can_breach",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                },
                {
                    "name": "can_break_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                },
                {
                    "name": "can_jump",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                },
                {
                    "name": "can_open_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                },
                {
                    "name": "can_open_iron_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                },
                {
                    "name": "can_pass_doors",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether a path can be created through a door",
                },
                {
                    "name": "can_path_from_air",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can start pathing when in the air",
                },
                {
                    "name": "can_path_over_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                },
                {
                    "name": "can_path_over_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                },
                {
                    "name": "can_sink",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                },
                {
                    "name": "can_swim",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                },
                {
                    "name": "can_walk",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                },
                {
                    "name": "can_walk_in_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                },
                {
                    "name": "is_amphibious",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                },
            ],
        },
        "minecraft:navigation.walk": {
            "description": "Allows this entity to generate paths by walking around and jumping up and down a block like regular mobs.",
            "children": [
                {
                    "name": "avoid_damage_blocks",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                },
                {
                    "name": "avoid_portals",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                },
                {
                    "name": "avoid_sun",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                },
                {
                    "name": "avoid_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder to avoid water when creating a path",
                },
                {
                    "name": "blocks_to_avoid",
                    "type": "List",
                    "defaultValue": "",
                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                },
                {
                    "name": "can_breach",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                },
                {
                    "name": "can_break_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                },
                {
                    "name": "can_jump",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                },
                {
                    "name": "can_open_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                },
                {
                    "name": "can_open_iron_doors",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                },
                {
                    "name": "can_pass_doors",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether a path can be created through a door",
                },
                {
                    "name": "can_path_from_air",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder that it can start pathing when in the air",
                },
                {
                    "name": "can_path_over_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                },
                {
                    "name": "can_path_over_water",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                },
                {
                    "name": "can_sink",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                },
                {
                    "name": "can_swim",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                },
                {
                    "name": "can_walk",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                },
                {
                    "name": "can_walk_in_lava",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                },
                {
                    "name": "is_amphibious",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                },
            ],
        },
        "minecraft:peek": {
            "description": "Defines the entity's 'peek' behavior, defining the events that should be called during it.",
            "children": [
                {
                    "name": "on_close",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to call when the entity is done peeking.",
                },
                {
                    "name": "on_open",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to call when the entity starts peeking.",
                },
                {
                    "name": "on_target_open",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to call when the entity's target entity starts peeking.",
                },
            ],
        },
        "minecraft:physics": {
            "description": "Defines physics properties of an actor, including if it is affected by gravity or if it collides with objects.",
            "children": [
                {
                    "name": "has_collision",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether or not the object collides with things.",
                },
                {
                    "name": "has_gravity",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether or not the entity is affected by gravity.",
                },
                {
                    "name": "push_towards_closest_space",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether or not the entity should be pushed towards the nearest open area when stuck inside a block.",
                },
            ],
        },
        "minecraft:preferred_path": {
            "description": "Specifies costing information for mobs that prefer to walk on preferred paths.",
            "children": [
                {
                    "name": "default_block_cost",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Cost for non-preferred blocks",
                },
                {
                    "name": "jump_cost",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "Added cost for jumping up a node",
                },
                {
                    "name": "max_fall_blocks",
                    "type": "Integer",
                    "defaultValue": "3",
                    "description": "Distance mob can fall without taking damage",
                },
                {
                    "name": "preferred_path_blocks",
                    "type": "List",
                    "defaultValue": "",
                    "description": "A list of blocks with their associated cost",
                },
            ],
        },
        "minecraft:projectile": {
            "description": "Allows the entity to be a thrown entity.",
            "children": [
                {
                    "name": "angle_offset",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Determines the angle at which the projectile is thrown",
                },
                {
                    "name": "catch_fire",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the entity hit will be set on fire",
                },
                {
                    "name": "crit_particle_on_hurt",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the projectile will produce additional particles when a critical hit happens",
                },
                {
                    "name": "destroy_on_hurt",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity will be destroyed when hit",
                },
                {
                    "name": "filter",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Entity Definitions defined here can't be hurt by the projectile",
                },
                {
                    "name": "fire_affected_by_griefing",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, whether the projectile causes fire is affected by the mob griefing game rule",
                },
                {
                    "name": "gravity",
                    "type": "Decimal",
                    "defaultValue": "0.05",
                    "description": "The gravity applied to this entity when thrown. The higher the value, the faster the entity falls",
                },
                {
                    "name": "hit_nearest_passenger",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, when hitting a vehicle, and there's at least one passenger in the vehicle, the damage will be dealt to the passenger closest to the projectile impact point. If there are no passengers, this setting does nothing.",
                },
                {
                    "name": "hit_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The sound that plays when the projectile hits something",
                },
                {
                    "name": "homing",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the projectile homes in to the nearest entity",
                },
                {
                    "name": "ignored_entities",
                    "type": "Array",
                    "defaultValue": "",
                    "description": "[EXPERIMENTAL] An array of strings defining the types of entities that this entity does not collide with.",
                },
                {
                    "name": "inertia",
                    "type": "Decimal",
                    "defaultValue": "0.99",
                    "description": "The fraction of the projectile's speed maintained every frame while traveling in air",
                },
                {
                    "name": "is_dangerous",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the projectile will be treated as dangerous to the players",
                },
                {
                    "name": "knockback",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the projectile will knock back the entity it hits",
                },
                {
                    "name": "lightning",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the entity hit will be struck by lightning",
                },
                {
                    "name": "liquid_inertia",
                    "type": "Decimal",
                    "defaultValue": "0.6",
                    "description": "The fraction of the projectile's speed maintained every frame while traveling in water",
                },
                {
                    "name": "multiple_targets",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the projectile can hit multiple entities per flight",
                },
                {
                    "name": "offset",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[0, 0, 0]",
                    "description": "The offset from the entity's anchor where the projectile will spawn",
                },
                {
                    "name": "on_fire_time",
                    "type": "Decimal",
                    "defaultValue": "5",
                    "description": "Time in seconds that the entity hit will be on fire for",
                },
                {
                    "name": "particle",
                    "type": "String",
                    "defaultValue": "iconcrack",
                    "description": "Particle to use upon collision",
                },
                {
                    "name": "potion_effect",
                    "type": "Integer",
                    "defaultValue": "-1",
                    "description": "Defines the effect the arrow will apply to the entity it hits",
                },
                {
                    "name": "power",
                    "type": "Decimal",
                    "defaultValue": "1.3",
                    "description": "Determines the velocity of the projectile",
                },
                {
                    "name": "reflect_on_hurt",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity will be reflected back when hit",
                },
                {
                    "name": "semi_random_diff_damage",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, damage will be randomized based on damage and speed",
                },
                {
                    "name": "shoot_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The sound that plays when the projectile is shot",
                },
                {
                    "name": "shoot_target",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the projectile will be shot towards the target of the entity firing it",
                },
                {
                    "name": "should_bounce",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the projectile will bounce upon hit",
                },
                {
                    "name": "splash_potion",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, the projectile will be treated like a splash potion",
                },
                {
                    "name": "splash_range",
                    "type": "Decimal",
                    "defaultValue": "4",
                    "description": "Radius in blocks of the 'splash' effect",
                },
                {
                    "name": "uncertainty_base",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "The base accuracy. Accuracy is determined by the formula uncertaintyBase - difficultyLevel * uncertaintyMultiplier",
                },
                {
                    "name": "uncertainty_multiplier",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Determines how much difficulty affects accuracy. Accuracy is determined by the formula uncertaintyBase - difficultyLevel * uncertaintyMultiplier",
                },
            ],
        },
        "minecraft:pushable": {
            "description": "Defines what can push an entity between other entities and pistons.",
            "children": [
                {
                    "name": "is_pushable",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether the entity can be pushed by other entities.",
                },
                {
                    "name": "is_pushable_by_piston",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "Whether the entity can be pushed by pistons safely.",
                },
            ],
        },
        "minecraft:raid_trigger": {
            "description": "Attempts to trigger a raid at the entity's location.",
            "children": [
                {
                    "name": "triggered_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to run when a raid is triggered on the village.",
                },
            ],
        },
        "minecraft:rail_movement": {
            "description": "Defines the entity's movement on the rails. An entity with this component is only allowed to move on the rail.",
            "children": [
                {
                    "name": "max_speed",
                    "type": "Decimal",
                    "defaultValue": "0.4",
                    "description": "Maximum speed that this entity will move at when on the rail.",
                },
            ],
        },
        "minecraft:rail_sensor": {
            "description": "",
            "children": [
                {
                    "name": "check_block_types",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, on tick this entity will trigger its on_deactivate behavior",
                },
                {
                    "name": "eject_on_activate",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, this entity will eject all of its riders when it passes over an activated rail",
                },
                {
                    "name": "eject_on_deactivate",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity will eject all of its riders when it passes over a deactivated rail",
                },
                {
                    "name": "on_activate",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to call when the rail is activated",
                },
                {
                    "name": "on_deactivate",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to call when the rail is deactivated",
                },
                {
                    "name": "tick_command_block_on_activate",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, command blocks will start ticking when passing over an activated rail",
                },
                {
                    "name": "tick_command_block_on_deactivate",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If false, command blocks will stop ticking when passing over a deactivated rail",
                },
            ],
        },
        "minecraft:ravager_blocked": {
            "description": "Defines the ravager's response to their melee attack being blocked.",
            "children": [
                {
                    "name": "knockback_strength",
                    "type": "Decimal",
                    "defaultValue": "3.0",
                    "description": "The strength with which blocking entities should be knocked back",
                },
                {
                    "name": "reaction_choices",
                    "type": "List",
                    "defaultValue": "[ ]",
                    "description": "A list of weighted responses to the melee attack being blocked",
                },
            ],
        },
        "minecraft:reflect_projectiles": {
            "description": "[EXPERIMENTAL] Allows an entity to reflect projectiles.",
            "children": [
                {
                    "name": "azimuth_angle",
                    "type": "Molang",
                    "defaultValue": "0",
                    "description": "[EXPERIMENTAL] A Molang expression defining the angle in degrees to add to the projectile's y axis rotation.",
                },
                {
                    "name": "elevation_angle",
                    "type": "Molang",
                    "defaultValue": "0",
                    "description": "[EXPERIMENTAL] A Molang expression defining the angle in degrees to add to the projectile's x axis rotation.",
                },
                {
                    "name": "reflected_projectiles",
                    "type": "Array",
                    "defaultValue": "",
                    "description": "[EXPERIMENTAL] An array of strings defining the types of projectiles that are reflected when they hit the entity.",
                },
                {
                    "name": "reflection_scale",
                    "type": "Molang",
                    "defaultValue": "1",
                    "description": "[EXPERIMENTAL] A Molang expression defining the velocity scaling of the reflected projectile. Values below 1 decrease the projectile's velocity, and values above 1 increase it.",
                },
                {
                    "name": "reflection_sound",
                    "type": "String",
                    "defaultValue": "reflect",
                    "description": "[EXPERIMENTAL] A string defining the name of the sound event to be played when a projectile is reflected. \"reflect\" unless specified.",
                },
            ],
        },
        "minecraft:rideable": {
            "description": "Determines whether this entity can be ridden. Allows specifying the different seat positions and quantity.",
            "children": [
                {
                    "name": "controlling_seat",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The seat that designates the driver of the entity. This is only observed by the horse/boat styles of riding; minecarts/entities with \"minecraft:controlled_by_player\" give control to any player in any seat.",
                },
                {
                    "name": "crouching_skip_interact",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, this entity can't be interacted with if the entity interacting with it is crouching",
                },
                {
                    "name": "family_types",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of entities that can ride this entity",
                },
                {
                    "name": "interact_text",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The text to display when the player can interact with the entity when playing with Touch-screen controls",
                },
                {
                    "name": "passenger_max_width",
                    "type": "Decimal",
                    "defaultValue": "0.00",
                    "description": "The max width a mob can be to be a passenger. A value of 0 ignores this parameter.",
                },
                {
                    "name": "priority",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "This field may exist in old data but isn't used by minecraft:rideable.",
                },
                {
                    "name": "pull_in_entities",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity will pull in entities that are in the correct family_types into any available seats",
                },
                {
                    "name": "rider_can_interact",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this entity will be picked when looked at by the rider",
                },
                {
                    "name": "seat_count",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The number of entities that can ride this entity at the same time",
                },
                {
                    "name": "seats",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of positions and number of riders for each position for entities riding this entity",
                    "children": [
                        {
                            "name": "lock_rider_rotation",
                            "type": "Decimal",
                            "defaultValue": "181",
                            "description": "Angle in degrees that a rider is allowed to rotate while riding this entity. Omit this property for no limit",
                        },
                        {
                            "name": "max_rider_count",
                            "type": "Integer",
                            "defaultValue": "seat_count",
                            "description": "Defines the maximum number of riders that can be riding this entity for this seat to be valid",
                        },
                        {
                            "name": "min_rider_count",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "Defines the minimum number of riders that need to be riding this entity before this seat can be used",
                        },
                        {
                            "name": "position",
                            "type": "Vector [a, b, c]",
                            "defaultValue": "[0, 0, 0]",
                            "description": "Position of this seat relative to this entity's position",
                        },
                        {
                            "name": "rotate_rider_by",
                            "type": "Molang",
                            "defaultValue": "0",
                            "description": "Offset to rotate riders by",
                        },
                    ],
                },
            ],
        },
        "minecraft:scale_by_age": {
            "description": "Defines the entity's size interpolation based on the entity's age.",
            "children": [
                {
                    "name": "end_scale",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Ending scale of the entity when it's fully grown.",
                },
                {
                    "name": "start_scale",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Initial scale of the newborn entity.",
                },
            ],
        },
        "minecraft:scheduler": {
            "description": "Fires off scheduled mob events at time of day events.",
            "children": [
                {
                    "name": "scheduled_events",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of triggers that fire when the conditions match the given filter criteria. If any filter criteria overlap the first defined event will be picked.",
                },
            ],
        },
        "minecraft:shareables": {
            "description": "Defines a list of items the mob wants to share or pick up. Each item must have the following parameters:",
            "children": [
                {
                    "name": "all_items",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "A bucket for all other items in the game. Note this category is always least priority items.",
                },
                {
                    "name": "all_items_max_amount",
                    "type": "Integer",
                    "defaultValue": "-1",
                    "description": "Maximum number of this item the mob will hold.",
                },
                {
                    "name": "all_items_surplus_amount",
                    "type": "Integer",
                    "defaultValue": "-1",
                    "description": "Number of this item considered extra that the entity wants to share.",
                },
                {
                    "name": "all_items_want_amount",
                    "type": "Integer",
                    "defaultValue": "-1",
                    "description": "Number of this item this entity wants to share.",
                },
                {
                    "name": "items",
                    "type": "List",
                    "defaultValue": "",
                },
                {
                    "name": "singular_pickup",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Controls if the mob is able to pick up more of the same item if it is already holding that item",
                },
            ],
        },
        "minecraft:shooter": {
            "description": "Defines the entity's ranged attack behavior. The \"minecraft:behavior.ranged_attack\" goal uses this component to determine which projectiles to shoot.",
            "children": [
                {
                    "name": "aux_val",
                    "type": "Integer",
                    "defaultValue": "-1",
                    "description": "ID of the Potion effect for the default projectile to be applied on hit.",
                },
                {
                    "name": "def",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Actor definition to use as the default projectile for the ranged attack. The actor definition must have the projectile component to be able to be shot as a projectile.",
                },
                {
                    "name": "magic",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Sets whether the projectiles being used are flagged as magic. If set, the ranged attack goal will not be used at the same time as other magic goals, such as minecraft:behavior.drink_potion",
                },
                {
                    "name": "power",
                    "type": "Decimal",
                    "defaultValue": "0.00",
                    "description": "Velocity in which the projectiles will be shot at. A power of 0 will be overwritten by the default projectile throw power.",
                },
                {
                    "name": "projectiles",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of projectiles that can be used by the shooter. Projectiles are evaluated in the order of the list; After a projectile is chosen, the rest of the list is ignored.",
                },
                {
                    "name": "sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sound that is played when the shooter shoots a projectile.",
                },
            ],
        },
        "minecraft:sittable": {
            "description": "Defines the entity's 'sit' state.",
            "children": [
                {
                    "name": "sit_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to run when the entity enters the 'sit' state",
                },
                {
                    "name": "stand_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to run when the entity exits the 'sit' state",
                },
            ],
        },
        "minecraft:spawn_entity": {
            "description": "Adds a timer after which this entity will spawn another entity or item (similar to vanilla's chicken's egg-laying behavior).",
            "children": [
                {
                    "name": "filters",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "If present, the specified entity will only spawn if the filter evaluates to true.",
                },
                {
                    "name": "max_wait_time",
                    "type": "Integer",
                    "defaultValue": "600",
                    "description": "Maximum amount of time to randomly wait in seconds before another entity is spawned.",
                },
                {
                    "name": "min_wait_time",
                    "type": "Integer",
                    "defaultValue": "300",
                    "description": "Minimum amount of time to randomly wait in seconds before another entity is spawned.",
                },
                {
                    "name": "num_to_spawn",
                    "type": "Integer",
                    "defaultValue": "1",
                    "description": "The number of entities of this type to spawn each time that this triggers.",
                },
                {
                    "name": "should_leash",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this the spawned entity will be leashed to the parent.",
                },
                {
                    "name": "single_use",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If true, this component will only ever spawn the specified entity once.",
                },
                {
                    "name": "spawn_entity",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Identifier of the entity to spawn, leave empty to spawn the item defined by \"spawn_item\" instead.",
                },
                {
                    "name": "spawn_event",
                    "type": "String",
                    "defaultValue": "minecraft:entity_born",
                    "description": "Event to call on the spawned entity when it spawns.",
                },
                {
                    "name": "spawn_item",
                    "type": "String",
                    "defaultValue": "egg",
                    "description": "Item identifier of the item to spawn.",
                },
                {
                    "name": "spawn_item_event",
                    "type": "Trigger",
                    "defaultValue": "",
                    "description": "Event to call on this entity when the item is spawned.",
                },
                {
                    "name": "spawn_method",
                    "type": "String",
                    "defaultValue": "born",
                    "description": "Method to use to spawn the entity.",
                },
                {
                    "name": "spawn_sound",
                    "type": "String",
                    "defaultValue": "plop",
                    "description": "Identifier of the sound effect to play when the entity is spawned.",
                },
            ],
        },
        "minecraft:tameable": {
            "description": "Defines the rules for a mob to be tamed by the player.",
            "children": [
                {
                    "name": "probability",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "The chance of taming the entity with each item use between 0.0 and 1.0, where 1.0 is 100%",
                },
                {
                    "name": "tame_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to run when this entity becomes tamed",
                },
                {
                    "name": "tame_items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of items that can be used to tame this entity",
                },
            ],
        },
        "minecraft:tamemount": {
            "description": "Allows the Entity to be tamed by mounting it.",
            "children": [
                {
                    "name": "attempt_temper_mod",
                    "type": "Integer",
                    "defaultValue": "5",
                    "description": "The amount the entity's temper will increase when mounted.",
                },
                {
                    "name": "autoRejectItems",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "The list of items that, if carried while interacting with the entity, will anger it.",
                    "children": [
                        {
                            "name": "item",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Name of the item this entity dislikes and will cause it to get angry if used while untamed.",
                        },
                    ],
                },
                {
                    "name": "feed_items",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "The list of items that can be used to increase the entity's temper and speed up the taming process.",
                    "children": [
                        {
                            "name": "item",
                            "type": "String",
                            "defaultValue": "",
                            "description": "Name of the item this entity likes and can be used to increase this entity's temper.",
                        },
                        {
                            "name": "temper_mod",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "The amount of temper this entity gains when fed this item.",
                        },
                    ],
                },
                {
                    "name": "feed_text",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The text that shows in the feeding interact button.",
                },
                {
                    "name": "max_temper",
                    "type": "Integer",
                    "defaultValue": "100",
                    "description": "The maximum value for the entity's random starting temper.",
                },
                {
                    "name": "min_temper",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The minimum value for the entity's random starting temper.",
                },
                {
                    "name": "ride_text",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The text that shows in the riding interact button.",
                },
                {
                    "name": "tame_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event that triggers when the entity becomes tamed.",
                },
            ],
        },
        "minecraft:target_nearby_sensor": {
            "description": "Defines the entity's range within which it can see or sense other entities to target them.",
            "children": [
                {
                    "name": "inside_range",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "Maximum distance in blocks that another entity will be considered in the 'inside' range",
                },
                {
                    "name": "must_see",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Whether the other entity needs to be visible to trigger 'inside' events",
                },
                {
                    "name": "on_inside_range",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to call when an entity gets in the inside range. Can specify 'event' for the name of the event and 'target' for the target of the event",
                },
                {
                    "name": "on_outside_range",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to call when an entity gets in the outside range. Can specify 'event' for the name of the event and 'target' for the target of the event",
                },
                {
                    "name": "on_vision_lost_inside_range",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to call when an entity exits visual range. Can specify 'event' for the name of the event and 'target' for the target of the event",
                },
                {
                    "name": "outside_range",
                    "type": "Decimal",
                    "defaultValue": "5",
                    "description": "Maximum distance in blocks that another entity will be considered in the 'outside' range",
                },
            ],
        },
        "minecraft:teleport": {
            "description": "Defines an entity's teleporting behavior.",
            "children": [
                {
                    "name": "dark_teleport_chance",
                    "type": "Decimal",
                    "defaultValue": "0.01",
                    "description": "Modifies the chance that the entity will teleport if the entity is in darkness",
                },
                {
                    "name": "light_teleport_chance",
                    "type": "Decimal",
                    "defaultValue": "0.01",
                    "description": "Modifies the chance that the entity will teleport if the entity is in daylight",
                },
                {
                    "name": "max_random_teleport_time",
                    "type": "Decimal",
                    "defaultValue": "20",
                    "description": "Maximum amount of time in seconds between random teleports",
                },
                {
                    "name": "min_random_teleport_time",
                    "type": "Decimal",
                    "defaultValue": "0",
                    "description": "Minimum amount of time in seconds between random teleports",
                },
                {
                    "name": "random_teleport_cube",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[32, 16, 32]",
                    "description": "Entity will teleport to a random position within the area defined by this cube",
                },
                {
                    "name": "random_teleports",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the entity will teleport randomly",
                },
                {
                    "name": "target_distance",
                    "type": "Decimal",
                    "defaultValue": "16",
                    "description": "Maximum distance the entity will teleport when chasing a target",
                },
                {
                    "name": "target_teleport_chance",
                    "type": "Decimal",
                    "defaultValue": "1",
                    "description": "The chance that the entity will teleport between 0.0 and 1.0. 1.0 means 100%",
                },
            ],
        },
        "minecraft:tick_world": {
            "description": "Defines if the entity ticks the world and the radius around it to tick.",
            "children": [
                {
                    "name": "distance_to_players",
                    "type": "Decimal",
                    "defaultValue": "128",
                    "description": "The distance at which the closest player has to be before this entity despawns. This option will be ignored if never_despawn is true. Min: 128 blocks.",
                },
                {
                    "name": "never_despawn",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, this entity will not despawn even if players are far away. If false, distance_to_players will be used to determine when to despawn.",
                },
                {
                    "name": "radius",
                    "type": "Positive Integer",
                    "defaultValue": "2",
                    "description": "The area around the entity to tick. Default: 2. Allowed range: 2-6.",
                },
            ],
        },
        "minecraft:timer": {
            "description": "Adds a timer after which an event will fire.",
            "children": [
                {
                    "name": "looping",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the timer will restart every time after it fires.",
                },
                {
                    "name": "randomInterval",
                    "type": "Boolean",
                    "defaultValue": "true",
                    "description": "If true, the amount of time on the timer will be random between the min and max values specified in time.",
                },
                {
                    "name": "random_time_choices",
                    "type": "List",
                    "defaultValue": "[ ]",
                    "description": "This is a list of objects, representing one value in seconds that can be picked before firing the event and an optional weight. Incompatible with time.",
                },
                {
                    "name": "time",
                    "type": "Range [a, b]",
                    "defaultValue": "[0.0, 0.0]",
                    "description": "Amount of time in seconds for the timer. Can be specified as a number or a pair of numbers (min and max). Incompatible with random_time_choices.",
                },
                {
                    "name": "time_down_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to fire when the time on the timer runs out.",
                },
            ],
        },
        "minecraft:trade_table": {
            "description": "Defines this entity's ability to trade with players.",
            "children": [
                {
                    "name": "convert_trades_economy",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Determines when the mob transforms, if the trades should be converted when the new mob has a economy_trade_table. When the trades are converted, the mob will generate a new trade list with their new trade table, but then it will try to convert any of the same trades over to have the same enchantments and user data. For example, if the original has a Emerald to Enchanted Iron Sword (Sharpness 1), and the new trade also has an Emerald for Enchanted Iron Sword, then the enchantment will be Sharpness 1.",
                },
                {
                    "name": "display_name",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Name to be displayed while trading with this entity.",
                },
                {
                    "name": "new_screen",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Used to determine if trading with entity opens the new trade screen.",
                },
                {
                    "name": "persist_trades",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Determines if the trades should persist when the mob transforms. This makes it so that the next time the mob is transformed to something with a trade_table or economy_trade_table, then it keeps their trades.",
                },
                {
                    "name": "table",
                    "type": "String",
                    "defaultValue": "",
                    "description": "File path relative to the behavior pack root for this entity's trades.",
                },
            ],
        },
        "minecraft:trail": {
            "description": "Causes an entity to leave a trail of blocks as it moves about the world.",
            "children": [
                {
                    "name": "block_type",
                    "type": "String",
                    "defaultValue": "air",
                    "description": "The type of block you wish to be spawned by the entity as it move about the world. Solid blocks may not be spawned at an offset of (0,0,0).",
                },
                {
                    "name": "spawn_filter",
                    "type": "Minecraft Filter",
                    "defaultValue": "",
                    "description": "One or more conditions that must be met in order to cause the chosen block type to spawn.",
                },
                {
                    "name": "spawn_offset",
                    "type": "Vector [a, b, c]",
                    "defaultValue": "[0, 0, 0]",
                    "description": "The distance from the entities current position to spawn the block. Capped at up to 16 blocks away. The X value is left/right(-/+), the Z value is backward/forward(-/+), the Y value is below/above(-/+).",
                },
            ],
        },
        "minecraft:transformation": {
            "description": "Defines an entity's transformation from the current definition into another",
            "children": [
                {
                    "name": "add",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "List of components to add to the entity after the transformation",
                    "children": [
                        {
                            "name": "component_groups",
                            "type": "List",
                            "defaultValue": "",
                            "description": "Names of component groups to add",
                        },
                    ],
                },
                {
                    "name": "begin_transform_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sound to play when the transformation starts",
                },
                {
                    "name": "delay",
                    "type": "JSON Object",
                    "defaultValue": "",
                    "description": "Defines the properties of the delay for the transformation",
                    "children": [
                        {
                            "name": "block_assist_chance",
                            "type": "Decimal",
                            "defaultValue": "0",
                            "description": "Chance that the entity will look for nearby blocks that can speed up the transformation. Value must be between 0.0 and 1.0",
                        },
                        {
                            "name": "block_chance",
                            "type": "Decimal",
                            "defaultValue": "0",
                            "description": "Chance that, once a block is found, will help speed up the transformation",
                        },
                        {
                            "name": "block_max",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "Maximum number of blocks the entity will look for to aid in the transformation. If not defined or set to 0, it will be set to the block radius",
                        },
                        {
                            "name": "block_radius",
                            "type": "Integer",
                            "defaultValue": "0",
                            "description": "Distance in Blocks that the entity will search for blocks that can help the transformation",
                        },
                        {
                            "name": "block_types",
                            "type": "List",
                            "defaultValue": "",
                            "description": "List of blocks that can help the transformation of this entity",
                        },
                        {
                            "name": "range_max",
                            "type": "Decimal",
                            "defaultValue": "0",
                            "description": "Time in seconds to be added to value to have the maximum random time range value until the entity transforms (if non-zero then the time in seconds before the entity transforms will be random between value+range_min and value+range_max)",
                        },
                        {
                            "name": "range_min",
                            "type": "Decimal",
                            "defaultValue": "0",
                            "description": "Time in seconds to be added to value to have the minimum random time range value until the entity transforms (if non-zero then the time in seconds before the entity transforms will be random between value+range_min and value+range_max)",
                        },
                        {
                            "name": "value",
                            "type": "Decimal",
                            "defaultValue": "0",
                            "description": "Time in seconds before the entity transforms",
                        },
                    ],
                },
                {
                    "name": "drop_equipment",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Cause the entity to drop all equipment upon transformation",
                },
                {
                    "name": "drop_inventory",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Cause the entity to drop all items in inventory upon transformation",
                },
                {
                    "name": "into",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Entity Definition that this entity will transform into",
                },
                {
                    "name": "keep_level",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If this entity has trades and has leveled up, it should maintain that level after transformation.",
                },
                {
                    "name": "keep_owner",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "If this entity is owned by another entity, it should remain owned after transformation.",
                },
                {
                    "name": "preserve_equipment",
                    "type": "Boolean",
                    "defaultValue": "false",
                    "description": "Cause the entity to keep equipment after going through transformation",
                },
                {
                    "name": "transformation_sound",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Sound to play when the entity is done transforming",
                },
            ],
        },
        "minecraft:trusting": {
            "description": "Defines the rules for a mob to trust players.",
            "children": [
                {
                    "name": "probability",
                    "type": "Decimal",
                    "defaultValue": "1.00",
                    "description": "The chance of the entity trusting with each item use between 0.0 and 1.0, where 1.0 is 100%.",
                },
                {
                    "name": "trust_event",
                    "type": "String",
                    "defaultValue": "",
                    "description": "Event to run when this entity becomes trusting.",
                },
                {
                    "name": "trust_items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "The list of items that can be used to get the entity to trust players.",
                },
            ],
        },
        "minecraft:variable_max_auto_step": {
            "description": "Entities with this component will have a maximum auto step height that is different depending on whether they are on a block that prevents jumping. Incompatible with \"runtime_identifier\": \"minecraft:horse\".",
            "children": [
                {
                    "name": "base_value",
                    "type": "Decimal",
                    "defaultValue": "0.5625",
                    "description": "The maximum auto step height when on any other block.",
                },
                {
                    "name": "controlled_value",
                    "type": "Decimal",
                    "defaultValue": "0.5625",
                    "description": "The maximum auto step height when on any other block and controlled by the player.",
                },
                {
                    "name": "jump_prevented_value",
                    "type": "Decimal",
                    "defaultValue": "0.5625",
                    "description": "The maximum auto step height when on a block that prevents jumping.",
                },
            ],
        },
        "minecraft:water_movement": {
            "description": "",
            "children": [
                {
                    "name": "drag_factor",
                    "type": "Decimal",
                    "defaultValue": "0.8",
                    "description": "Drag factor to determine movement speed when in water.",
                },
            ],
        },
    },
    "entityProperty": {
        "minecraft:ambient_sound_interval": {
            "description": "Sets the entity's delay between playing its ambient sound.",
            "children": [
                {
                    "name": "event_name",
                    "type": "String",
                    "defaultValue": "ambient",
                    "description": "Level sound event to be played as the ambient sound.",
                },
                {
                    "name": "event_names",
                    "type": "Array",
                    "defaultValue": "",
                },
                {
                    "name": "range",
                    "type": "Decimal",
                    "defaultValue": "16.000000",
                    "description": "Maximum time in seconds to randomly add to the ambient sound delay time.",
                },
                {
                    "name": "value",
                    "type": "Decimal",
                    "defaultValue": "8.000000",
                    "description": "Minimum time in seconds before the entity plays its ambient sound again.",
                },
            ],
        },
        "minecraft:color": {
            "description": "Defines the entity's color. Only works on vanilla entities that have predefined color values (sheep, llama, shulker).",
            "children": [
                {
                    "name": "value",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The Palette Color value of the entity.",
                },
            ],
        },
        "minecraft:color2": {
            "description": "Defines the entity's second texture color. Only works on vanilla entities that have a second predefined color values (tropical fish).",
            "children": [
                {
                    "name": "value",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The second Palette Color value of the entity.",
                },
            ],
        },
        "minecraft:default_look_angle": {
            "description": "Sets this entity's default head rotation angle.",
            "children": [
                {
                    "name": "value",
                    "type": "Decimal",
                    "defaultValue": "0.0f",
                    "description": "Angle in degrees.",
                },
            ],
        },
        "minecraft:equipment": {
            "description": "Sets the Equipment table to use for this Entity.",
            "children": [
                {
                    "name": "slot_drop_chance",
                    "type": "List",
                    "defaultValue": "",
                    "description": "A list of slots with the chance to drop an equipped item from that slot.",
                },
                {
                    "name": "table",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The file path to the equipment table, relative to the behavior pack's root.",
                },
            ],
        },
        "minecraft:flying_speed": {
            "description": "Speed in Blocks that this entity flies at.",
            "children": [
                {
                    "name": "value",
                    "type": "Decimal",
                    "defaultValue": "0.02",
                    "description": "Flying speed in blocks per tick.",
                },
            ],
        },
        "minecraft:friction_modifier": {
            "description": "Defines how much friction affects this entity.",
            "children": [
                {
                    "name": "value",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The higher the number, the more the friction affects this entity. A value of 1.0 means regular friction, while 2.0 means twice as much.",
                },
            ],
        },
        "minecraft:ground_offset": {
            "description": "Sets the offset from the ground that the entity is actually at.",
            "children": [
                {
                    "name": "value",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "The value of the entity's offset from the terrain, in blocks.",
                },
            ],
        },
        "minecraft:is_dyeable": {
            "description": "Allows dyes to be used on this entity to change its color.",
            "children": [
                {
                    "name": "interact_text",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The text that will display when interacting with this entity with a dye when playing with Touch-screen controls.",
                },
            ],
        },
        "minecraft:item_controllable": {
            "description": "Defines what items can be used to control this entity while ridden.",
            "children": [
                {
                    "name": "control_items",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of items that can be used to control this entity.",
                },
            ],
        },
        "minecraft:loot": {
            "description": "Sets the loot table for what items this entity drops upon death.",
            "children": [
                {
                    "name": "table",
                    "type": "String",
                    "defaultValue": "",
                    "description": "The path to the loot table, relative to the Behavior Pack's root.",
                },
            ],
        },
        "minecraft:mark_variant": {
            "description": "Additional variant value. Can be used to further differentiate variants.",
            "children": [
                {
                    "name": "value",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The ID of the variant. By convention, 0 is the ID of the base entity.",
                },
            ],
        },
        "minecraft:movement_sound_distance_offset": {
            "description": "Sets the offset used to determine the next step distance for playing a movement sound.",
            "children": [
                {
                    "name": "value",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The higher the number, the less often the movement sound will be played.",
                },
            ],
        },
        "minecraft:push_through": {
            "description": "Sets the distance through which the entity can push through.",
            "children": [
                {
                    "name": "value",
                    "type": "Decimal",
                    "defaultValue": "0.0",
                    "description": "The value of the entity's push-through, in blocks.",
                },
            ],
        },
        "minecraft:scale": {
            "description": "Sets the entity's visual size.",
            "children": [
                {
                    "name": "value",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The value of the scale. 1.0 means the entity will appear at the scale they are defined in their model. Higher numbers make the entity bigger.",
                },
            ],
        },
        "minecraft:skin_id": {
            "description": "Skin ID value. Can be used to differentiate skins, such as base skins for villagers.",
            "children": [
                {
                    "name": "value",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The ID of the skin. By convention, 0 is the ID of the base skin.",
                },
            ],
        },
        "minecraft:sound_volume": {
            "description": "Sets the entity's base volume for sound effects.",
            "children": [
                {
                    "name": "value",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The value of the volume the entity uses for sound effects.",
                },
            ],
        },
        "minecraft:type_family": {
            "description": "Defines the families this entity belongs to.",
            "children": [
                {
                    "name": "family",
                    "type": "List",
                    "defaultValue": "",
                    "description": "List of family names.",
                },
            ],
        },
        "minecraft:variant": {
            "description": "Used to differentiate the component group of a variant of an entity from others. (e.g. ocelot, villager)",
            "children": [
                {
                    "name": "value",
                    "type": "Integer",
                    "defaultValue": "0",
                    "description": "The ID of the variant. By convention, 0 is the ID of the base entity.",
                },
            ],
        },
        "minecraft:walk_animation_speed": {
            "description": "Sets the speed multiplier for this entity's walk animation speed.",
            "children": [
                {
                    "name": "value",
                    "type": "Decimal",
                    "defaultValue": "1.0",
                    "description": "The higher the number, the faster the animation for walking plays. A value of 1.0 means normal speed, while 2.0 means twice as fast.",
                },
            ],
        },
    },
    "entityTrigger": {
        "minecraft:on_death": "Only usable by the Ender Dragon. Adds a trigger to call on this entity's death.",
        "minecraft:on_friendly_anger": "Adds a trigger that will run when a nearby entity of the same type as this entity becomes Angry.",
        "minecraft:on_hurt": "Adds a trigger to call when this entity takes damage.",
        "minecraft:on_hurt_by_player": "Adds a trigger to call when this entity is attacked by the player.",
        "minecraft:on_ignite": "Adds a trigger to call when this entity is set on fire.",
        "minecraft:on_start_landing": "Only usable by the Ender Dragon. Adds a trigger to call when this entity lands.",
        "minecraft:on_start_takeoff": "Only usable by the Ender Dragon. Adds a trigger to call when this entity starts flying.",
        "minecraft:on_target_acquired": "Adds a trigger to call when this entity finds a target.",
        "minecraft:on_target_escape": "Adds a trigger to call when this entity loses the target it currently has.",
        "minecraft:on_wake_with_owner": "Adds a trigger to call when this pet's owner awakes after sleeping with the pet.",
    },
    "featureType": {
        "minecraft:aggregate_feature": "'minecraft:aggregate_feature' places a collection of features in an arbitary order. All features in the collection use the same input position. Features should not depend on each other, as there is no guarantee on the order the features will be placed.",
        "minecraft:sequence_feature": "'minecraft:sequence_feature' places a collection of features sequentially, in the order they appear in data. The output position of the previous feature is used as the input position for the next. For example, a tree feature is placed at (0, 0, 0) and places blocks up to (0, 10, 0). The next feature in the sequence begins at (0, 10, 0).",
        "minecraft:beards_and_shavers": "'minecraft:beards_and_shavers' will build a 'beard' or 'shave' out space so as to provide a clear space for a feature to place.",
        "minecraft:cave_carver_feature": "'minecraft:cave_carver_feature' carves a cave through the world in the current chunk, and in every chunk around the current chunk in an 8 radial pattern.This feature will also only work when placed specifically in the pass \"pregeneration_pass\".",
        "minecraft:conditional_list": "'minecraft:conditional_list' Places the first suitable feature within a collection.",
        "minecraft:fossil_feature": "'minecraft:fossil_feature' generates a skeletal structure composed of bone blocks and parametric ore blocks.Succeeds if: The fossil is placed.",
        "minecraft:geode_feature": "'minecraft:geode_feature' generates a rock formation to simulate a geode. Each layer of, and block within, the geode can be replaced. Succeeds if: At least one block within the geode is placed.",
        "minecraft:growing_plant_feature": "'minecraft:growing_plant_feature' places a growing plant in the world. A growing plant is a column that is anchored either to the ceiling or the floor, based on its growth direction.",
        "minecraft:nether_cave_carver_feature": "'minecraft:nether_cave_carver_feature' carves a cave through the Nether in the current chunk, and in every chunk around the current chunk in an 8 radial pattern.This feature will also only work when placed specifically in the pass \"pregeneration_pass\".",
        "minecraft:multiface_feature": "'minecraft:multiface_feature' places one or a few multiface blocks on floors/walls/ceilings. Despite the name, any block can be placed by this feature. During placement, existing world blocks are checked to see if this feature can be placed on them based on the list provided in the 'can_place_on' field. If no 'can_replace_on' field is specified, the 'place_block' block can be placed on any existing block.",
        "minecraft:ore_feature": "'minecraft:ore_feature' places a vein of blocks to simulate ore deposits. Despite the name, any block can be placed by this feature. During placement, existing world blocks are checked to see if they can be replaced by the new ore block based on the list provided in the 'may_replace' field of a 'replace_rules' entry. If no 'may_replace' field is specified in a 'replace_rule' entry, the ore block can replace any existing block.",
        "minecraft:partially_exposed_blob_feature": "'minecraft:partially_exposed_blob_feature' generates a blob of the specified block with the specified dimensions For the most part the blob is embedded in the specified surface, however a single side is allowed to be exposed.",
        "minecraft:rect_layout": "'minecraft:rect_layout' scans the surface of a Chunk, calling place() on the surface of each block column.",
        "minecraft:scan_surface": "'minecraft:scan_surface' scans the surface of a Chunk, calling place() on the surface of each block column.",
        "minecraft:scatter_feature": "'minecraft:scatter_feature' scatters a feature throughout a chunk. The 'x', 'y', and 'z' fields are per-coordinate parameters. Note that coordinates represent an offset from the input position, not an absolute position. Coordinates may be a single value, a random distribution, or Molang expression that resolves to a numeric value. The 'coordinate_eval_order' field is provided for finer control of coordinate resolution (particularly when using the 'grid' distribution). 'iterations' controls how many individual placements should occur if the 'scatter_chance' check succeeds. The 'scatter_chance' check happens once, so either all placements will run or none will.",
        "minecraft:sculk_patch_feature": "Feature type 'minecraft:sculk_patch_feature' has not yet been documented.",
        "minecraft:search_feature": "'minecraft:search_feature' sweeps a volume searching for a valid placement location for its referenced feature. The 'search_volume' field specifies the axis-aligned bounding box that defines the boundaries of the search. The search sweeps along the axis defined by the 'search_axis' field, layer by layer. For example, if 'search_axis' = '-x', blocks with greater x values will be checked before blocks with lower x values. Each layer is searched from the bottom-left to the top-right before moving to the next layer along the axis. By default, only one valid position must be found, but this can be altered by specifying the 'required_successes' field. If fewer than the required successes are found, no placement will occur.",
        "minecraft:single_block_feature": "'minecraft:single_block_feature' places a single block in the world. The 'may_place_on' and 'may_replace' fields are allowlists which specify where the block can be placed. If these fields are omitted, the block can be placed anywhere. The block's internal survivability and placement rules can optionally be enforced with the 'enforce_survivability_rules' and 'enforce_placement_rules' fields. These rules are specified per-block and are typically designed to produce high quality gameplay or natural behavior. However, enabling this enforcement may make it harder to debug placement failures.",
        "minecraft:snap_to_surface_feature": "'minecraft:snap_to_surface_feature' snaps the y-value of a feature placement pos to the floor or the ceiling within the provided 'vertical_search_range'. The placement biome is preserved. If the snap position goes outside of the placement biome, placement will fail.",
        "minecraft:structure_template_feature": "'minecraft:structure_template_feature' places a structure in the world. The structure must be stored as a .mcstructure file in the \"structures\" subdirectory of a behavior pack. It is possible to reference structures that are part of other behavior packs, they do not need to come from the same behavior pack as this feature. Constraints can be defined to specify where the structure is allowed to be placed. During placement, the feature will search for a position within the 'adjustment_radius' that satisfies all constraints. If none are found, the structure will not be placed.",
        "minecraft:surface_relative_threshold_feature": "'minecraft:surface_relative_threshold_feature' determines whether the provided position is below the estimated surface level of the world, and places a feature if so.If the provided position is above configured surface or the surface is not available, placement will fail. This feature only works for Overworld generators using world generation 1.18 or later.",
        "minecraft:underwater_cave_carver_feature": "'minecraft:underwater_cave_carver_feature' carves a cave through the world in the current chunk, and in every chunk around the current chunk in an 8 radial pattern.This feature will specifically target creating caves only below sea level.",
        "minecraft:tree_feature": "'minecraft:tree_feature' will place a tree in the world. A tree consists of a column that is anchored to a base block with set parameters for what it can be placed on and canopy that extends from the column.",
        "minecraft:vegetation_patch_feature": "'minecraft:vegetation_patch_feature' scatters a vegetation feature in an area. The vegetation feature’s appearance can be modified by adjusting the radius and depth that it will generate.",
        "minecraft:weighted_random_feature": "'minecraft:weighted_random_feature' randomly selects and places a feature based on a weight value. Weights are relative, with higher values making selection more likely.",
    },
    "molangMath": {
        "math.abs(value)": "Absolute value of value",
        "math.acos(value)": "arccos of value",
        "math.asin(value)": "arcsin of value",
        "math.atan(value)": "arctan of value",
        "math.atan2(y, x)": "arctan of y/x.  NOTE: the order of arguments!",
        "math.ceil(value)": "Round value up to nearest integral number",
        "math.clamp(value, min, max)": "Clamp value to between min and max inclusive",
        "math.cos(value)": "Cosine (in degrees) of value",
        "math.die_roll(num, low, high)": "returns the sum of 'num' random numbers, each with a value from low to high`.  Note: the generated random numbers are not integers like normal dice.  For that, use `math.die_roll_integer`.",
        "math.die_roll_integer(num, low, high)": "returns the sum of 'num' random integer numbers, each with a value from low to high`.  Note: the generated random numbers are integers like normal dice.",
        "math.exp(value)": "Calculates e to the value'th power",
        "math.floor(value)": "Round value down to nearest integral number",
        "math.hermite_blend(value)": "Useful for simple smooth curve interpolation using one of the Hermite Basis functions: `3t^2 - 2t^3`.  Note that while any valid float is a valid input, this function works best in the range [0,1].",
        "math.lerp(start, end, 0_to_1)": "Lerp from start to end via 0_to_1",
        "math.lerprotate(start, end, 0_to_1)": "Lerp the shortest direction around a circle from start degrees to end degrees via 0_to_1",
        "math.ln(value)": "Natural logarithm of value",
        "math.max(A, B)": "Return highest value of A or B",
        "math.min(A, B)": "Return lowest value of A or B",
        "math.min_angle(value)": "Minimize angle magnitude (in degrees) into the range [-180, 180)",
        "math.mod(value, denominator)": "Return the remainder of value / denominator",
        "math.pi": "Returns the float representation of the constant pi.",
        "math.pow(base, exponent)": "Elevates `base` to the `exponent`'th power",
        "math.random(low, high)": "Random value between low and high inclusive",
        "math.random_integer(low, high)": "Random integer value between low and high inclusive",
        "math.round(value)": "Round value to nearest integral number",
        "math.sin(value)": "Sine (in degrees) of value",
        "math.sqrt(value)": "Square root of value",
        "math.trunc(value)": "Round value towards zero",
    },
    "molangQuery": {
        "query.above_top_solid": "Returns the height of the block immediately above the highest solid block at the input (x,z) position",
        "query.actor_count": "Returns the number of actors rendered in the last frame.",
        "query.all": "Requires at least 3 arguments. Evaluates the first argument, then returns 1.0 if all of the following arguments evaluate to the same value as the first. Otherwise it returns 0.0.",
        "query.all_animations_finished": "Only valid in an animation controller.  Returns 1.0 if all animations in the current animation controller state have played through at least once, else it returns 0.0.",
        "query.all_tags": "Returns if the item or block has all of the tags specified.",
        "query.anger_level": "Returns the anger level of the actor [0,n). On errors or if the actor has no anger level, returns 0. Available on the Server only.",
        "query.anim_time": "Returns the time in seconds since the current animation started, else 0.0 if not called within an animation.",
        "query.any": "Requires at least 3 arguments. Evaluates the first argument, then returns 1.0 if any of the following arguments evaluate to the same value as the first. Otherwise it returns 0.0.",
        "query.any_animation_finished": "Only valid in an animation controller.  Returns 1.0 if any animation in the current animation controller state has played through at least once, else it returns 0.0.",
        "query.any_tag": "Returns if the item or block has any of the tags specified.",
        "query.approx_eq": "Returns 1.0 if all of the arguments are within 0.000000 of each other, else 0.0.",
        "query.armor_color_slot": "Takes the armor slot index as a parameter, and returns the color of the armor in the requested slot. The valid values for the armor slot index are 0 (head), 1 (chest), 2 (legs), 3 (feet) and 4 (body).",
        "query.armor_damage_slot": "Takes the armor slot index as a parameter, and returns the damage value of the requested slot. The valid values for the armor slot index are 0 (head), 1 (chest), 2 (legs), 3 (feet) and 4 (body). Support for entities other than players may be limited, as the damage value is not always available on clients.",
        "query.armor_material_slot": "Takes the armor slot index as a parameter, and returns the armor material type in the requested armor slot. The valid values for the armor slot index are 0 (head), 1 (chest), 2 (legs) and 3 (feet).",
        "query.armor_texture_slot": "Takes the armor slot index as a parameter, and returns the texture type of the requested slot. The valid values for the armor slot index are 0 (head), 1 (chest), 2 (legs), 3 (feet) and 4 (body).",
        "query.average_frame_time": "Returns the time in *seconds* of the average frame time over the last 'n' frames.  If an argument is passed, it is assumed to be the number of frames in the past that you wish to query.  'query.average_frame_time' (or the equivalent 'query.average_frame_time(0)') will return the frame time of the frame before the current one.  'query.average_frame_time(1)' will return the average frame time of the previous two frames.  Currently we store the history of the last 30 frames, although note that this may change in the future.  Asking for more frames will result in only sampling the number of frames stored.",
        "query.block_face": "Returns the block face for this (only valid for certain triggers such as placing blocks, or interacting with block) (Down=0.0, Up=1.0, North=2.0, South=3.0, West=4.0, East=5.0, Undefined=6.0).",
        "query.block_has_all_tags": "Takes a world-origin-relative position and one or more tag names, and returns either 0 or 1 based on if the block at that position has all of the tags provided.",
        "query.block_has_any_tag": "Takes a world-origin-relative position and one or more tag names, and returns either 0 or 1 based on if the block at that position has any of the tags provided.",
        "query.block_neighbor_has_all_tags": "Takes a block-relative position and one or more tag names, and returns either 0 or 1 based on if the block at that position has all of the tags provided.",
        "query.block_neighbor_has_any_tag": "Takes a block-relative position and one or more tag names, and returns either 0 or 1 based on if the block at that position has any of the tags provided.",
        "query.block_property": "(No longer available in pack min_engine_version 1.20.40.) Returns the value of the associated block's Block State.",
        "query.block_state": "Returns the value of the associated block's Block State.",
        "query.blocking": "Returns 1.0 if the entity is blocking, else it returns 0.0.",
        "query.body_x_rotation": "Returns the body pitch rotation if called on an actor, else it returns 0.0.",
        "query.body_y_rotation": "Returns the body yaw rotation if called on an actor, else it returns 0.0.",
        "query.bone_aabb": "Returns the axis aligned bounding box of a bone as a struct with members '.min', '.max', along with '.x', '.y', and '.z' values for each.",
        "query.bone_orientation_matrix": "Takes the name of the bone as an argument. Returns the bone orientation (as a matrix) of the desired bone provided it exists in the queryable geometry of the mob, else this returns the identity matrix and throws a content error.",
        "query.bone_orientation_trs": "TRS stands for Translate/Rotate/Scale.  Takes the name of the bone as an argument.  Returns the bone orientation matrix decomposed into the component translation/rotation/scale parts of the desired bone provided it exists in the queryable geometry of the mob, else this returns the identity matrix and throws a content error.  The returned value is returned as a variable of type 'struct' with members '.t', '.r', and '.s', each with members '.x', '.y', and '.z', and can be accessed as per the following example: v.my_variable = q.bone_orientation_trs('rightarm'); return v.my_variable.r.x;",
        "query.bone_origin": "Returns the initial (from the .geo) pivot of a bone as a struct with members '.x', '.y', and '.z'.",
        "query.bone_rotation": "Returns the initial (from the .geo) rotation of a bone as a struct with members '.x', '.y', and '.z' in degrees.",
        "query.camera_distance_range_lerp": "Takes two distances (any order) and return a number from 0 to 1 based on the camera distance between the two ranges clamped to that range.  For example, 'query.camera_distance_range_lerp(10, 20)' will return 0 for any distance less than or equal to 10, 0.2 for a distance of 12, 0.5 for 15, and 1 for 20 or greater.  If you pass in (20, 10), a distance of 20 will return 0.0.",
        "query.camera_rotation": "Returns the rotation of the camera.  Requires one argument representing the rotation axis you would like (0 for x, 1 for y).",
        "query.can_climb": "Returns 1.0 if the entity can climb, else it returns 0.0.",
        "query.can_damage_nearby_mobs": "Returns 1.0 if the entity can damage nearby mobs, else it returns 0.0.",
        "query.can_dash": "Returns 1.0 if the entity can dash, else it returns 0.0",
        "query.can_fly": "Returns 1.0 if the entity can fly, else it returns 0.0.",
        "query.can_power_jump": "Returns 1.0 if the entity can power jump, else it returns 0.0.",
        "query.can_swim": "Returns 1.0 if the entity can swim, else it returns 0.0.",
        "query.can_walk": "Returns 1.0 if the entity can walk, else it returns 0.0.",
        "query.cape_flap_amount": "Returns value between 0.0 and 1.0 with 0.0 meaning cape is fully down and 1.0 is cape is fully up.",
        "query.cardinal_block_face_placed_on": "DEPRECATED (please use query.block_face instead) Returns the block face for this (only valid for on_placed_by_player trigger) (Down=0.0, Up=1.0, North=2.0, South=3.0, West=4.0, East=5.0, Undefined=6.0).",
        "query.cardinal_facing": "Returns the current facing of the player (Down=0.0, Up=1.0, North=2.0, South=3.0, West=4.0, East=5.0, Undefined=6.0).",
        "query.cardinal_facing_2d": "Returns the current facing of the player ignoring up/down part of the direction (North=2.0, South=3.0, West=4.0, East=5.0, Undefined=6.0).",
        "query.cardinal_player_facing": "Returns the current facing of the player (Down=0.0, Up=1.0, North=2.0, South=3.0, West=4.0, East=5.0, Undefined=6.0).",
        "query.combine_entities": "Combines any valid entity references from all arguments into a single array.  Note that order is not preserved, and duplicates and invalid values are removed.",
        "query.cooldown_time": "Returns the total cooldown time in seconds for the item held or worn by the specified equipment slot name (and if required second numerical slot id), otherwise returns 0. Uses the same name and id that the replaceitem command takes when querying entities.",
        "query.cooldown_time_remaining": "Returns the cooldown time remaining in seconds for specified cooldown type or the item held or worn by the specified equipment slot name (and if required second numerical slot id), otherwise returns 0. Uses the same name and id that the replaceitem command takes when querying entities. Returns highest cooldown if no parameters are supplied.",
        "query.count": "Counts the number of things passed to it (arrays are counted as the number of elements they contain; non-arrays count as 1).",
        "query.current_squish_value": "Returns the squish value for the current entity, or 0.0 if this doesn't make sense.",
        "query.dash_cooldown_progress": "(No longer available in pack min_engine_version 1.20.50.) DEPRECATED. DO NOT USE AFTER 1.20.40. Please see camel.entity.json script.pre_animation for example of how to now process dash cooldown. Returns dash cooldown progress if the entity can dash, else it returns 0.0.",
        "query.day": "Returns the day of the current level.",
        "query.death_ticks": "Returns the elapsed ticks since the mob started dying.",
        "query.debug_output": "debug log a value to the output debug window for builds that have one",
        "query.delta_time": "Returns the time in seconds since the previous frame.",
        "query.distance_from_camera": "Returns the distance of the root of this actor or particle emitter from the camera.",
        "query.effect_emitter_count": "Returns the total number of active emitters of the callee's particle effect type.",
        "query.effect_particle_count": "Returns the total number of active particles of the callee's particle effect type.",
        "query.equipment_count": "Returns the number of equipped armor pieces for an actor from 0 to 5, not counting items held in hands. (To query for hand slots, use query.is_item_equipped or query.is_item_name_any).",
        "query.equipped_item_all_tags": "Takes a slot name followed by any tag you want to check for in the form of 'tag_name' and returns 1 if all of the tags are on that equipped item, 0 otherwise.",
        "query.equipped_item_any_tag": "Takes a slot name followed by any tag you want to check for in the form of 'tag_name' and returns 0 if none of the tags are on that equipped item or 1 if at least 1 tag exists.",
        "query.equipped_item_is_attachable": "Takes the desired hand slot as a parameter (0 or 'main_hand' for main hand, 1 or 'off_hand' for off hand), and returns whether the item is an attachable or not.",
        "query.eye_target_x_rotation": "Returns the X eye rotation of the entity if it makes sense, else it returns 0.0.",
        "query.eye_target_y_rotation": "Returns the Y eye rotation of the entity if it makes sense, else it returns 0.0.",
        "query.facing_target_to_range_attack": "Returns 1.0 if the entity is attacking from range (i.e. minecraft:behavior.ranged_attack), else it returns 0.0.",
        "query.frame_alpha": "Returns the ratio (from 0 to 1) of how much between AI ticks this frame is being rendered.",
        "query.get_actor_info_id": "Returns the integer id of an actor by its string name.",
        "query.get_animation_frame": "Returns the current texture of the item",
        "query.get_default_bone_pivot": "Gets specified axis of the specified bone orientation pivot.",
        "query.get_equipped_item_name": "DEPRECATED (Use query.is_item_name_any instead if possible so names can be changed later without breaking content.) Takes one optional hand slot as a parameter (0 or 'main_hand' for main hand, 1 or 'off_hand' for off hand), and a second parameter (0=default) if you would like the equipped item or any non-zero number for the currently rendered item, and returns the name of the item in the requested slot (defaulting to the main hand if no parameter is supplied) if there is one, otherwise returns ''.",
        "query.get_locator_offset": "Gets specified axis of the specified locator offset.",
        "query.get_name": "DEPRECATED (Use query.is_name_any instead if possible so names can be changed later without breaking content.)Get the name of the mob if there is one, otherwise return ''.",
        "query.get_root_locator_offset": "Gets specified axis of the specified locator offset of the root model.",
        "query.ground_speed": "Returns the ground speed of the entity in meters/second.",
        "query.had_component_group": "Usable only in behavior packs when determining the default value for an entity's Property. Requires one string argument. If the entity is being loaded from data that was last saved with a component_group with the specified name, returns 1.0, otherwise returns 0.0. The purpose of this query is to allow entity definitions to change and still be able to load the correct state of entities.",
        "query.has_any_family": "Returns 1 if the entity has any of the specified families, else 0.",
        "query.has_armor_slot": "Takes the armor slot index as a parameter, and returns 1.0 if the entity has armor in the requested slot, else it returns 0.0. The valid values for the armor slot index are 0 (head), 1 (chest), 2 (legs) and 3 (feet).",
        "query.has_biome_tag": "Returns whether or not a Block Placement Target has a specific biome tag",
        "query.has_block_property": "(No longer available in pack min_engine_version 1.20.40.) Returns 1.0 if the associated block has the given block state or 0.0 if not.",
        "query.has_block_state": "Returns 1.0 if the associated block has the given block state or 0.0 if not.",
        "query.has_cape": "Returns 1.0 if the player has a cape, else it returns 0.0.",
        "query.has_collision": "Returns 1.0 if the entity has collisions enabled, else it returns 0.0.",
        "query.has_dash_cooldown": "Returns 1.0 if the entity has cooldown on its dash, else it returns 0.0",
        "query.has_gravity": "Returns 1.0 if the entity is affected by gravity, else it returns 0.0.",
        "query.has_head_gear": "Returns boolean whether an Actor has an item in their head armor slot or not, or false if no actor in current context",
        "query.has_owner": "Returns true if the entity has an owner ID else it returns false",
        "query.has_player_rider": "Returns 1 if the entity has a player riding it in any seat, else it returns 0.",
        "query.has_property": "Takes one argument: the name of the property on the Actor. Returns 1.0 if a property with the given name exists, 0 otherwise.",
        "query.has_rider": "Returns 1.0 if the entity has a rider, else it returns 0.0",
        "query.has_target": "Returns 1.0 if the entity has a target, else it returns 0.0",
        "query.head_roll_angle": "Returns the roll angle of the head of the entity if it makes sense, else it returns 0.0.",
        "query.head_x_rotation": "Takes one argument as a parameter.  Returns the nth head x rotation of the entity if it makes sense, else it returns 0.0.",
        "query.head_y_rotation": "Takes one argument as a parameter.  Returns the nth head y rotation of the entity if it makes sense, else it returns 0.0. Horses, zombie horses, skeleton horses, donkeys and mules require a second parameter that clamps rotation in degrees.",
        "query.health": "Returns the health of the entity, or 0.0 if it doesn't make sense to call on this entity.",
        "query.heartbeat_interval": "Returns the heartbeat interval of the actor in seconds. Returns 0 when the actor has no heartbeat.",
        "query.heartbeat_phase": "Returns the heartbeat phase of the actor. 0.0 if at start of current heartbeat, 1.0 if at the end. Returns 0 on errors or when the actor has no heartbeat. Available on the Client (Resource Packs) only.",
        "query.heightmap": "Queries Height Map",
        "query.hurt_direction": "Returns the hurt direction for the actor, otherwise returns 0.",
        "query.hurt_time": "Returns the hurt time for the actor, otherwise returns 0.",
        "query.in_range": "Requires 3 numerical arguments: some value, a minimum, and a maximum. If the first argument is between the minimum and maximum (inclusive), returns 1.0. Otherwise returns 0.0.",
        "query.invulnerable_ticks": "Returns the number of ticks of invulnerability the entity has left if it makes sense, else it returns 0.0.",
        "query.is_admiring": "Returns 1.0 if the entity is admiring, else it returns 0.0.",
        "query.is_alive": "Returns 1.0 if the entity is alive, and 0.0 if it's dead.",
        "query.is_angry": "Returns 1.0 if the entity is angry, else it returns 0.0.",
        "query.is_attached": "Returns 1.0 if the entity is attached to another entity (such as being held or worn), else it will return 0.0. Available only with resource packs.",
        "query.is_attached_to_entity": "Returns 1.0 if the actor is attached to an entity, else it will return 0.0.",
        "query.is_avoiding_block": "Returns 1.0 if the entity is fleeing from a block, else it returns 0.0.",
        "query.is_avoiding_mobs": "Returns 1.0 if the entity is fleeing from mobs, else it returns 0.0.",
        "query.is_baby": "Returns 1.0 if the entity is a baby, else it returns 0.0.",
        "query.is_breathing": "Returns 1.0 if the entity is breathing, else it returns 0.0.",
        "query.is_bribed": "Returns 1.0 if the entity has been bribed, else it returns 0.0.",
        "query.is_carrying_block": "Returns 1.0 if the entity is carrying a block, else it returns 0.0.",
        "query.is_casting": "Returns 1.0 if the entity is casting, else it returns 0.0.",
        "query.is_celebrating": "Returns 1.0 if the entity is celebrating, else it returns 0.0.",
        "query.is_celebrating_special": "Returns 1.0 if the entity is doing a special celebration, else it returns 0.0.",
        "query.is_charged": "Returns 1.0 if the entity is charged, else it returns 0.0.",
        "query.is_charging": "Returns 1.0 if the entity is charging, else it returns 0.0.",
        "query.is_chested": "Returns 1.0 if the entity has chests attached to it, else it returns 0.0.",
        "query.is_cooldown_type": "Returns 1.0 if the specified held or worn item has the specified cooldown type name, otherwise returns 0.0. First argument is the cooldown name to check for, second argument is the equipment slot name, and if required third argument is the numerical slot id. For second and third arguments, uses the same name and id that the replaceitem command takes when querying entities.",
        "query.is_crawling": "Returns 1.0 if the entity is crawling, else it returns 0.0",
        "query.is_critical": "Returns 1.0 if the entity is critical, else it returns 0.0.",
        "query.is_croaking": "Returns 1.0 if the entity is croaking, else it returns 0.0.",
        "query.is_dancing": "Returns 1.0 if the entity is dancing, else it returns 0.0.",
        "query.is_delayed_attacking": "Returns 1.0 if the entity is attacking using the delayed attack, else it returns 0.0.",
        "query.is_digging": "Returns 1.0 if the entity is digging, else it returns 0.0.",
        "query.is_eating": "Returns 1.0 if the entity is eating, else it returns 0.0.",
        "query.is_eating_mob": "Returns 1.0 if the entity is eating a mob, else it returns 0.0.",
        "query.is_elder": "Returns 1.0 if the entity is an elder version of it, else it returns 0.0.",
        "query.is_emerging": "Returns 1.0 if the entity is emerging, else it returns 0.0.",
        "query.is_emoting": "Returns 1.0 if the entity is emoting, else it returns 0.0.",
        "query.is_enchanted": "Returns 1.0 if the entity is enchanted, else it returns 0.0.",
        "query.is_feeling_happy": "(No longer available in pack min_engine_version 1.20.50.) DEPRECATED after 1.20.40. Returns 1.0 if behavior.timer_flag_2 is running, else it returns 0.0.",
        "query.is_fire_immune": "Returns 1.0 if the entity is immune to fire, else it returns 0.0.",
        "query.is_first_person": "Returns 1.0 if the entity is being rendered in first person mode, else it returns 0.0.",
        "query.is_ghost": "Returns 1.0 if an entity is a ghost, else it returns 0.0.",
        "query.is_gliding": "Returns 1.0 if the entity is gliding, else it returns 0.0.",
        "query.is_grazing": "Returns 1.0 if the entity is grazing, or 0.0 if not.",
        "query.is_idling": "Returns 1.0 if the entity is idling, else it returns 0.0.",
        "query.is_ignited": "Returns 1.0 if the entity is ignited, else it returns 0.0.",
        "query.is_illager_captain": "Returns 1.0 if the entity is an illager captain, else it returns 0.0.",
        "query.is_in_contact_with_water": "Returns 1.0 if the entity is in contact with any water (water, rain, splash water bottle), else it returns 0.0.",
        "query.is_in_lava": "Returns 1.0 if the entity is in lava, else it returns 0.0.",
        "query.is_in_love": "Returns 1.0 if the entity is in love, else it returns 0.0.",
        "query.is_in_ui": "Returns 1.0 if the entity is rendered as part of the UI, else it returns 0.0.",
        "query.is_in_water": "Returns 1.0 if the entity is in water, else it returns 0.0.",
        "query.is_in_water_or_rain": "Returns 1.0 if the entity is in water or rain, else it returns 0.0.",
        "query.is_interested": "Returns 1.0 if the entity is interested, else it returns 0.0.",
        "query.is_invisible": "Returns 1.0 if the entity is invisible, else it returns 0.0.",
        "query.is_item_equipped": "Takes one optional hand slot as a parameter (0 or 'main_hand' for main hand, 1 or 'off_hand' for off hand), and returns 1.0 if there is an item in the requested slot (defaulting to the main hand if no parameter is supplied), otherwise returns 0.0.",
        "query.is_item_name_any": "Takes an equipment slot name (see the replaceitem command) and an optional slot index value. (The slot index is required for slot names that have multiple slots, for example 'slot.hotbar'.) After that, takes one or more full name (with 'namespace:') strings to check for. Returns 1.0 if an item in the specified slot has any of the specified names, otherwise returns 0.0. An empty string '' can be specified to check for an empty slot. Note that querying slot.enderchest, slot.saddle, slot.armor, or slot.chest will only work in behavior packs. A preferred query to query.get_equipped_item_name, as it can be adjusted by Mojang to avoid breaking content if names are changed.",
        "query.is_jump_goal_jumping": "Returns 1.0 if the entity is doing a jump goal jump, else it returns 0.0.",
        "query.is_jumping": "Returns 1.0 if the entity is jumping, else it returns 0.0.",
        "query.is_laying_down": "Returns 1.0 if the entity is laying down, else it returns 0.0.",
        "query.is_laying_egg": "Returns 1.0 if the entity is laying an egg, else it returns 0.0.",
        "query.is_leashed": "Returns 1.0 if the entity is leashed to something, else it returns 0.0.",
        "query.is_levitating": "Returns 1.0 if the entity is levitating, else it returns 0.0.",
        "query.is_lingering": "Returns 1.0 if the entity is lingering, else it returns 0.0.",
        "query.is_local_player": "Takes no arguments. Returns 1.0 if the entity is the local player for the current game window, else it returns 0.0. In splitscreen returns 0.0 for the other local players for other views. Always returns 0.0 if used in a behavior pack.",
        "query.is_moving": "Returns 1.0 if the entity is moving, else it returns 0.0.",
        "query.is_name_any": "Takes one or more arguments. If the entity's name is any of the specified string values, returns 1.0. Otherwise returns 0.0. A preferred query to query.get_name, as it can be adjusted by Mojang to avoid breaking content if names are changed.",
        "query.is_on_fire": "Returns 1.0 if the entity is on fire, else it returns 0.0.",
        "query.is_on_ground": "Returns 1.0 if the entity is on the ground, else it returns 0.0.",
        "query.is_on_screen": "Returns 1.0 if this is called on an entity at a time when it is known if it is on screen, else it returns 0.0.",
        "query.is_onfire": "Returns 1.0 if the entity is on fire, else it returns 0.0.",
        "query.is_orphaned": "Returns 1.0 if the entity is orphaned, else it returns 0.0.",
        "query.is_owner_identifier_any": "Takes one or more arguments. Returns whether the root actor identifier is any of the specified strings. A preferred query to query.owner_identifier, as it can be adjusted by Mojang to avoid breaking content if names are changed.",
        "query.is_persona_or_premium_skin": "Returns 1.0 if the player has a persona or premium skin, else it returns 0.0.",
        "query.is_playing_dead": "Returns 1.0 if the entity is playing dead, else it returns 0.0.",
        "query.is_powered": "Returns 1.0 if the entity is powered, else it returns 0.0.",
        "query.is_pregnant": "Returns 1.0 if the entity is pregnant, else it returns 0.0.",
        "query.is_ram_attacking": "Returns 1.0 if the entity is using a ram attack, else it returns 0.0.",
        "query.is_resting": "Returns 1.0 if the entity is resting, else it returns 0.0.",
        "query.is_riding": "Returns 1.0 if the entity is riding, else it returns 0.0.",
        "query.is_rising": "(No longer available in pack min_engine_version 1.20.50.) DEPRECATED after 1.20.40. Returns 1.0 if behavior.timer_flag_2 is running, else it returns 0.0.",
        "query.is_roaring": "Returns 1.0 if the entity is currently roaring, else it returns 0.0.",
        "query.is_rolling": "Returns 1.0 if the entity is rolling, else it returns 0.0.",
        "query.is_saddled": "Returns 1.0 if the entity has a saddle, else it returns 0.0.",
        "query.is_scared": "Returns 1.0 if the entity is scared, else it returns 0.0.",
        "query.is_scenting": "(No longer available in pack min_engine_version 1.20.50.) DEPRECATED after 1.20.40. Returns 1.0 if behavior.timer_flag_1 is running, else it returns 0.0.",
        "query.is_searching": "Returns 1.0 if the entity is searching, else it returns 0.0.",
        "query.is_selected_item": "Returns true if the player has selected an item in the inventory, else it returns 0.0.",
        "query.is_shaking": "Returns 1.0 if the entity is casting, else it returns 0.0.",
        "query.is_shaking_wetness": "Returns 1.0 if the entity is shaking water off, else it returns 0.0.",
        "query.is_sheared": "Returns 1.0 if the entity is able to be sheared and is sheared, else it returns 0.0.",
        "query.is_shield_powered": "Returns 1.0f if the entity has an active powered shield if it makes sense, else it returns 0.0.",
        "query.is_silent": "Returns 1.0 if the entity is silent, else it returns 0.0.",
        "query.is_sitting": "Returns 1.0 if the entity is sitting, else it returns 0.0.",
        "query.is_sleeping": "Returns 1.0 if the entity is sleeping, else it returns 0.0.",
        "query.is_sneaking": "Returns 1.0 if the entity is sneaking, else it returns 0.0.",
        "query.is_sneezing": "Returns 1.0 if the entity is sneezing, else it returns 0.0.",
        "query.is_sniffing": "Returns 1.0 if the entity is sniffing, else it returns 0.0.",
        "query.is_sonic_boom": "Returns 1.0 if the entity is using sonic boom, else it returns 0.0.",
        "query.is_spectator": "Returns 1.0 if the entity is spectator, else it returns 0.0.",
        "query.is_sprinting": "Returns 1.0 if the entity is sprinting, else it returns 0.0.",
        "query.is_stackable": "Returns 1.0 if the entity is stackable, else it returns 0.0.",
        "query.is_stalking": "Returns 1.0 if the entity is stalking, else it returns 0.0.",
        "query.is_standing": "Returns 1.0 if the entity is standing, else it returns 0.0.",
        "query.is_stunned": "Returns 1.0 if the entity is currently stunned, else it returns 0.0.",
        "query.is_swimming": "Returns 1.0 if the entity is swimming, else it returns 0.0.",
        "query.is_tamed": "Returns 1.0 if the entity is tamed, else it returns 0.0.",
        "query.is_transforming": "Returns 1.0 if the entity is transforming, else it returns 0.0.",
        "query.is_using_item": "Returns 1.0 if the entity is using an item, else it returns 0.0.",
        "query.is_wall_climbing": "Returns 1.0 if the entity is climbing a wall, else it returns 0.0.",
        "query.item_in_use_duration": "Returns the amount of time an item has been in use in seconds up to the maximum duration, else 0.0 if it doesn't make sense.",
        "query.item_is_charged": "Takes one optional hand slot as a parameter (0 or 'main_hand' for main hand, 1 or 'off_hand' for off hand), and returns 1.0 if the item is charged in the requested slot (defaulting to the main hand if no parameter is supplied), otherwise returns 0.0.",
        "query.item_max_use_duration": "Returns the maximum amount of time the item can be used, else 0.0 if it doesn't make sense.",
        "query.item_remaining_use_duration": "Returns the amount of time an item has left to use, else 0.0 if it doesn't make sense.Item queried is specified by the slot name 'main_hand' or 'off_hand'.Time remaining is normalized using the normalization value, only if one is given, else it is returned in seconds.",
        "query.item_slot_to_bone_name": "query.item_slot_to_bone_name requires one parameter: the name of the equipment slot.  This function returns the name of the bone this entity has mapped to that slot.",
        "query.key_frame_lerp_time": "Returns the ratio between the previous and next key frames.",
        "query.last_frame_time": "Returns the time in *seconds* of the last frame.  If an argument is passed, it is assumed to be the number of frames in the past that you wish to query.  'query.last_frame_time' (or the equivalent 'query.last_frame_time(0)') will return the frame time of the frame before the current one.  'query.last_frame_time(1)' will return the frame time of two frames ago.  Currently we store the history of the last 30 frames, although note that this may change in the future.  Passing an index more than the available data will return the oldest frame stored.",
        "query.last_hit_by_player": "Returns 1.0 if the entity was last hit by the player, else it returns 0.0. If called by the client always returns 0.0.",
        "query.lie_amount": "Returns the lie down amount for the entity.",
        "query.life_span": "Returns the limited life span of an entity, or 0.0 if it lives forever",
        "query.life_time": "Returns the time in seconds since the current animation started, else 0.0 if not called within an animation.",
        "query.lod_index": "Takes an array of distances and returns the zero - based index of which range the actor is in based on distance from the camera. For example, 'query.lod_index(10, 20, 30)' will return 0, 1, or 2 based on whether the mob is less than 10, 20, or 30 units away from the camera, or it will return 3 if it is greater than 30.",
        "query.log": "debug log a value to the content log",
        "query.main_hand_item_max_duration": "Returns the use time maximum duration for the main hand item if it makes sense, else it returns 0.0.",
        "query.main_hand_item_use_duration": "Returns the use time for the main hand item.",
        "query.mark_variant": "Returns the entity's mark variant",
        "query.max_durability": "Returns the max durability an item can take.",
        "query.max_health": "Returns the maximum health of the entity, or 0.0 if it doesn't make sense to call on this entity.",
        "query.max_trade_tier": "Returns the maximum trade tier of the entity if it makes sense, else it returns 0.0",
        "query.maximum_frame_time": "Returns the time in *seconds* of the most expensive frame over the last 'n' frames.  If an argument is passed, it is assumed to be the number of frames in the past that you wish to query.  'query.maximum_frame_time' (or the equivalent 'query.maximum_frame_time(0)') will return the frame time of the frame before the current one.  'query.maximum_frame_time(1)' will return the maximum frame time of the previous two frames.  Currently we store the history of the last 30 frames, although note that this may change in the future.  Asking for more frames will result in only sampling the number of frames stored.",
        "query.minimum_frame_time": "Returns the time in *seconds* of the least expensive frame over the last 'n' frames.  If an argument is passed, it is assumed to be the number of frames in the past that you wish to query.  'query.minimum_frame_time' (or the equivalent 'query.minimum_frame_time(0)') will return the frame time of the frame before the current one.  'query.minimum_frame_time(1)' will return the minimum frame time of the previous two frames.  Currently we store the history of the last 30 frames, although note that this may change in the future.  Asking for more frames will result in only sampling the number of frames stored.",
        "query.model_scale": "Returns the scale of the current entity.",
        "query.modified_distance_moved": "Returns the total distance the entity has moved horizontally in meters (since the entity was last loaded, not necessarily since it was originally created) modified along the way by status flags such as is_baby or on_fire.",
        "query.modified_move_speed": "Returns the current walk speed of the entity modified by status flags such as is_baby or on_fire.",
        "query.moon_brightness": "Returns the brightness of the moon (FULL_MOON=1.0, WANING_GIBBOUS=0.75, FIRST_QUARTER=0.5, WANING_CRESCENT=0.25, NEW_MOON=0.0, WAXING_CRESCENT=0.25, LAST_QUARTER=0.5, WAXING_GIBBOUS=0.75).",
        "query.moon_phase": "Returns the phase of the moon (FULL_MOON=0, WANING_GIBBOUS=1, FIRST_QUARTER=2, WANING_CRESCENT=3, NEW_MOON=4, WAXING_CRESCENT=5, LAST_QUARTER=6, WAXING_GIBBOUS=7).",
        "query.movement_direction": "Returns the specified axis of the normalized position delta of the entity.",
        "query.noise": "Queries Perlin Noise Map",
        "query.on_fire_time": "Returns the time that the entity is on fire, else it returns 0.0.",
        "query.out_of_control": "Returns 1.0 if the entity is out of control, else it returns 0.0.",
        "query.overlay_alpha": "DEPRECATED (Do not use - this function is deprecated and will be removed).",
        "query.owner_identifier": "DEPRECATED (Use query.is_owner_identifier_any instead if possible so names can be changed later without breaking content.) Returns the root actor identifier.",
        "query.player_level": "Returns the players level if the actor is a player, otherwise returns 0.",
        "query.position": "Returns the absolute position of an actor.  Takes one argument that represents the desired axis (0 == x-axis, 1 == y-axis, 2 == z-axis).",
        "query.position_delta": "Returns the position delta for an actor.  Takes one argument that represents the desired axis (0 == x-axis, 1 == y-axis, 2 == z-axis).",
        "query.previous_squish_value": "Returns the previous squish value for the current entity, or 0.0 if this doesn't make sense.",
        "query.property": "Takes one argument: the name of the property on the entity. Returns the value of that property if it exists, else 0.0 if not.",
        "query.relative_block_has_all_tags": "Takes an entity-relative position and one or more tag names, and returns either 0 or 1 based on if the block at that position has all of the tags provided.",
        "query.relative_block_has_any_tag": "Takes an entity-relative position and one or more tag names, and returns either 0 or 1 based on if the block at that position has any of the tags provided.",
        "query.remaining_durability": "Returns how much durability an item has remaining.",
        "query.ride_body_x_rotation": "Returns the body pitch world-rotation of the ride an entity, else it returns 0.0.",
        "query.ride_body_y_rotation": "Returns the body yaw world-rotation of the ride of on an entity, else it returns 0.0.",
        "query.ride_head_x_rotation": "Returns the head x world-rotation of the ride of an entity, else it returns 0.0.",
        "query.ride_head_y_rotation": "Takes one optional argument as a parameter. Returns the head y world-rotation of the ride of an entity, else it returns 0.0. First parameter only for horses, zombie horses, skeleton horses, donkeys and mules that clamps rotation in degrees.",
        "query.rider_body_x_rotation": "Returns the body pitch world-rotation of a valid rider at the provided index if called on an entity, else it returns 0.0.",
        "query.rider_body_y_rotation": "Returns the body yaw world-rotation of a valid rider at the provided index if called on an entity, else it returns 0.0.",
        "query.rider_head_x_rotation": "Takes one argument as a parameter. Returns the head x world-rotation of the rider entity at the provided index, else it returns 0.0.",
        "query.rider_head_y_rotation": "Takes one or two arguments as parameters. Returns the head y world-rotation of the rider entity at the provided index, else it returns 0.0. Horses, zombie horses, skeleton horses, donkeys and mules require a second parameter that clamps rotation in degrees.",
        "query.roll_counter": "Returns the roll counter of the entity.",
        "query.rotation_to_camera": "Returns the rotation required to aim at the camera.  Requires one argument representing the rotation axis you would like (0 for x, 1 for y).",
        "query.scoreboard": "Takes one argument - the name of the scoreboard entry for this entity. Returns the specified scoreboard value for this entity. Available only with behavior packs.",
        "query.shake_angle": "Returns the shaking angle of the entity if it makes sense, else it returns 0.0.",
        "query.shake_time": "Returns the shake time of the entity.",
        "query.shield_blocking_bob": "Returns the how much the offhand shield should translate down when blocking and being hit.",
        "query.show_bottom": "Returns 1.0 if we render the entity's bottom, else it returns 0.0.",
        "query.sit_amount": "Returns the current sit amount of the entity.",
        "query.skin_id": "Returns the entity's skin ID",
        "query.sleep_rotation": "Returns the rotation of the bed the player is sleeping on.",
        "query.sneeze_counter": "Returns the sneeze counter of the entity.",
        "query.spellcolor": "Returns a struct representing the entity spell color for the specified entity. The struct contains '.r' '.g' '.b' and '.a' members, each 0.0 to 1.0. If no actor is specified, each member value will be 0.0.",
        "query.standing_scale": "Returns the scale of how standing up the entity is.",
        "query.state_time": "Only valid in an animation controller. Returns the time in seconds in the current animation controller state.",
        "query.structural_integrity": "Returns the structural integrity for the actor, otherwise returns 0.",
        "query.surface_particle_color": "Returns the particle color for the block located in the surface below the actor (scanned up to 10 blocks down). The struct contains '.r' '.g' '.b' and '.a' members, each 0.0 to 1.0. If no actor is specified or if no surface is found, each member value is set to 0.0. Available on the Client (Resource Packs) only.",
        "query.surface_particle_texture_coordinate": "Returns the texture coordinate for generating particles for the block located in the surface below the actor (scanned up to 10 blocks down) in a struct with 'u' and 'v' keys. If no actor is specified or if no surface is found, u and v will be 0.0. Available on the Client (Resource Packs) only.",
        "query.surface_particle_texture_size": "Returns the texture size for generating particles for the block located in the surface below the actor (scanned up to 10 blocks down). If no actor is specified or if no surface is found, each member value will be 0.0. Available on the Client (Resource Packs) only.",
        "query.swell_amount": "Returns how swollen the entity is.",
        "query.swelling_dir": "Returns the swelling direction of the entity if it makes sense, else it returns 0.0.",
        "query.swim_amount": "Returns the amount the current entity is swimming.",
        "query.tail_angle": "Returns the angle of the tail of the entity if it makes sense, else it returns 0.0.",
        "query.target_x_rotation": "Returns the x rotation required to aim at the entity's current target if it has one, else it returns 0.0.",
        "query.target_y_rotation": "Returns the y rotation required to aim at the entity's current target if it has one, else it returns 0.0.",
        "query.texture_frame_index": "Returns the icon index of the experience orb.",
        "query.time_of_day": "Returns the time of day (midnight=0.0, sunrise=0.25, noon=0.5, sunset=0.75) of the dimension the entity is in.",
        "query.time_since_last_vibration_detection": "Returns the time in seconds since the last vibration detected by the actor. On errors or if no vibration has been detected yet, returns -1. Available on the Client (Resource Packs) only.",
        "query.time_stamp": "Returns the current time stamp of the level",
        "query.timer_flag_1": "Returns 1.0 if behavior.timer_flag_1 is running, else it returns 0.0.",
        "query.timer_flag_2": "Returns 1.0 if behavior.timer_flag_2 is running, else it returns 0.0.",
        "query.timer_flag_3": "Returns 1.0 if behavior.timer_flag_3 is running, else it returns 0.0.",
        "query.total_emitter_count": "Returns the total number of active emitters in the world.",
        "query.total_particle_count": "Returns the total number of active particles in the world.",
        "query.trade_tier": "Returns the trade tier of the entity if it makes sense, else it returns 0.0",
        "query.unhappy_counter": "Always returns zero. (Was originally meant to indicate Panda unhappiness but due to an early code change it has always only returned zero)",
        "query.variant": "Returns the entity's variant index",
        "query.vertical_speed": "Returns the speed of the entity up or down in meters/second, where positive is up.",
        "query.walk_distance": "Returns the total distance traveled by an entity while on the ground and not sneaking.",
        "query.wing_flap_position": "Returns the wing flap position of the entity, or 0.0 if this doesn't make sense.",
        "query.wing_flap_speed": "Returns the wing flap speed of the entity, or 0.0 if this doesn't make sense.",
        "query.yaw_speed": "Returns the entity's yaw speed",
    },
    "molangQueryExperimental": {},
}